[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar DDP = Package['ddp-client'].DDP;\nvar DDPServer = Package['ddp-server'].DDPServer;\nvar Random = Package.random.Random;\nvar MongoInternals = Package.mongo.MongoInternals;\nvar Mongo = Package.mongo.Mongo;\nvar Autoupdate = Package.autoupdate.Autoupdate;\nvar ECMAScript = Package.ecmascript.ECMAScript;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar loglevel = Package['practicalmeteor:loglevel'].loglevel;\nvar ObjectLogger = Package['practicalmeteor:loglevel'].ObjectLogger;\nvar chai = Package['practicalmeteor:chai'].chai;\nvar assert = Package['practicalmeteor:chai'].assert;\nvar expect = Package['practicalmeteor:chai'].expect;\nvar should = Package['practicalmeteor:chai'].should;\nvar meteorInstall = Package.modules.meteorInstall;\nvar Buffer = Package.modules.Buffer;\nvar process = Package.modules.process;\nvar Symbol = Package['ecmascript-runtime'].Symbol;\nvar Map = Package['ecmascript-runtime'].Map;\nvar Set = Package['ecmascript-runtime'].Set;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\n\n/* Package-scope variables */\nvar exports, __coffeescriptShare, runTests;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"practicalmeteor:mocha\":{\"meteor\":{\"src\":{\"server\":{\"autoupdate.js\":[\"meteor/autoupdate\",\"meteor/random\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/practicalmeteor_mocha/meteor/src/server/autoupdate.js                                                    //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nvar Autoupdate;module.import(\"meteor/autoupdate\",{\"Autoupdate\":function(v){Autoupdate=v}});var Random;module.import(\"meteor/random\",{\"Random\":function(v){Random=v}});\n                                                                                                                     // 2\n// autoupdate normally won't reload on server-only changes, but when                                                 //\n// running tests in the browser it's nice to have server changes cause                                               //\n// the tests to reload.  Setting the auto update version to a                                                        //\n// different value when the server restarts accomplishes this.                                                       //\nAutoupdate.autoupdateVersion = Random.id();                                                                          // 7\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"index.js\":[\"./setup\",\"./lib/MochaRunner\",\"./reporters/BaseReporter\",\"./reporters/ClientServerBaseReporter\",\"./reporters/HtmlReporter\",\"meteor/tmeasday:test-reporter-helpers\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/practicalmeteor_mocha/meteor/src/index.js                                                                //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({runTests:function(){return runTests},MochaRunner:function(){return MochaRunner},BaseReporter:function(){return BaseReporter},ClientServerBaseReporter:function(){return ClientServerBaseReporter},HtmlReporter:function(){return HtmlReporter},before:function(){return before},after:function(){return after},beforeEach:function(){return beforeEach},afterEach:function(){return afterEach},describe:function(){return describe},xdescribe:function(){return xdescribe},it:function(){return it},xit:function(){return xit},specify:function(){return specify},xspecify:function(){return xspecify},xcontext:function(){return xcontext},context:function(){return context}});module.import(\"./setup\");var MochaRunner;module.import(\"./lib/MochaRunner\",{\"default\":function(v){MochaRunner=v}});var BaseReporter;module.import(\"./reporters/BaseReporter\",{\"default\":function(v){BaseReporter=v}});var ClientServerBaseReporter;module.import(\"./reporters/ClientServerBaseReporter\",{\"default\":function(v){ClientServerBaseReporter=v}});var HtmlReporter;module.import(\"./reporters/HtmlReporter\",{\"default\":function(v){HtmlReporter=v}});var hideOtherCSS,hideApp;module.import('meteor/tmeasday:test-reporter-helpers',{\"hideOtherCSS\":function(v){hideOtherCSS=v},\"hideApp\":function(v){hideApp=v}});\n                                                                                                                     // 2\n                                                                                                                     // 3\n                                                                                                                     // 4\n                                                                                                                     // 5\n                                                                                                                     // 6\n                                                                                                                     //\nvar runTests = function runTests() {                                                                                 // 8\n  hideApp('.mocha-wrapper');                                                                                         // 9\n  hideOtherCSS();                                                                                                    // 10\n  MochaRunner.runEverywhere();                                                                                       // 11\n};                                                                                                                   // 12\n                                                                                                                     //\nvar _global = global;                                                                                                //\nvar before = _global.before;                                                                                         //\nvar after = _global.after;                                                                                           //\nvar beforeEach = _global.beforeEach;                                                                                 //\nvar afterEach = _global.afterEach;                                                                                   //\nvar describe = _global.describe;                                                                                     //\nvar xdescribe = _global.xdescribe;                                                                                   //\nvar it = _global.it;                                                                                                 //\nvar xit = _global.xit;                                                                                               //\nvar specify = _global.specify;                                                                                       //\nvar xspecify = _global.xspecify;                                                                                     //\nvar xcontext = _global.xcontext;                                                                                     //\nvar context = _global.context;                                                                                       //\n                                                                                                                     //\n                                                                                                                     //\n                                                                                                                     // 18\n                                                                                                                     // 19\n                                                                                                                     // 20\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"lib\":{\"MochaRunner.coffee\":[\"./MochaRunner.coffee.js\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/practicalmeteor:mocha/meteor/src/lib/MochaRunner.coffee                                       //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.exports = require(\"./MochaRunner.coffee.js\");\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"MochaRunner.coffee.js\":[\"underscore\",\"mocha/lib/test\",\"mocha/lib/suite\",\"mocha/lib/utils\",\"meteor/mongo\",\"meteor/practicalmeteor:mocha-core\",\"events\",\"meteor/practicalmeteor:loglevel\",\"./../reporters/MeteorPublishReporter\",\"./../reporters/ClientServerReporter\",\"../reporters\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/practicalmeteor_mocha/meteor/src/lib/MochaRunner.coffee.js                                               //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar EventEmitter, MeteorPublishReporter, Mocha, MochaRunner, Mongo, ObjectLogger, Suite, Test, _, log, utils,        // 1\n  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },                                  //\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;                                                                                       //\n                                                                                                                     //\n_ = require(\"underscore\")._;                                                                                         // 1\n                                                                                                                     //\nTest = require(\"mocha/lib/test\");                                                                                    // 1\n                                                                                                                     //\nSuite = require(\"mocha/lib/suite\");                                                                                  // 1\n                                                                                                                     //\nutils = require(\"mocha/lib/utils\");                                                                                  // 1\n                                                                                                                     //\nMongo = require(\"meteor/mongo\").Mongo;                                                                               // 1\n                                                                                                                     //\nMocha = require(\"meteor/practicalmeteor:mocha-core\").Mocha;                                                          // 1\n                                                                                                                     //\nEventEmitter = require(\"events\").EventEmitter;                                                                       // 1\n                                                                                                                     //\nObjectLogger = require(\"meteor/practicalmeteor:loglevel\").ObjectLogger;                                              // 1\n                                                                                                                     //\nMeteorPublishReporter = require(\"./../reporters/MeteorPublishReporter\");                                             // 1\n                                                                                                                     //\nlog = new ObjectLogger('MochaRunner', 'info');                                                                       // 1\n                                                                                                                     //\nMochaRunner = (function(superClass) {                                                                                // 1\n  extend(MochaRunner, superClass);                                                                                   // 14\n                                                                                                                     //\n  MochaRunner.instance = null;                                                                                       // 14\n                                                                                                                     //\n  MochaRunner.get = function() {                                                                                     // 14\n    return MochaRunner.instance != null ? MochaRunner.instance : MochaRunner.instance = new MochaRunner();           //\n  };                                                                                                                 //\n                                                                                                                     //\n  MochaRunner.prototype.VERSION = \"2.4.5_6\";                                                                         // 14\n                                                                                                                     //\n  MochaRunner.prototype.serverRunEvents = null;                                                                      // 14\n                                                                                                                     //\n  MochaRunner.prototype.publishers = {};                                                                             // 14\n                                                                                                                     //\n  function MochaRunner() {                                                                                           // 24\n    this.onServerRunSubscriptionReady = bind(this.onServerRunSubscriptionReady, this);                               // 25\n    this.runServerTests = bind(this.runServerTests, this);                                                           // 25\n    try {                                                                                                            // 25\n      log.enter('constructor');                                                                                      // 26\n      this.utils = utils;                                                                                            // 26\n      this.serverRunEvents = new Mongo.Collection('mochaServerRunEvents');                                           // 26\n      if (Meteor.isServer) {                                                                                         // 29\n        Meteor.methods({                                                                                             // 30\n          \"mocha/runServerTests\": this.runServerTests.bind(this)                                                     // 30\n        });                                                                                                          //\n        this.publish();                                                                                              // 30\n      }                                                                                                              //\n    } finally {                                                                                                      //\n      log[\"return\"]();                                                                                               // 36\n    }                                                                                                                //\n  }                                                                                                                  //\n                                                                                                                     //\n  MochaRunner.prototype.publish = function() {                                                                       // 14\n    var self;                                                                                                        // 40\n    try {                                                                                                            // 40\n      log.enter(\"publish\");                                                                                          // 41\n      self = this;                                                                                                   // 41\n      return Meteor.publish('mochaServerRunEvents', function(runId) {                                                //\n        var base, ex;                                                                                                // 44\n        try {                                                                                                        // 44\n          log.enter('publish.mochaServerRunEvents');                                                                 // 45\n          check(runId, String);                                                                                      // 45\n          expect(this.ready).to.be.a('function');                                                                    // 45\n          if ((base = self.publishers)[runId] == null) {                                                             //\n            base[runId] = this;                                                                                      //\n          }                                                                                                          //\n          this.ready();                                                                                              // 45\n          return void 0;                                                                                             // 51\n        } catch (_error) {                                                                                           //\n          ex = _error;                                                                                               // 53\n          if (ex.stack != null) {                                                                                    // 53\n            log.error(ex.stack);                                                                                     // 53\n          }                                                                                                          //\n          throw new Meteor.Error('unknown-error', (ex.message != null ? ex.message : void 0), (ex.stack != null ? ex.stack : void 0));\n        } finally {                                                                                                  //\n          log[\"return\"]();                                                                                           // 56\n        }                                                                                                            //\n      });                                                                                                            //\n    } finally {                                                                                                      //\n      log[\"return\"]();                                                                                               // 58\n    }                                                                                                                //\n  };                                                                                                                 //\n                                                                                                                     //\n  MochaRunner.prototype.runServerTests = function(runId, grep) {                                                     // 14\n    var mochaRunner;                                                                                                 // 62\n    try {                                                                                                            // 62\n      log.enter(\"runServerTests\", runId);                                                                            // 63\n      check(runId, String);                                                                                          // 63\n      check(grep, Match.Optional(Match.OneOf(null, String)));                                                        // 63\n      expect(runId).to.be.a(\"string\");                                                                               // 63\n      expect(this.publishers[runId], \"publisher\").to.be.an(\"object\");                                                // 63\n      expect(Meteor.isServer).to.be[\"true\"];                                                                         // 63\n      mochaRunner = new Mocha();                                                                                     // 63\n      this._addTestsToMochaRunner(mocha.suite, mochaRunner.suite);                                                   // 63\n      mochaRunner.reporter(MeteorPublishReporter, {                                                                  // 63\n        grep: this.escapeGrep(grep),                                                                                 // 72\n        publisher: this.publishers[runId]                                                                            // 72\n      });                                                                                                            //\n      log.info(\"Starting server side tests with run id \" + runId);                                                   // 63\n      return mochaRunner.run(function(failures) {                                                                    //\n        return log.warn('failures:', failures);                                                                      //\n      });                                                                                                            //\n    } finally {                                                                                                      //\n      log[\"return\"]();                                                                                               // 82\n    }                                                                                                                //\n  };                                                                                                                 //\n                                                                                                                     //\n  MochaRunner.prototype._addTestsToMochaRunner = function(fromSuite, toSuite) {                                      // 14\n    var addHooks, i, j, len, len1, newSuite, ref, ref1, results, suite, test;                                        // 87\n    try {                                                                                                            // 87\n      log.enter(\"_addTestToMochaRunner\");                                                                            // 88\n      addHooks = function(hookName) {                                                                                // 88\n        var hook, i, len, ref;                                                                                       // 91\n        ref = fromSuite[\"_\" + hookName];                                                                             // 91\n        for (i = 0, len = ref.length; i < len; i++) {                                                                // 91\n          hook = ref[i];                                                                                             //\n          toSuite[hookName](hook.title, hook.fn);                                                                    // 92\n        }                                                                                                            // 91\n        return log.debug(\"Hook \" + hookName + \" for '\" + (fromSuite.fullTitle()) + \"' added.\");                      //\n      };                                                                                                             //\n      addHooks(\"beforeAll\");                                                                                         // 88\n      addHooks(\"afterAll\");                                                                                          // 88\n      addHooks(\"beforeEach\");                                                                                        // 88\n      addHooks(\"afterEach\");                                                                                         // 88\n      ref = fromSuite.tests;                                                                                         // 100\n      for (i = 0, len = ref.length; i < len; i++) {                                                                  // 100\n        test = ref[i];                                                                                               //\n        test = new Test(test.title, test.fn);                                                                        // 101\n        toSuite.addTest(test);                                                                                       // 101\n        log.debug(\"Tests for '\" + (fromSuite.fullTitle()) + \"' added.\");                                             // 101\n      }                                                                                                              // 100\n      ref1 = fromSuite.suites;                                                                                       // 105\n      results = [];                                                                                                  // 105\n      for (j = 0, len1 = ref1.length; j < len1; j++) {                                                               //\n        suite = ref1[j];                                                                                             //\n        newSuite = Suite.create(toSuite, suite.title);                                                               // 106\n        newSuite.timeout(suite.timeout());                                                                           // 106\n        log.debug(\"Suite \" + (newSuite.fullTitle()) + \"  added to '\" + (fromSuite.fullTitle()) + \"'.\");              // 106\n        results.push(this._addTestsToMochaRunner(suite, newSuite));                                                  // 106\n      }                                                                                                              // 105\n      return results;                                                                                                //\n    } finally {                                                                                                      //\n      log[\"return\"]();                                                                                               // 112\n    }                                                                                                                //\n  };                                                                                                                 //\n                                                                                                                     //\n  MochaRunner.prototype.runEverywhere = function() {                                                                 // 14\n    try {                                                                                                            // 116\n      log.enter('runEverywhere');                                                                                    // 117\n      expect(Meteor.isClient).to.be[\"true\"];                                                                         // 117\n      this.runId = Random.id();                                                                                      // 117\n      return this.serverRunSubscriptionHandle = Meteor.subscribe('mochaServerRunEvents', this.runId, {               //\n        onReady: _.bind(this.onServerRunSubscriptionReady, this),                                                    // 121\n        onError: _.bind(this.onServerRunSubscriptionError, this)                                                     // 121\n      });                                                                                                            //\n    } finally {                                                                                                      //\n      log[\"return\"]();                                                                                               // 127\n    }                                                                                                                //\n  };                                                                                                                 //\n                                                                                                                     //\n  MochaRunner.prototype.setReporter = function(reporter1) {                                                          // 14\n    this.reporter = reporter1;                                                                                       // 130\n  };                                                                                                                 //\n                                                                                                                     //\n  MochaRunner.prototype.escapeGrep = function(grep) {                                                                // 14\n    var matchOperatorsRe;                                                                                            // 133\n    if (grep == null) {                                                                                              //\n      grep = '';                                                                                                     //\n    }                                                                                                                //\n    try {                                                                                                            // 133\n      log.enter(\"escapeGrep\", grep);                                                                                 // 134\n      matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;                                                                      // 134\n      grep.replace(matchOperatorsRe, '\\\\$&');                                                                        // 134\n      return new RegExp(grep);                                                                                       // 137\n    } finally {                                                                                                      //\n      log[\"return\"]();                                                                                               // 139\n    }                                                                                                                //\n  };                                                                                                                 //\n                                                                                                                     //\n  MochaRunner.prototype.onServerRunSubscriptionReady = function() {                                                  // 14\n    var ClientServerReporter, REPORTERS, query, ref, reporters;                                                      // 143\n    try {                                                                                                            // 143\n      log.enter('onServerRunSubscriptionReady');                                                                     // 144\n      ClientServerReporter = require(\"./../reporters/ClientServerReporter\");                                         // 144\n      ref = require(\"../reporters\"), REPORTERS = ref.REPORTERS, reporters = ref.reporters;                           // 144\n      query = utils.parseQuery(location.search || '');                                                               // 144\n      Meteor.call(\"mocha/runServerTests\", this.runId, query.grep, function(err) {                                    // 144\n        log.debug(\"tests started\");                                                                                  // 150\n        if (err) {                                                                                                   // 151\n          return log.error(err);                                                                                     //\n        }                                                                                                            //\n      });                                                                                                            //\n      return Tracker.autorun((function(_this) {                                                                      //\n        return function() {                                                                                          //\n          var event, reporter;                                                                                       // 154\n          event = _this.serverRunEvents.findOne({                                                                    // 154\n            event: \"run mocha\"                                                                                       // 154\n          });                                                                                                        //\n          if (((event != null ? event.data.reporter : void 0) != null) && _.contains(REPORTERS, event.data.reporter)) {\n            reporter = reporters[event.data.reporter];                                                               // 156\n            _this.setReporter(reporter);                                                                             // 156\n          }                                                                                                          //\n          if ((event != null ? event.data.runOrder : void 0) === \"serial\") {                                         // 159\n            return reporter = new ClientServerReporter(null, {                                                       //\n              runOrder: \"serial\"                                                                                     // 160\n            });                                                                                                      //\n          } else if ((event != null ? event.data.runOrder : void 0) === \"parallel\") {                                //\n            mocha.reporter(ClientServerReporter);                                                                    // 162\n            return mocha.run(function() {});                                                                         //\n          }                                                                                                          //\n        };                                                                                                           //\n      })(this));                                                                                                     //\n    } finally {                                                                                                      //\n      log[\"return\"]();                                                                                               // 168\n    }                                                                                                                //\n  };                                                                                                                 //\n                                                                                                                     //\n  MochaRunner.prototype.onServerRunSubscriptionError = function(meteorError) {                                       // 14\n    try {                                                                                                            // 172\n      log.enter('onServerRunSubscriptionError');                                                                     // 173\n      return log.error(meteorError);                                                                                 //\n    } finally {                                                                                                      //\n      log[\"return\"]();                                                                                               // 176\n    }                                                                                                                //\n  };                                                                                                                 //\n                                                                                                                     //\n  return MochaRunner;                                                                                                //\n                                                                                                                     //\n})(EventEmitter);                                                                                                    //\n                                                                                                                     //\nmodule.exports = MochaRunner.get();                                                                                  // 1\n                                                                                                                     //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"reporters\":{\"BaseReporter.coffee\":[\"./BaseReporter.coffee.js\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/practicalmeteor:mocha/meteor/src/reporters/BaseReporter.coffee                                //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.exports = require(\"./BaseReporter.coffee.js\");\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"BaseReporter.coffee.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/practicalmeteor_mocha/meteor/src/reporters/BaseReporter.coffee.js                                        //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar BaseReporter;                                                                                                    // 13\n                                                                                                                     //\nBaseReporter = (function() {                                                                                         // 13\n  function BaseReporter(runner, options) {                                                                           // 15\n    this.runner = runner;                                                                                            // 16\n    this.options = options;                                                                                          // 16\n    expect(this.runner).to.be.an('object');                                                                          // 16\n    expect(this.options).to.be.an('object');                                                                         // 16\n    this.stats = {                                                                                                   // 16\n      total: this.runner.total,                                                                                      // 18\n      suites: 0,                                                                                                     // 18\n      tests: 0,                                                                                                      // 18\n      passes: 0,                                                                                                     // 18\n      pending: 0,                                                                                                    // 18\n      failures: 0                                                                                                    // 18\n    };                                                                                                               //\n    this.failures = [];                                                                                              // 16\n    this.runner.stats = this.stats;                                                                                  // 16\n    this.runner.on('start', (function(_this) {                                                                       // 16\n      return function() {                                                                                            //\n        return _this.stats.start = new Date;                                                                         //\n      };                                                                                                             //\n    })(this));                                                                                                       //\n    this.runner.on('suite', (function(_this) {                                                                       // 16\n      return function(suite) {                                                                                       //\n        if (!suite.root) {                                                                                           // 27\n          return _this.stats.suites++;                                                                               //\n        }                                                                                                            //\n      };                                                                                                             //\n    })(this));                                                                                                       //\n    this.runner.on('test end', (function(_this) {                                                                    // 16\n      return function(test) {                                                                                        //\n        return _this.stats.tests++;                                                                                  //\n      };                                                                                                             //\n    })(this));                                                                                                       //\n    this.runner.on('pass', (function(_this) {                                                                        // 16\n      return function(test) {                                                                                        //\n        var medium;                                                                                                  // 33\n        medium = test.slow() / 2;                                                                                    // 33\n        if (test.duration > test.slow()) {                                                                           // 34\n          test.speed = 'slow';                                                                                       // 35\n        } else if (test.duration > medium) {                                                                         //\n          test.speed = 'medium';                                                                                     // 37\n        } else {                                                                                                     //\n          test.speed = 'fast';                                                                                       // 39\n        }                                                                                                            //\n        return _this.stats.passes++;                                                                                 //\n      };                                                                                                             //\n    })(this));                                                                                                       //\n    this.runner.on('fail', (function(_this) {                                                                        // 16\n      return function(test, err) {                                                                                   //\n        _this.stats.failures++;                                                                                      // 43\n        test.err = err;                                                                                              // 43\n        return _this.failures.push(test);                                                                            //\n      };                                                                                                             //\n    })(this));                                                                                                       //\n    this.runner.on('end', (function(_this) {                                                                         // 16\n      return function() {                                                                                            //\n        _this.stats.end = new Date;                                                                                  // 48\n        return _this.stats.duration = _this.stats.end - _this.stats.start;                                           //\n      };                                                                                                             //\n    })(this));                                                                                                       //\n    this.runner.on('pending', (function(_this) {                                                                     // 16\n      return function() {                                                                                            //\n        return _this.stats.pending++;                                                                                //\n      };                                                                                                             //\n    })(this));                                                                                                       //\n  }                                                                                                                  //\n                                                                                                                     //\n  return BaseReporter;                                                                                               //\n                                                                                                                     //\n})();                                                                                                                //\n                                                                                                                     //\nmodule.exports = BaseReporter;                                                                                       // 13\n                                                                                                                     //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ClientServerBaseReporter.coffee\":[\"./ClientServerBaseReporter.coffee.js\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/practicalmeteor:mocha/meteor/src/reporters/ClientServerBaseReporter.coffee                    //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.exports = require(\"./ClientServerBaseReporter.coffee.js\");\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"ClientServerBaseReporter.coffee.js\":[\"../lib/MochaRunner\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/practicalmeteor_mocha/meteor/src/reporters/ClientServerBaseReporter.coffee.js                            //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar ClientServerBaseReporter, MochaRunner;                                                                           // 1\n                                                                                                                     //\nMochaRunner = require(\"../lib/MochaRunner\");                                                                         // 1\n                                                                                                                     //\nClientServerBaseReporter = (function() {                                                                             // 1\n  function ClientServerBaseReporter(clientRunner, serverRunner, options) {                                           // 16\n    this.clientRunner = clientRunner;                                                                                // 17\n    this.serverRunner = serverRunner;                                                                                // 17\n    this.options = options;                                                                                          // 17\n    expect(this.clientRunner).to.be.an('object');                                                                    // 17\n    expect(this.serverRunner).to.be.an('object');                                                                    // 17\n    expect(this.options).to.be.an('object');                                                                         // 17\n    this.clientStats = {                                                                                             // 17\n      total: this.clientRunner.total,                                                                                // 21\n      suites: 0,                                                                                                     // 21\n      tests: 0,                                                                                                      // 21\n      passes: 0,                                                                                                     // 21\n      pending: 0,                                                                                                    // 21\n      failures: 0                                                                                                    // 21\n    };                                                                                                               //\n    this.serverStats = {                                                                                             // 17\n      total: this.serverRunner.total,                                                                                // 22\n      suites: 0,                                                                                                     // 22\n      tests: 0,                                                                                                      // 22\n      passes: 0,                                                                                                     // 22\n      pending: 0,                                                                                                    // 22\n      failures: 0                                                                                                    // 22\n    };                                                                                                               //\n    this.stats = {                                                                                                   // 17\n      total: this.serverRunner.total + this.clientRunner.total,                                                      // 23\n      suites: 0,                                                                                                     // 23\n      tests: 0,                                                                                                      // 23\n      passes: 0,                                                                                                     // 23\n      pending: 0,                                                                                                    // 23\n      failures: 0                                                                                                    // 23\n    };                                                                                                               //\n    this.failures = [];                                                                                              // 17\n    this.clientRunner.stats = this.clientStats;                                                                      // 17\n    this.serverRunner.stats = this.serverStats;                                                                      // 17\n    this.registerRunnerEvents(\"server\");                                                                             // 17\n    this.registerRunnerEvents(\"client\");                                                                             // 17\n    MochaRunner.on(\"end all\", (function(_this) {                                                                     // 17\n      return function() {                                                                                            //\n        window.TEST_STATUS = {                                                                                       // 34\n          FAILURES: _this.stats.failures,                                                                            // 34\n          DONE: true                                                                                                 // 34\n        };                                                                                                           //\n        window.DONE = true;                                                                                          // 34\n        return window.FAILURES = _this.stats.failures;                                                               //\n      };                                                                                                             //\n    })(this));                                                                                                       //\n  }                                                                                                                  //\n                                                                                                                     //\n  ClientServerBaseReporter.prototype.registerRunnerEvents = function(where) {                                        // 16\n    this[where + \"Runner\"].on('start', (function(_this) {                                                            // 40\n      return function() {                                                                                            //\n        var base, start;                                                                                             // 41\n        start = new Date();                                                                                          // 41\n        _this[where + \"Stats\"].start = start;                                                                        // 41\n        if ((base = _this.stats).start == null) {                                                                    //\n          base.start = start;                                                                                        //\n        }                                                                                                            //\n                                                                                                                     // 45\n        /*                                                                                                           // 45\n          The total and other stats of the server runner are sent with the 'start' event,                            //\n          so we need to update the total of the stats.                                                               //\n          Also when running in 'serial' mode (server test first and then client tests),                              //\n          clientRunner.total is undefined because client starts running after server tests end.                      //\n         */                                                                                                          //\n        _this.clientStats.total = _this.clientRunner.total;                                                          // 41\n        _this.serverStats.total = _this.serverRunner.total;                                                          // 41\n        return _this.stats.total = _this.clientStats.total + _this.serverStats.total;                                //\n      };                                                                                                             //\n    })(this));                                                                                                       //\n    this[where + \"Runner\"].on('suite', (function(_this) {                                                            // 40\n      return function(suite) {                                                                                       //\n        if (!suite.root) {                                                                                           // 57\n          _this.stats.suites++;                                                                                      // 58\n          return _this[where + \"Stats\"].suites++;                                                                    //\n        }                                                                                                            //\n      };                                                                                                             //\n    })(this));                                                                                                       //\n    this[where + \"Runner\"].on('test end', (function(_this) {                                                         // 40\n      return function(test) {                                                                                        //\n        return _this.stats.tests++;                                                                                  //\n      };                                                                                                             //\n    })(this));                                                                                                       //\n    this[where + \"Runner\"].on('pass', (function(_this) {                                                             // 40\n      return function(test) {                                                                                        //\n        var medium;                                                                                                  // 65\n        medium = test.slow() / 2;                                                                                    // 65\n        if (test.duration > test.slow()) {                                                                           // 67\n          test.speed = 'slow';                                                                                       // 68\n        } else if (test.duration > medium) {                                                                         //\n          test.speed = 'medium';                                                                                     // 70\n        } else {                                                                                                     //\n          test.speed = 'fast';                                                                                       // 72\n        }                                                                                                            //\n        _this[where + \"Stats\"].passes++;                                                                             // 65\n        return _this.stats.passes++;                                                                                 //\n      };                                                                                                             //\n    })(this));                                                                                                       //\n    this[where + \"Runner\"].on('fail', (function(_this) {                                                             // 40\n      return function(test, err) {                                                                                   //\n        if (test.err == null) {                                                                                      //\n          test.err = err;                                                                                            //\n        }                                                                                                            //\n        _this.failures.push(test);                                                                                   // 78\n        _this.stats.failures++;                                                                                      // 78\n        return _this[where + \"Stats\"].failures++;                                                                    //\n      };                                                                                                             //\n    })(this));                                                                                                       //\n    this[where + \"Runner\"].on('end', (function(_this) {                                                              // 40\n      return function() {                                                                                            //\n        var end;                                                                                                     // 86\n        end = new Date();                                                                                            // 86\n        _this.stats.end = end;                                                                                       // 86\n        _this[where + \"Stats\"].end = end;                                                                            // 86\n        _this.stats.duration = _this.stats.end - _this.stats.start;                                                  // 86\n        return _this[where + \"Stats\"].duration = _this[where + \"Stats\"].end - _this[where + \"Stats\"].start;          //\n      };                                                                                                             //\n    })(this));                                                                                                       //\n    return this[where + \"Runner\"].on('pending', (function(_this) {                                                   //\n      return function() {                                                                                            //\n        _this.stats.pending++;                                                                                       // 95\n        return _this[where + \"Stats\"].pending++;                                                                     //\n      };                                                                                                             //\n    })(this));                                                                                                       //\n  };                                                                                                                 //\n                                                                                                                     //\n  return ClientServerBaseReporter;                                                                                   //\n                                                                                                                     //\n})();                                                                                                                //\n                                                                                                                     //\nmodule.exports = ClientServerBaseReporter;                                                                           // 1\n                                                                                                                     //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"ClientServerReporter.coffee\":[\"./ClientServerReporter.coffee.js\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/practicalmeteor:mocha/meteor/src/reporters/ClientServerReporter.coffee                        //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.exports = require(\"./ClientServerReporter.coffee.js\");\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"ClientServerReporter.coffee.js\":[\"underscore\",\"./../lib/MochaRunner\",\"./MirrorReporter\",\"meteor/practicalmeteor:loglevel\",\"events\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/practicalmeteor_mocha/meteor/src/reporters/ClientServerReporter.coffee.js                                //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar ClientServerReporter, EventEmitter, MirrorReporter, MochaRunner, ObjectLogger, _, log,                           // 1\n  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };                                  //\n                                                                                                                     //\n_ = require(\"underscore\")._;                                                                                         // 1\n                                                                                                                     //\nMochaRunner = require(\"./../lib/MochaRunner\");                                                                       // 1\n                                                                                                                     //\nMirrorReporter = require('./MirrorReporter');                                                                        // 1\n                                                                                                                     //\nObjectLogger = require(\"meteor/practicalmeteor:loglevel\").ObjectLogger;                                              // 1\n                                                                                                                     //\nEventEmitter = require(\"events\").EventEmitter;                                                                       // 1\n                                                                                                                     //\nlog = new ObjectLogger('ClientServerReporter', 'info');                                                              // 1\n                                                                                                                     //\nClientServerReporter = (function() {                                                                                 // 1\n  function ClientServerReporter(clientRunner1, options) {                                                            // 12\n    this.clientRunner = clientRunner1;                                                                               // 13\n    this.options = options != null ? options : {};                                                                   // 13\n    this.runTestsSerially = bind(this.runTestsSerially, this);                                                       // 13\n    try {                                                                                                            // 13\n      log.enter('constructor');                                                                                      // 14\n      this.serverRunnerProxy = new EventEmitter();                                                                   // 14\n      if (this.options.runOrder === \"serial\") {                                                                      // 17\n        this.clientRunner = new EventEmitter();                                                                      // 18\n        this.runTestsSerially(this.clientRunner, this.serverRunnerProxy);                                            // 18\n      }                                                                                                              //\n      if (!MochaRunner.reporter) {                                                                                   // 21\n        log.info(\"Missing reporter to run tests. Use MochaRunner.setReporter(reporter) to set one.\");                // 22\n        return;                                                                                                      // 23\n      }                                                                                                              //\n      this.reporter = new MochaRunner.reporter(this.clientRunner, this.serverRunnerProxy, this.options);             // 14\n      this.clientRunner.on(\"start\", function() {                                                                     // 14\n        return window.mochaIsRunning = true;                                                                         //\n      });                                                                                                            //\n      this.clientRunner.on(\"end\", (function(_this) {                                                                 // 14\n        return function() {                                                                                          //\n          window.mochaIsRunning = false;                                                                             // 32\n          window.mochaIsDone = true;                                                                                 // 32\n          MochaRunner.emit(\"end client\");                                                                            // 32\n          _this.clientTestsEnded = true;                                                                             // 32\n          if (_this.serverTestsEnded) {                                                                              // 37\n            return MochaRunner.emit(\"end all\");                                                                      //\n          }                                                                                                          //\n        };                                                                                                           //\n      })(this));                                                                                                     //\n      this.serverRunnerProxy.on('end', (function(_this) {                                                            // 14\n        return function() {                                                                                          //\n          _this.serverTestsEnded = true;                                                                             // 41\n          MochaRunner.emit(\"end server\");                                                                            // 41\n          if (_this.clientTestsEnded) {                                                                              // 43\n            return MochaRunner.emit(\"end all\");                                                                      //\n          }                                                                                                          //\n        };                                                                                                           //\n      })(this));                                                                                                     //\n      MochaRunner.serverRunEvents.find().observe({                                                                   // 14\n        added: _.bind(this.onServerRunnerEvent, this)                                                                // 46\n      });                                                                                                            //\n    } finally {                                                                                                      //\n      log[\"return\"]();                                                                                               // 51\n    }                                                                                                                //\n  }                                                                                                                  //\n                                                                                                                     //\n  ClientServerReporter.prototype.runTestsSerially = function(clientRunner, serverRunnerProxy) {                      // 12\n    try {                                                                                                            // 55\n      log.enter(\"runTestsSerially\");                                                                                 // 56\n      return serverRunnerProxy.on(\"end\", (function(_this) {                                                          //\n        return function() {                                                                                          //\n          mocha.reporter(MirrorReporter, {                                                                           // 58\n            clientRunner: clientRunner                                                                               // 58\n          });                                                                                                        //\n          return mocha.run(function() {});                                                                           //\n        };                                                                                                           //\n      })(this));                                                                                                     //\n    } finally {                                                                                                      //\n      log[\"return\"]();                                                                                               // 64\n    }                                                                                                                //\n  };                                                                                                                 //\n                                                                                                                     //\n  ClientServerReporter.prototype.onServerRunnerEvent = function(doc) {                                               // 12\n    var ex, ref;                                                                                                     // 68\n    try {                                                                                                            // 68\n      log.enter('onServerRunnerEvent');                                                                              // 69\n      expect(doc).to.be.an('object');                                                                                // 69\n      expect(doc.event).to.be.a('string');                                                                           // 69\n      if (doc.event === \"run mocha\") {                                                                               // 72\n        return;                                                                                                      // 73\n      }                                                                                                              //\n      expect(doc.data).to.be.an('object');                                                                           // 69\n      doc.data.fullTitle = function() {                                                                              // 69\n        return doc.data._fullTitle;                                                                                  // 77\n      };                                                                                                             //\n      doc.data.slow = function() {                                                                                   // 69\n        return doc.data._slow;                                                                                       // 78\n      };                                                                                                             //\n      if ((ref = doc.data.err) != null) {                                                                            //\n        ref.toString = function() {                                                                                  //\n          return \"Error: \" + this.message;                                                                           //\n        };                                                                                                           //\n      }                                                                                                              //\n      if (doc.data.parent) {                                                                                         // 81\n        doc.data.parent.fullTitle = function() {                                                                     // 82\n          return doc.data.parent._fullTitle;                                                                         // 82\n        };                                                                                                           //\n        doc.data.parent.slow = function() {                                                                          // 82\n          return doc.data.parent._slow;                                                                              // 83\n        };                                                                                                           //\n      }                                                                                                              //\n      if (doc.event === 'start') {                                                                                   // 86\n        this.serverRunnerProxy.stats = doc.data;                                                                     // 87\n        this.serverRunnerProxy.total = doc.data.total;                                                               // 87\n      }                                                                                                              //\n      return this.serverRunnerProxy.emit(doc.event, doc.data, doc.data.err);                                         //\n    } catch (_error) {                                                                                               //\n      ex = _error;                                                                                                   // 93\n      return log.error(ex);                                                                                          //\n    } finally {                                                                                                      //\n      log[\"return\"]();                                                                                               // 95\n    }                                                                                                                //\n  };                                                                                                                 //\n                                                                                                                     //\n  return ClientServerReporter;                                                                                       //\n                                                                                                                     //\n})();                                                                                                                //\n                                                                                                                     //\nmodule.exports = ClientServerReporter;                                                                               // 1\n                                                                                                                     //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"ConsoleReporter.coffee\":[\"./ConsoleReporter.coffee.js\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/practicalmeteor:mocha/meteor/src/reporters/ConsoleReporter.coffee                             //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.exports = require(\"./ConsoleReporter.coffee.js\");\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"ConsoleReporter.coffee.js\":[\"../lib/MochaRunner\",\"meteor/practicalmeteor:loglevel\",\"./ClientServerBaseReporter\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/practicalmeteor_mocha/meteor/src/reporters/ConsoleReporter.coffee.js                                     //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar ClientServerBaseReporter, ConsoleReporter, MochaRunner, ObjectLogger, log,                                       // 1\n  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },                                  //\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;                                                                                       //\n                                                                                                                     //\nMochaRunner = require(\"../lib/MochaRunner\");                                                                         // 1\n                                                                                                                     //\nObjectLogger = require(\"meteor/practicalmeteor:loglevel\").ObjectLogger;                                              // 1\n                                                                                                                     //\nClientServerBaseReporter = require(\"./ClientServerBaseReporter\");                                                    // 1\n                                                                                                                     //\nlog = new ObjectLogger('ConsoleReporter', 'info');                                                                   // 1\n                                                                                                                     //\nConsoleReporter = (function(superClass) {                                                                            // 1\n  extend(ConsoleReporter, superClass);                                                                               // 11\n                                                                                                                     //\n  function ConsoleReporter(clientRunner, serverRunner, options) {                                                    // 11\n    this.clientRunner = clientRunner;                                                                                // 12\n    this.serverRunner = serverRunner;                                                                                // 12\n    this.options = options;                                                                                          // 12\n    this.finishAndPrintTestsSummary = bind(this.finishAndPrintTestsSummary, this);                                   // 12\n    this.printReporterHeader = bind(this.printReporterHeader, this);                                                 // 12\n    try {                                                                                                            // 12\n      log.enter('constructor');                                                                                      // 13\n      ConsoleReporter.__super__.constructor.call(this, this.clientRunner, this.serverRunner, this.options);          // 13\n      MochaRunner.on(\"end all\", (function(_this) {                                                                   // 13\n        return function() {                                                                                          //\n          return _this.finishAndPrintTestsSummary();                                                                 //\n        };                                                                                                           //\n      })(this));                                                                                                     //\n    } finally {                                                                                                      //\n      log[\"return\"]();                                                                                               // 18\n    }                                                                                                                //\n  }                                                                                                                  //\n                                                                                                                     //\n                                                                                                                     // 20\n  /*                                                                                                                 // 20\n    Overwriting from ClientServerBaseReporter                                                                        //\n   */                                                                                                                //\n                                                                                                                     //\n  ConsoleReporter.prototype.registerRunnerEvents = function(where) {                                                 // 11\n    try {                                                                                                            // 24\n      log.enter(\"registerRunnerEvents\");                                                                             // 25\n      ConsoleReporter.__super__.registerRunnerEvents.call(this, where);                                              // 25\n      this[where + \"Runner\"].on(\"start\", (function(_this) {                                                          // 25\n        return function() {                                                                                          //\n          return _this.printReporterHeader(where);                                                                   //\n        };                                                                                                           //\n      })(this));                                                                                                     //\n      this[where + \"Runner\"].on('test end', (function(_this) {                                                       // 25\n        return function(test) {                                                                                      //\n          return _this.printTest(test, where);                                                                       //\n        };                                                                                                           //\n      })(this));                                                                                                     //\n      return this[where + \"Runner\"].on(\"fail\", (function(_this) {                                                    //\n        return function(hook) {                                                                                      //\n          if (hook.type === 'hook') {                                                                                // 33\n            return _this.printTest(hook, where);                                                                     //\n          }                                                                                                          //\n        };                                                                                                           //\n      })(this));                                                                                                     //\n    } finally {                                                                                                      //\n      log[\"return\"]();                                                                                               // 36\n    }                                                                                                                //\n  };                                                                                                                 //\n                                                                                                                     //\n  ConsoleReporter.prototype.printReporterHeader = function(where) {                                                  // 11\n    try {                                                                                                            // 40\n      log.enter(\"printReporterHeader\", where);                                                                       // 41\n      if (this.options.runOrder !== 'serial') {                                                                      // 42\n        return;                                                                                                      // 42\n      }                                                                                                              //\n      where = where[0].toUpperCase() + where.substr(1);                                                              // 41\n      console.log(\"\\n--------------------------------------------------\");                                           // 41\n      console.log(\"------------------ \" + where + \" tests ------------------\");                                      // 41\n      return console.log(\"--------------------------------------------------\\n\");                                    //\n    } finally {                                                                                                      //\n      log[\"return\"]();                                                                                               // 49\n    }                                                                                                                //\n  };                                                                                                                 //\n                                                                                                                     //\n  ConsoleReporter.prototype.printTest = function(test, where) {                                                      // 11\n    var state;                                                                                                       // 53\n    try {                                                                                                            // 53\n      log.enter(\"prinTest\", test);                                                                                   // 54\n      state = test.state || (test.pending ? \"pending\" : void 0);                                                     // 54\n      if (this.options.runOrder === 'serial') {                                                                      // 59\n        where = \"\";                                                                                                  // 60\n      } else {                                                                                                       //\n        where = where[0].toUpperCase() + \": \";                                                                       // 63\n      }                                                                                                              //\n      console.log(\"\" + where + (test.fullTitle()) + \" : \" + state);                                                  // 54\n      if (test.state === \"failed\") {                                                                                 // 67\n        console.log(\"  \" + (test.err.stack || test.err));                                                            // 68\n      }                                                                                                              //\n      return console.log(\"\");                                                                                        //\n    } finally {                                                                                                      //\n      log[\"return\"]();                                                                                               // 72\n    }                                                                                                                //\n  };                                                                                                                 //\n                                                                                                                     //\n  ConsoleReporter.prototype.finishAndPrintTestsSummary = function() {                                                // 11\n    var ref, ref1;                                                                                                   // 76\n    try {                                                                                                            // 76\n      log.enter(\"finishAndPrintTestsSummary\");                                                                       // 77\n      if ((((ref = this.clientStats) != null ? ref.total : void 0) == null) || (((ref1 = this.serverStats) != null ? ref1.total : void 0) == null)) {\n        return;                                                                                                      // 78\n      }                                                                                                              //\n      console.log(\"\\n--------------------------------------------------\");                                           // 77\n      console.log(\"---------------------RESULTS----------------------\");                                             // 77\n      console.log(\"PASSED:\", this.stats.passes);                                                                     // 77\n      console.log(\"FAILED:\", this.stats.failures);                                                                   // 77\n      console.log(\"SKIPPED:\", this.stats.pending);                                                                   // 77\n      console.log(\"TOTAL:\", this.stats.total);                                                                       // 77\n      console.log(\"--------------------------------------------------\");                                             // 77\n      return console.log(\"--------------------------------------------------\\n\");                                    //\n    } finally {                                                                                                      //\n      log[\"return\"]();                                                                                               // 89\n    }                                                                                                                //\n  };                                                                                                                 //\n                                                                                                                     //\n  return ConsoleReporter;                                                                                            //\n                                                                                                                     //\n})(ClientServerBaseReporter);                                                                                        //\n                                                                                                                     //\nmodule.exports = ConsoleReporter;                                                                                    // 1\n                                                                                                                     //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"HtmlReporter.coffee\":[\"./HtmlReporter.coffee.js\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/practicalmeteor:mocha/meteor/src/reporters/HtmlReporter.coffee                                //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.exports = require(\"./HtmlReporter.coffee.js\");\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"HtmlReporter.coffee.js\":[\"meteor/practicalmeteor:loglevel\",\"./html\",\"./ClientServerBaseReporter\",\"../lib/MochaRunner\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/practicalmeteor_mocha/meteor/src/reporters/HtmlReporter.coffee.js                                        //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar ClientServerBaseReporter, HtmlReporter, MochaHtmlReporter, MochaRunner, ObjectLogger, log,                       // 1\n  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },                                  //\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;                                                                                       //\n                                                                                                                     //\nObjectLogger = require(\"meteor/practicalmeteor:loglevel\").ObjectLogger;                                              // 1\n                                                                                                                     //\nMochaHtmlReporter = require(\"./html\");                                                                               // 1\n                                                                                                                     //\nClientServerBaseReporter = require(\"./ClientServerBaseReporter\");                                                    // 1\n                                                                                                                     //\nMochaRunner = require(\"../lib/MochaRunner\");                                                                         // 1\n                                                                                                                     //\nlog = new ObjectLogger('HtmlReporter', 'info');                                                                      // 1\n                                                                                                                     //\nHtmlReporter = (function(superClass) {                                                                               // 1\n  extend(HtmlReporter, superClass);                                                                                  // 10\n                                                                                                                     //\n  function HtmlReporter(clientRunner, serverRunner, options) {                                                       // 10\n    this.clientRunner = clientRunner;                                                                                // 11\n    this.serverRunner = serverRunner;                                                                                // 11\n    this.options = options != null ? options : {};                                                                   // 11\n    this.addReporterHtml = bind(this.addReporterHtml, this);                                                         // 11\n    try {                                                                                                            // 11\n      log.enter('constructor');                                                                                      // 12\n      this.addReporterHtml();                                                                                        // 12\n      this.reporter = new MochaHtmlReporter(this.clientRunner);                                                      // 12\n      this.serverReporter = new MochaHtmlReporter(this.serverRunner, {                                               // 12\n        elementIdPrefix: 'server-'                                                                                   // 16\n      });                                                                                                            //\n      HtmlReporter.__super__.constructor.call(this, this.clientRunner, this.serverRunner, this.options);             // 12\n    } finally {                                                                                                      //\n      log[\"return\"]();                                                                                               // 21\n    }                                                                                                                //\n  }                                                                                                                  //\n                                                                                                                     //\n                                                                                                                     // 23\n  /*                                                                                                                 // 23\n    Adds the html required by the mocha HTML reporter to the body of the html                                        //\n    document. We modified the mocha HTML reporter to be able to display 2 reporters                                  //\n    at the same time, one for client tests and one for server tests.                                                 //\n    TODO: Create a single meteor reactive reporter.                                                                  //\n   */                                                                                                                //\n                                                                                                                     //\n  HtmlReporter.prototype.addReporterHtml = function() {                                                              // 10\n    var div;                                                                                                         // 30\n    try {                                                                                                            // 30\n      log.enter(\"addReporterHtml\");                                                                                  // 31\n      div = document.createElement('div');                                                                           // 31\n      div.className = 'mocha-wrapper';                                                                               // 31\n      div.innerHTML = '<div class=\"content\"> <div class=\"test-wrapper\"> <h1 class=\"title\">Client tests</h1> <div id=\"mocha\" class=\"mocha\"></div> </div> <div class=\"divider\"></div> <div class=\"test-wrapper\"> <h1 class=\"title\">Server tests</h1> <div id=\"server-mocha\" class=\"mocha\"></div> </div> </div>';\n      return document.body.appendChild(div);                                                                         //\n    } finally {                                                                                                      //\n      log[\"return\"]();                                                                                               // 53\n    }                                                                                                                //\n  };                                                                                                                 //\n                                                                                                                     //\n  return HtmlReporter;                                                                                               //\n                                                                                                                     //\n})(ClientServerBaseReporter);                                                                                        //\n                                                                                                                     //\nmodule.exports = HtmlReporter;                                                                                       // 1\n                                                                                                                     //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"MeteorPublishReporter.coffee\":[\"./MeteorPublishReporter.coffee.js\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/practicalmeteor:mocha/meteor/src/reporters/MeteorPublishReporter.coffee                       //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.exports = require(\"./MeteorPublishReporter.coffee.js\");\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"MeteorPublishReporter.coffee.js\":[\"underscore\",\"./BaseReporter\",\"meteor/practicalmeteor:loglevel\",\"./index\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/practicalmeteor_mocha/meteor/src/reporters/MeteorPublishReporter.coffee.js                               //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar BaseReporter, MeteorPublishReporter, ObjectLogger, _, log,                                                       // 1\n  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },                                  //\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;                                                                                       //\n                                                                                                                     //\n_ = require(\"underscore\")._;                                                                                         // 1\n                                                                                                                     //\nBaseReporter = require(\"./BaseReporter\");                                                                            // 1\n                                                                                                                     //\nObjectLogger = require(\"meteor/practicalmeteor:loglevel\").ObjectLogger;                                              // 1\n                                                                                                                     //\nlog = new ObjectLogger('MeteorPublishReporter', 'info');                                                             // 1\n                                                                                                                     //\nMeteorPublishReporter = (function(superClass) {                                                                      // 1\n  extend(MeteorPublishReporter, superClass);                                                                         // 9\n                                                                                                                     //\n  MeteorPublishReporter.publisher = null;                                                                            // 9\n                                                                                                                     //\n  function MeteorPublishReporter(runner, options) {                                                                  // 11\n    this.errorJSON = bind(this.errorJSON, this);                                                                     // 12\n    this.added = bind(this.added, this);                                                                             // 12\n    var HTML_REPORTER, REPORTERS, mochaReporter, ref;                                                                // 12\n    try {                                                                                                            // 12\n      log.enter('constructor', arguments);                                                                           // 13\n      expect(options.reporterOptions, 'options.reporterOptions').to.be.an('object');                                 // 13\n      runner.grep(options.reporterOptions.grep);                                                                     // 13\n      MeteorPublishReporter.__super__.constructor.call(this, runner, options);                                       // 13\n      this.publisher = options.reporterOptions.publisher;                                                            // 13\n      expect(this.publisher, '@publisher').to.be.an('object');                                                       // 13\n      expect(this.publisher.ready, '@publisher.ready').to.be.a('function');                                          // 13\n      expect(this.publisher.added, '@publisher.added').to.be.a('function');                                          // 13\n      expect(this.publisher.onStop, '@publisher.onStop').to.be.a('function');                                        // 13\n      this.publisher.onStop((function(_this) {                                                                       // 13\n        return function() {                                                                                          //\n          return _this.stopped = true;                                                                               //\n        };                                                                                                           //\n      })(this));                                                                                                     //\n      this.stopped = false;                                                                                          // 13\n      this.sequence = 0;                                                                                             // 13\n      this.added = Meteor.bindEnvironment(this.added, null, this);                                                   // 13\n      ref = require(\"./index\"), REPORTERS = ref.REPORTERS, HTML_REPORTER = ref.HTML_REPORTER;                        // 13\n      mochaReporter = process.env.MOCHA_REPORTER || HTML_REPORTER;                                                   // 13\n      if (mochaReporter && !_.contains(REPORTERS, mochaReporter)) {                                                  // 39\n        log.info(\"Can't find '\" + mochaReporter + \"' reporter. Using '\" + HTML_REPORTER + \"' instead.\");             // 40\n        mochaReporter = HTML_REPORTER;                                                                               // 40\n      }                                                                                                              //\n      this.added('run mocha', {                                                                                      // 13\n        reporter: mochaReporter,                                                                                     // 45\n        runOrder: process.env.MOCHA_RUN_ORDER || 'parallel'                                                          // 45\n      });                                                                                                            //\n      this.runner.on('start', (function(_this) {                                                                     // 13\n        return function() {                                                                                          //\n          try {                                                                                                      // 48\n            log.enter('onStart', arguments);                                                                         // 49\n            return _this.added('start', _this.stats);                                                                //\n          } finally {                                                                                                //\n            log[\"return\"]();                                                                                         // 53\n          }                                                                                                          //\n        };                                                                                                           //\n      })(this));                                                                                                     //\n      this.runner.on('suite', (function(_this) {                                                                     // 13\n        return function(suite) {                                                                                     //\n          try {                                                                                                      // 56\n            log.enter('onSuite', arguments);                                                                         // 57\n            return _this.added('suite', _this.cleanSuite(suite));                                                    //\n          } finally {                                                                                                //\n            log[\"return\"]();                                                                                         // 63\n          }                                                                                                          //\n        };                                                                                                           //\n      })(this));                                                                                                     //\n      this.runner.on('suite end', (function(_this) {                                                                 // 13\n        return function(suite) {                                                                                     //\n          try {                                                                                                      // 66\n            log.enter('onSuiteEnd', arguments);                                                                      // 67\n            return _this.added('suite end', _this.cleanSuite(suite));                                                //\n          } finally {                                                                                                //\n            log[\"return\"]();                                                                                         // 70\n          }                                                                                                          //\n        };                                                                                                           //\n      })(this));                                                                                                     //\n      this.runner.on('test end', (function(_this) {                                                                  // 13\n        return function(test) {                                                                                      //\n          try {                                                                                                      // 73\n            log.enter('onTestEnd', arguments);                                                                       // 74\n            return _this.added('test end', _this.cleanTest(test));                                                   //\n          } finally {                                                                                                //\n            log[\"return\"]();                                                                                         // 77\n          }                                                                                                          //\n        };                                                                                                           //\n      })(this));                                                                                                     //\n      this.runner.on('pass', (function(_this) {                                                                      // 13\n        return function(test) {                                                                                      //\n          try {                                                                                                      // 80\n            log.enter('onPass', arguments);                                                                          // 81\n            return _this.added('pass', _this.cleanTest(test));                                                       //\n          } finally {                                                                                                //\n            log[\"return\"]();                                                                                         // 84\n          }                                                                                                          //\n        };                                                                                                           //\n      })(this));                                                                                                     //\n      this.runner.on('fail', (function(_this) {                                                                      // 13\n        return function(test, error) {                                                                               //\n          try {                                                                                                      // 87\n            log.enter('onFail', arguments);                                                                          // 88\n            return _this.added('fail', _this.cleanTest(test));                                                       //\n          } finally {                                                                                                //\n            log[\"return\"]();                                                                                         // 91\n          }                                                                                                          //\n        };                                                                                                           //\n      })(this));                                                                                                     //\n      this.runner.on('end', (function(_this) {                                                                       // 13\n        return function() {                                                                                          //\n          try {                                                                                                      // 94\n            log.enter('onEnd', arguments);                                                                           // 95\n            return _this.added('end', _this.stats);                                                                  //\n          } finally {                                                                                                //\n            log[\"return\"]();                                                                                         // 98\n          }                                                                                                          //\n        };                                                                                                           //\n      })(this));                                                                                                     //\n      this.runner.on('pending', (function(_this) {                                                                   // 13\n        return function(test) {                                                                                      //\n          try {                                                                                                      // 101\n            log.enter('onPending', arguments);                                                                       // 102\n            log.debug(\"test\", test);                                                                                 // 102\n            return _this.added('pending', _this.cleanTest(test));                                                    //\n          } finally {                                                                                                //\n            log[\"return\"]();                                                                                         // 106\n          }                                                                                                          //\n        };                                                                                                           //\n      })(this));                                                                                                     //\n    } finally {                                                                                                      //\n      log[\"return\"]();                                                                                               // 108\n    }                                                                                                                //\n  }                                                                                                                  //\n                                                                                                                     //\n  MeteorPublishReporter.prototype.added = function(event, data) {                                                    // 9\n    var doc, ex;                                                                                                     // 112\n    try {                                                                                                            // 112\n      log.enter('added', arguments);                                                                                 // 113\n      if (this.stopped === true) {                                                                                   // 115\n        return;                                                                                                      // 115\n      }                                                                                                              //\n      this.sequence++;                                                                                               // 113\n      doc = {                                                                                                        // 113\n        _id: \"\" + this.sequence,                                                                                     // 118\n        event: event,                                                                                                // 118\n        data: data                                                                                                   // 118\n      };                                                                                                             //\n      return this.publisher.added('mochaServerRunEvents', doc._id, doc);                                             //\n    } catch (_error) {                                                                                               //\n      ex = _error;                                                                                                   // 123\n      log.error(\"Can't send report data to client.\");                                                                // 123\n      log.error(\"Error:\", ex.stack || ex.message);                                                                   // 123\n      return log.error(\"Document:\", doc);                                                                            //\n    } finally {                                                                                                      //\n      log[\"return\"]();                                                                                               // 127\n    }                                                                                                                //\n  };                                                                                                                 //\n                                                                                                                     //\n                                                                                                                     // 130\n  /**                                                                                                                // 130\n   * Return a plain-object representation of `test`                                                                  //\n   * free of cyclic properties etc.                                                                                  //\n  #                                                                                                                  //\n   * @param {Object} test                                                                                            //\n   * @return {Object}                                                                                                //\n   * @api private                                                                                                    //\n   */                                                                                                                //\n                                                                                                                     //\n  MeteorPublishReporter.prototype.cleanTest = function(test) {                                                       // 9\n    var ex, properties, ref;                                                                                         // 139\n    try {                                                                                                            // 139\n      log.enter(\"cleanTest\", arguments);                                                                             // 140\n      properties = [\"title\", \"type\", \"state\", \"speed\", \"pending\", \"duration\", \"async\", \"sync\", \"_timeout\", \"_slow\", \"body\"];\n      return _.extend(_.pick(test, properties), {                                                                    // 144\n        _fullTitle: test.fullTitle(),                                                                                // 144\n        parent: this.cleanSuite(test.parent),                                                                        // 144\n        fn: (ref = test.fn) != null ? ref.toString() : void 0,                                                       // 144\n        err: this.errorJSON(test.err),                                                                               // 144\n        isServer: true                                                                                               // 144\n      });                                                                                                            //\n    } catch (_error) {                                                                                               //\n      ex = _error;                                                                                                   // 153\n      return log.error(ex);                                                                                          //\n    } finally {                                                                                                      //\n      log[\"return\"]();                                                                                               // 156\n    }                                                                                                                //\n  };                                                                                                                 //\n                                                                                                                     //\n  MeteorPublishReporter.prototype.cleanSuite = function(suite) {                                                     // 9\n    var ex;                                                                                                          // 160\n    try {                                                                                                            // 160\n      log.enter(\"cleanSuite\", arguments);                                                                            // 161\n      return _.extend(_.pick(suite, [\"title\", \"root\", \"pending\"]), {                                                 // 162\n        _fullTitle: suite.fullTitle(),                                                                               // 162\n        isServer: true                                                                                               // 162\n      });                                                                                                            //\n    } catch (_error) {                                                                                               //\n      ex = _error;                                                                                                   // 167\n      return log.error(ex);                                                                                          //\n    } finally {                                                                                                      //\n      log[\"return\"]();                                                                                               // 169\n    }                                                                                                                //\n  };                                                                                                                 //\n                                                                                                                     //\n                                                                                                                     // 171\n  /**                                                                                                                // 171\n   * Transform `error` into a JSON object.                                                                           //\n   * @param {Error} err                                                                                              //\n   * @return {Object}                                                                                                //\n   */                                                                                                                //\n                                                                                                                     //\n  MeteorPublishReporter.prototype.errorJSON = function(err) {                                                        // 9\n    if (!err) {                                                                                                      // 178\n      return;                                                                                                        // 178\n    }                                                                                                                //\n                                                                                                                     // 179\n    /*                                                                                                               // 179\n      Only picking the defaults properties define by ECMAScript to avoid problems                                    //\n      with custom error that may have properties that can't be stringify such as functions.                          //\n      See https://goo.gl/bsZh3B and https://goo.gl/AFp6KB                                                            //\n     */                                                                                                              //\n    return _.pick(err, [\"name\", \"message\", \"stack\"]);                                                                // 184\n  };                                                                                                                 //\n                                                                                                                     //\n  return MeteorPublishReporter;                                                                                      //\n                                                                                                                     //\n})(BaseReporter);                                                                                                    //\n                                                                                                                     //\nmodule.exports = MeteorPublishReporter;                                                                              // 1\n                                                                                                                     //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"MirrorReporter.coffee\":[\"./MirrorReporter.coffee.js\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/practicalmeteor:mocha/meteor/src/reporters/MirrorReporter.coffee                              //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.exports = require(\"./MirrorReporter.coffee.js\");\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"MirrorReporter.coffee.js\":[\"meteor/practicalmeteor:loglevel\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/practicalmeteor_mocha/meteor/src/reporters/MirrorReporter.coffee.js                                      //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar MirrorReporter, ObjectLogger, log;                                                                               // 1\n                                                                                                                     //\nObjectLogger = require(\"meteor/practicalmeteor:loglevel\").ObjectLogger;                                              // 1\n                                                                                                                     //\nlog = new ObjectLogger('MirrorReporter', 'info');                                                                    // 1\n                                                                                                                     //\nMirrorReporter = (function() {                                                                                       // 1\n  function MirrorReporter(mochaReporter, options) {                                                                  // 6\n    var clientRunner, ref;                                                                                           // 8\n    this.mochaReporter = mochaReporter;                                                                              // 8\n    clientRunner = (ref = options.reporterOptions) != null ? ref.clientRunner : void 0;                              // 8\n    expect(clientRunner, \"clientRunner\").to.be.ok;                                                                   // 8\n    clientRunner.total = this.mochaReporter.total;                                                                   // 8\n    this.mochaReporter.on('start', (function(_this) {                                                                // 8\n      return function() {                                                                                            //\n        try {                                                                                                        // 15\n          log.enter('onStart', arguments);                                                                           // 16\n          return clientRunner.emit.call(clientRunner, 'start');                                                      //\n        } finally {                                                                                                  //\n          log[\"return\"]();                                                                                           // 19\n        }                                                                                                            //\n      };                                                                                                             //\n    })(this));                                                                                                       //\n    this.mochaReporter.on('suite', (function(_this) {                                                                // 8\n      return function(suite) {                                                                                       //\n        try {                                                                                                        // 22\n          log.enter('onSuite', arguments);                                                                           // 23\n          return clientRunner.emit.call(clientRunner, 'suite', suite);                                               //\n        } finally {                                                                                                  //\n          log[\"return\"]();                                                                                           // 26\n        }                                                                                                            //\n      };                                                                                                             //\n    })(this));                                                                                                       //\n    this.mochaReporter.on('suite end', (function(_this) {                                                            // 8\n      return function(suite) {                                                                                       //\n        try {                                                                                                        // 29\n          log.enter('onSuiteEnd', arguments);                                                                        // 30\n          return clientRunner.emit.call(clientRunner, 'suite end', suite);                                           //\n        } finally {                                                                                                  //\n          log[\"return\"]();                                                                                           // 33\n        }                                                                                                            //\n      };                                                                                                             //\n    })(this));                                                                                                       //\n    this.mochaReporter.on('test end', (function(_this) {                                                             // 8\n      return function(test) {                                                                                        //\n        try {                                                                                                        // 36\n          log.enter('onTestEnd', arguments);                                                                         // 37\n          return clientRunner.emit.call(clientRunner, 'test end', test);                                             //\n        } finally {                                                                                                  //\n          log[\"return\"]();                                                                                           // 40\n        }                                                                                                            //\n      };                                                                                                             //\n    })(this));                                                                                                       //\n    this.mochaReporter.on('pass', (function(_this) {                                                                 // 8\n      return function(test) {                                                                                        //\n        try {                                                                                                        // 43\n          log.enter('onPass', arguments);                                                                            // 44\n          return clientRunner.emit.call(clientRunner, 'pass', test);                                                 //\n        } finally {                                                                                                  //\n          log[\"return\"]();                                                                                           // 47\n        }                                                                                                            //\n      };                                                                                                             //\n    })(this));                                                                                                       //\n    this.mochaReporter.on('fail', (function(_this) {                                                                 // 8\n      return function(test, error) {                                                                                 //\n        try {                                                                                                        // 50\n          log.enter('onFail', arguments);                                                                            // 51\n          return clientRunner.emit.call(clientRunner, 'fail', test, error);                                          //\n        } finally {                                                                                                  //\n          log[\"return\"]();                                                                                           // 54\n        }                                                                                                            //\n      };                                                                                                             //\n    })(this));                                                                                                       //\n    this.mochaReporter.on('end', (function(_this) {                                                                  // 8\n      return function() {                                                                                            //\n        try {                                                                                                        // 57\n          log.enter('onEnd', arguments);                                                                             // 58\n          return clientRunner.emit.call(clientRunner, 'end');                                                        //\n        } finally {                                                                                                  //\n          log[\"return\"]();                                                                                           // 61\n        }                                                                                                            //\n      };                                                                                                             //\n    })(this));                                                                                                       //\n    this.mochaReporter.on('pending', (function(_this) {                                                              // 8\n      return function(test) {                                                                                        //\n        try {                                                                                                        // 64\n          log.enter('onPending', arguments);                                                                         // 65\n          return clientRunner.emit.call(clientRunner, 'pending', test);                                              //\n        } finally {                                                                                                  //\n          log[\"return\"]();                                                                                           // 69\n        }                                                                                                            //\n      };                                                                                                             //\n    })(this));                                                                                                       //\n  }                                                                                                                  //\n                                                                                                                     //\n  return MirrorReporter;                                                                                             //\n                                                                                                                     //\n})();                                                                                                                //\n                                                                                                                     //\nmodule.exports = MirrorReporter;                                                                                     // 1\n                                                                                                                     //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"XunitReporter.coffee\":[\"./XunitReporter.coffee.js\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/practicalmeteor:mocha/meteor/src/reporters/XunitReporter.coffee                               //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.exports = require(\"./XunitReporter.coffee.js\");\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"XunitReporter.coffee.js\":[\"../lib/MochaRunner\",\"./ConsoleReporter\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/practicalmeteor_mocha/meteor/src/reporters/XunitReporter.coffee.js                                       //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar ConsoleReporter, MochaRunner, XUnitReporter,                                                                     // 1\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;                                                                                       //\n                                                                                                                     //\nMochaRunner = require(\"../lib/MochaRunner\");                                                                         // 1\n                                                                                                                     //\nConsoleReporter = require(\"./ConsoleReporter\");                                                                      // 1\n                                                                                                                     //\nXUnitReporter = (function(superClass) {                                                                              // 1\n  extend(XUnitReporter, superClass);                                                                                 // 6\n                                                                                                                     //\n  XUnitReporter.VERSION = \"0.1.0\";                                                                                   // 6\n                                                                                                                     //\n  XUnitReporter.prototype.xUnitPrefix = \"##_meteor_magic##xunit: \";                                                  // 6\n                                                                                                                     //\n  function XUnitReporter(clientRunner, serverRunner, options) {                                                      // 9\n    this.clientRunner = clientRunner;                                                                                // 11\n    this.serverRunner = serverRunner;                                                                                // 11\n    this.options = options;                                                                                          // 11\n    this.clientTests = [];                                                                                           // 11\n    this.serverTests = [];                                                                                           // 11\n    MochaRunner.on(\"end all\", (function(_this) {                                                                     // 11\n      return function() {                                                                                            //\n        return _this.printTestSuite();                                                                               //\n      };                                                                                                             //\n    })(this));                                                                                                       //\n    XUnitReporter.__super__.constructor.call(this, this.clientRunner, this.serverRunner, this.options);              // 11\n  }                                                                                                                  //\n                                                                                                                     //\n                                                                                                                     // 21\n  /*                                                                                                                 // 21\n    Overwrite from ConsoleReporter                                                                                   //\n   */                                                                                                                //\n                                                                                                                     //\n  XUnitReporter.prototype.registerRunnerEvents = function(where) {                                                   // 6\n    XUnitReporter.__super__.registerRunnerEvents.call(this, where);                                                  // 26\n    this[where + \"Runner\"].on('pending', (function(_this) {                                                          // 26\n      return function(test) {                                                                                        //\n        return _this[where + \"Tests\"].push(test);                                                                    //\n      };                                                                                                             //\n    })(this));                                                                                                       //\n    this[where + \"Runner\"].on('pass', (function(_this) {                                                             // 26\n      return function(test) {                                                                                        //\n        return _this[where + \"Tests\"].push(test);                                                                    //\n      };                                                                                                             //\n    })(this));                                                                                                       //\n    return this[where + \"Runner\"].on('fail', (function(_this) {                                                      //\n      return function(test) {                                                                                        //\n        return _this[where + \"Tests\"].push(test);                                                                    //\n      };                                                                                                             //\n    })(this));                                                                                                       //\n  };                                                                                                                 //\n                                                                                                                     //\n  XUnitReporter.prototype.printTestSuite = function() {                                                              // 6\n    var testSuite;                                                                                                   // 40\n    testSuite = {                                                                                                    // 40\n      name: 'Mocha Tests',                                                                                           // 40\n      tests: this.stats.total,                                                                                       // 40\n      failures: this.stats.failures,                                                                                 // 40\n      errors: this.stats.failures,                                                                                   // 40\n      timestamp: (new Date).toUTCString(),                                                                           // 40\n      time: this.stats.duration / 1000 || 0,                                                                         // 40\n      skipped: this.stats.pending                                                                                    // 40\n    };                                                                                                               //\n    this.write(this.createTag('testsuite', testSuite, false));                                                       // 40\n    this.clientTests.forEach((function(_this) {                                                                      // 40\n      return function(test) {                                                                                        //\n        return _this.printTestCase(test, \"Client\");                                                                  //\n      };                                                                                                             //\n    })(this));                                                                                                       //\n    this.serverTests.forEach((function(_this) {                                                                      // 40\n      return function(test) {                                                                                        //\n        return _this.printTestCase(test, \"Server\");                                                                  //\n      };                                                                                                             //\n    })(this));                                                                                                       //\n    return this.write('</testsuite>');                                                                               //\n  };                                                                                                                 //\n                                                                                                                     //\n                                                                                                                     // 61\n  /**                                                                                                                // 61\n   * HTML tag helper.                                                                                                //\n  #                                                                                                                  //\n   * @param name                                                                                                     //\n   * @param attrs                                                                                                    //\n   * @param close                                                                                                    //\n   * @param content                                                                                                  //\n   * @return {string}                                                                                                //\n   */                                                                                                                //\n                                                                                                                     //\n  XUnitReporter.prototype.createTag = function(name, attrs, close, content) {                                        // 6\n    var end, key, pairs, tag;                                                                                        // 71\n    if (attrs == null) {                                                                                             //\n      attrs = {};                                                                                                    //\n    }                                                                                                                //\n    end = close ? '/>' : '>';                                                                                        // 71\n    pairs = [];                                                                                                      // 71\n    tag = void 0;                                                                                                    // 71\n    for (key in attrs) {                                                                                             // 75\n      if (Object.prototype.hasOwnProperty.call(attrs, key)) {                                                        // 76\n        pairs.push(key + '=\"' + this.escape(attrs[key]) + '\"');                                                      // 77\n      }                                                                                                              //\n    }                                                                                                                // 75\n    tag = '<' + name + (pairs.length ? ' ' + pairs.join(' ') : '') + end;                                            // 71\n    if (content) {                                                                                                   // 81\n      tag += content + '</' + name + end;                                                                            // 82\n    }                                                                                                                //\n    return tag;                                                                                                      // 84\n  };                                                                                                                 //\n                                                                                                                     //\n                                                                                                                     // 86\n  /**                                                                                                                // 86\n   * Return cdata escaped CDATA `str`.                                                                               //\n   */                                                                                                                //\n                                                                                                                     //\n  XUnitReporter.prototype.cdata = function(str) {                                                                    // 6\n    return '<![CDATA[' + this.escape(str) + ']]>';                                                                   //\n  };                                                                                                                 //\n                                                                                                                     //\n                                                                                                                     // 93\n  /**                                                                                                                // 93\n   * Override done to close the stream (if it's a file).                                                             //\n  #                                                                                                                  //\n   * @param failures                                                                                                 //\n   * @param {Function} fn                                                                                            //\n   */                                                                                                                //\n                                                                                                                     //\n  XUnitReporter.prototype.done = function(failures, fn) {                                                            // 6\n    return fn(failures);                                                                                             //\n  };                                                                                                                 //\n                                                                                                                     //\n                                                                                                                     // 103\n  /**                                                                                                                // 103\n   * Write out the given line.                                                                                       //\n  #                                                                                                                  //\n   * @param {string} line                                                                                            //\n   */                                                                                                                //\n                                                                                                                     //\n  XUnitReporter.prototype.write = function(line) {                                                                   // 6\n    return console.log(this.xUnitPrefix + line);                                                                     //\n  };                                                                                                                 //\n                                                                                                                     //\n                                                                                                                     // 112\n  /**                                                                                                                // 112\n   * Output tag for the given `test.`                                                                                //\n  #                                                                                                                  //\n   * @param {Test} test                                                                                              //\n   */                                                                                                                //\n                                                                                                                     //\n  XUnitReporter.prototype.printTestCase = function(test, where) {                                                    // 6\n    var attrs, err, stack;                                                                                           // 119\n    attrs = {                                                                                                        // 119\n      classname: where + \" \" + (test.parent.fullTitle()),                                                            // 120\n      name: test.title,                                                                                              // 120\n      time: test.duration / 1000 || 0                                                                                // 120\n    };                                                                                                               //\n    if (test.state === 'failed') {                                                                                   // 124\n      err = test.err;                                                                                                // 125\n      stack = this.escapeStack(err.stack);                                                                           // 125\n      this.write(this.createTag('testcase', attrs, false, this.createTag('failure', {}, false, this.cdata(this.escape(err.message) + '\\n' + stack))));\n    } else if (test.pending) {                                                                                       //\n      this.write(this.createTag('testcase', attrs, false, this.createTag('skipped', {}, true)));                     // 129\n    } else {                                                                                                         //\n      this.write(this.createTag('testcase', attrs, true));                                                           // 131\n    }                                                                                                                //\n  };                                                                                                                 //\n                                                                                                                     //\n                                                                                                                     // 135\n  /**                                                                                                                // 135\n   * Escape special characters in the given string of html.                                                          //\n  #                                                                                                                  //\n   * @api private                                                                                                    //\n   * @param  {string} html                                                                                           //\n   * @return {string}                                                                                                //\n   */                                                                                                                //\n                                                                                                                     //\n  XUnitReporter.prototype.escape = function(html) {                                                                  // 6\n    return String(html).replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/</g, '&lt;').replace(/>/g, '&gt;');  //\n  };                                                                                                                 //\n                                                                                                                     //\n                                                                                                                     // 151\n  /**                                                                                                                // 151\n   * For each line add the @xUnitPrefix and escape special characters in the given string of html.                   //\n  #                                                                                                                  //\n   * @api private                                                                                                    //\n   * @param  {string} stack                                                                                          //\n   * @return {string}                                                                                                //\n   */                                                                                                                //\n                                                                                                                     //\n  XUnitReporter.prototype.escapeStack = function(stack) {                                                            // 6\n    if (stack == null) {                                                                                             //\n      stack = \"\";                                                                                                    //\n    }                                                                                                                //\n    return stack.split(\"\\n\").map((function(_this) {                                                                  // 160\n      return function(s) {                                                                                           //\n        return _this.xUnitPrefix + _this.escape(s);                                                                  //\n      };                                                                                                             //\n    })(this)).join(\"\\n\");                                                                                            //\n  };                                                                                                                 //\n                                                                                                                     //\n  return XUnitReporter;                                                                                              //\n                                                                                                                     //\n})(ConsoleReporter);                                                                                                 //\n                                                                                                                     //\nmodule.exports = XUnitReporter;                                                                                      // 1\n                                                                                                                     //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"html.js\":[\"../../../lib/reporters/base\",\"../../../lib/utils\",\"../../../lib/browser/progress\",\"escape-string-regexp\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/practicalmeteor_mocha/meteor/src/reporters/html.js                                                       //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n/* eslint-env browser */                                                                                             //\n                                                                                                                     //\n/**                                                                                                                  //\n * Module dependencies.                                                                                              //\n */                                                                                                                  //\nvar Base = require('../../../lib/reporters/base');                                                                   // 6\nvar utils = require('../../../lib/utils');                                                                           // 7\nvar Progress = require('../../../lib/browser/progress');                                                             // 8\nvar escapeRe = require('escape-string-regexp');                                                                      // 9\nvar escape = utils.escape;                                                                                           // 10\n/**                                                                                                                  //\n * Save timer references to avoid Sinon interfering (see GH-237).                                                    //\n */                                                                                                                  //\n                                                                                                                     //\n/* eslint-disable no-unused-vars, no-native-reassign */                                                              //\nvar Date = global.Date;                                                                                              // 16\nvar setTimeout = global.setTimeout;                                                                                  // 17\nvar setInterval = global.setInterval;                                                                                // 18\nvar clearTimeout = global.clearTimeout;                                                                              // 19\nvar clearInterval = global.clearInterval;                                                                            // 20\n/* eslint-enable no-unused-vars, no-native-reassign */                                                               //\n                                                                                                                     //\n/**                                                                                                                  //\n * Expose `HTML`.                                                                                                    //\n */                                                                                                                  //\n                                                                                                                     //\nexports = module.exports = HTML;                                                                                     // 27\n                                                                                                                     //\n/**                                                                                                                  //\n * Initialize a new `HTML` reporter.                                                                                 //\n *                                                                                                                   //\n * @param {Runner} runner                                                                                            //\n * @api public                                                                                                       //\n */                                                                                                                  //\n                                                                                                                     //\nfunction HTML(runner, options) {                                                                                     // 36\n  Base.call(this, runner);                                                                                           // 37\n  options = options || {};                                                                                           // 38\n  options.elementIdPrefix = options.elementIdPrefix || \"\";                                                           // 39\n                                                                                                                     //\n  /**                                                                                                                //\n   * Stats template.                                                                                                 //\n   */                                                                                                                //\n  var statsTemplate = '<ul id=\"' + options.elementIdPrefix + 'mocha-stats\"' + ' class=\"mocha-stats\">' + '<li class=\"progress\"><canvas width=\"40\" height=\"40\"></canvas></li>' + '<li class=\"passes\"><a href=\"#\">passes:</a> <em>0</em></li>' + '<li class=\"failures\"><a href=\"#\">failures:</a> <em>0</em></li>' + '<li class=\"duration\">duration: <em>0</em>s</li>' + '</ul>';\n                                                                                                                     //\n  var self = this,                                                                                                   // 53\n      stats = this.stats,                                                                                            // 53\n      stat = fragment(statsTemplate),                                                                                // 53\n      items = stat.getElementsByTagName('li'),                                                                       // 53\n      passes = items[1].getElementsByTagName('em')[0],                                                               // 53\n      passesLink = items[1].getElementsByTagName('a')[0],                                                            // 53\n      failures = items[2].getElementsByTagName('em')[0],                                                             // 53\n      failuresLink = items[2].getElementsByTagName('a')[0],                                                          // 53\n      duration = items[3].getElementsByTagName('em')[0],                                                             // 53\n      canvas = stat.getElementsByTagName('canvas')[0],                                                               // 53\n      report = fragment('<ul id=\"' + options.elementIdPrefix + 'mocha-report\"' + ' class=\"mocha-report\"></ul>'),     // 53\n      stack = [report],                                                                                              // 53\n      progress,                                                                                                      // 53\n      ctx,                                                                                                           // 53\n      root = document.getElementById(options.elementIdPrefix + 'mocha');                                             // 53\n                                                                                                                     //\n  if (canvas.getContext) {                                                                                           // 70\n    var ratio = window.devicePixelRatio || 1;                                                                        // 71\n    canvas.style.width = canvas.width;                                                                               // 72\n    canvas.style.height = canvas.height;                                                                             // 73\n    canvas.width *= ratio;                                                                                           // 74\n    canvas.height *= ratio;                                                                                          // 75\n    ctx = canvas.getContext('2d');                                                                                   // 76\n    ctx.scale(ratio, ratio);                                                                                         // 77\n    progress = new Progress();                                                                                       // 78\n  }                                                                                                                  // 79\n                                                                                                                     //\n  if (!root) {                                                                                                       // 81\n    return error(options.elementIdPrefix + 'mocha div missing, add it to your document');                            // 82\n  }                                                                                                                  // 83\n                                                                                                                     //\n  // pass toggle                                                                                                     //\n  on(passesLink, 'click', function () {                                                                              // 86\n    unhide();                                                                                                        // 87\n    var name = /pass/.test(report.className) ? '' : ' pass';                                                         // 88\n    report.className = report.className.replace(/fail|pass/g, '') + name;                                            // 89\n    if (report.className.trim()) {                                                                                   // 90\n      hideSuitesWithout('test pass');                                                                                // 91\n    }                                                                                                                // 92\n  });                                                                                                                // 93\n                                                                                                                     //\n  // failure toggle                                                                                                  //\n  on(failuresLink, 'click', function () {                                                                            // 96\n    unhide();                                                                                                        // 97\n    var name = /fail/.test(report.className) ? '' : ' fail';                                                         // 98\n    report.className = report.className.replace(/fail|pass/g, '') + name;                                            // 99\n    if (report.className.trim()) {                                                                                   // 100\n      hideSuitesWithout('test fail');                                                                                // 101\n    }                                                                                                                // 102\n  });                                                                                                                // 103\n                                                                                                                     //\n  root.appendChild(stat);                                                                                            // 105\n  root.appendChild(report);                                                                                          // 106\n                                                                                                                     //\n  if (progress) {                                                                                                    // 108\n    progress.size(40);                                                                                               // 109\n  }                                                                                                                  // 110\n                                                                                                                     //\n  runner.on('suite', function (suite) {                                                                              // 112\n    if (suite.root) {                                                                                                // 113\n      return;                                                                                                        // 114\n    }                                                                                                                // 115\n                                                                                                                     //\n    // suite                                                                                                         //\n    var url = self.suiteURL(suite);                                                                                  // 118\n    var el = fragment('<li class=\"suite\"><h1><a href=\"%s\">%s</a></h1></li>', url, escape(suite.title));              // 119\n                                                                                                                     //\n    // container                                                                                                     //\n    stack[0].appendChild(el);                                                                                        // 122\n    stack.unshift(document.createElement('ul'));                                                                     // 123\n    el.appendChild(stack[0]);                                                                                        // 124\n  });                                                                                                                // 125\n                                                                                                                     //\n  runner.on('suite end', function (suite) {                                                                          // 127\n    if (suite.root) {                                                                                                // 128\n      return;                                                                                                        // 129\n    }                                                                                                                // 130\n    stack.shift();                                                                                                   // 131\n  });                                                                                                                // 132\n                                                                                                                     //\n  runner.on('fail', function (test) {                                                                                // 134\n    test.body = test.body || test.fn.toString();                                                                     // 135\n    // For type = 'test' its possible that the test failed due to multiple                                           //\n    // done() calls. So report the issue here.                                                                       //\n    if (test.type === 'hook') {                                                                                      // 138\n      runner.emit('test end', test);                                                                                 // 139\n    }                                                                                                                // 140\n  });                                                                                                                // 141\n                                                                                                                     //\n  runner.on('test end', function (test) {                                                                            // 143\n    // TODO: add to stats                                                                                            //\n    var percent = stats.tests / this.total * 100 | 0;                                                                // 145\n    if (progress) {                                                                                                  // 146\n      progress.update(percent).draw(ctx);                                                                            // 147\n    }                                                                                                                // 148\n                                                                                                                     //\n    // update stats                                                                                                  //\n    var ms = new Date() - stats.start;                                                                               // 151\n    text(passes, stats.passes);                                                                                      // 152\n    text(failures, stats.failures);                                                                                  // 153\n    text(duration, (ms / 1000).toFixed(2));                                                                          // 154\n                                                                                                                     //\n    // test                                                                                                          //\n    var el;                                                                                                          // 157\n    if (test.state === 'passed') {                                                                                   // 158\n      var url = self.testURL(test);                                                                                  // 159\n      el = fragment('<li class=\"test pass %e\"><h2>%e<span class=\"duration\">%ems</span> <a href=\"%s\" class=\"replay\">‣</a></h2></li>', test.speed, test.title, test.duration, url);\n    } else if (test.pending) {                                                                                       // 161\n      el = fragment('<li class=\"test pass pending\"><h2>%e</h2></li>', test.title);                                   // 162\n    } else {                                                                                                         // 163\n      el = fragment('<li class=\"test fail\"><h2>%e <a href=\"%e\" class=\"replay\">‣</a></h2></li>', test.title, self.testURL(test));\n      var stackString; // Note: Includes leading newline                                                             // 165\n      var message = test.err.toString();                                                                             // 166\n                                                                                                                     //\n      // <=IE7 stringifies to [Object Error]. Since it can be overloaded, we                                         //\n      // check for the result of the stringifying.                                                                   //\n      if (message === '[object Error]') {                                                                            // 170\n        message = test.err.message;                                                                                  // 171\n      }                                                                                                              // 172\n                                                                                                                     //\n      if (test.err.stack) {                                                                                          // 174\n        var indexOfMessage = test.err.stack.indexOf(test.err.message);                                               // 175\n        if (indexOfMessage === -1) {                                                                                 // 176\n          stackString = test.err.stack;                                                                              // 177\n        } else {                                                                                                     // 178\n          stackString = test.err.stack.substr(test.err.message.length + indexOfMessage);                             // 179\n        }                                                                                                            // 180\n      } else if (test.err.sourceURL && test.err.line !== undefined) {                                                // 181\n        // Safari doesn't give you a stack. Let's at least provide a source line.                                    //\n        stackString = '\\n(' + test.err.sourceURL + ':' + test.err.line + ')';                                        // 183\n      }                                                                                                              // 184\n                                                                                                                     //\n      stackString = stackString || '';                                                                               // 186\n                                                                                                                     //\n      if (test.err.htmlMessage && stackString) {                                                                     // 188\n        el.appendChild(fragment('<div class=\"html-error\">%s\\n<pre class=\"error\">%e</pre></div>', test.err.htmlMessage, stackString));\n      } else if (test.err.htmlMessage) {                                                                             // 190\n        el.appendChild(fragment('<div class=\"html-error\">%s</div>', test.err.htmlMessage));                          // 191\n      } else {                                                                                                       // 192\n        el.appendChild(fragment('<pre class=\"error\">%e%e</pre>', message, stackString));                             // 193\n      }                                                                                                              // 194\n    }                                                                                                                // 195\n                                                                                                                     //\n    // toggle code                                                                                                   //\n    // TODO: defer                                                                                                   //\n    if (!test.pending) {                                                                                             // 199\n      var h2 = el.getElementsByTagName('h2')[0];                                                                     // 200\n                                                                                                                     //\n      on(h2, 'click', function () {                                                                                  // 202\n        pre.style.display = pre.style.display === 'none' ? 'block' : 'none';                                         // 203\n      });                                                                                                            // 204\n                                                                                                                     //\n      var pre = fragment('<pre><code>%e</code></pre>', utils.clean(test.body));                                      // 206\n      el.appendChild(pre);                                                                                           // 207\n      pre.style.display = 'none';                                                                                    // 208\n    }                                                                                                                // 209\n                                                                                                                     //\n    // Don't call .appendChild if #mocha-report was already .shift()'ed off the stack.                               //\n    if (stack[0]) {                                                                                                  // 212\n      stack[0].appendChild(el);                                                                                      // 213\n    }                                                                                                                // 214\n  });                                                                                                                // 215\n}                                                                                                                    // 216\n                                                                                                                     //\n/**                                                                                                                  //\n * Makes a URL, preserving querystring (\"search\") parameters.                                                        //\n *                                                                                                                   //\n * @param {string} s                                                                                                 //\n * @return {string} A new URL.                                                                                       //\n */                                                                                                                  //\nfunction makeUrl(s) {                                                                                                // 224\n  var search = window.location.search;                                                                               // 225\n                                                                                                                     //\n  // Remove previous grep query parameter if present                                                                 //\n  if (search) {                                                                                                      // 228\n    search = search.replace(/[?&]grep=[^&\\s]*/g, '').replace(/^&/, '?');                                             // 229\n  }                                                                                                                  // 230\n                                                                                                                     //\n  return window.location.pathname + (search ? search + '&' : '?') + 'grep=' + encodeURIComponent(escapeRe(s));       // 232\n}                                                                                                                    // 233\n                                                                                                                     //\n/**                                                                                                                  //\n * Provide suite URL.                                                                                                //\n *                                                                                                                   //\n * @param {Object} [suite]                                                                                           //\n */                                                                                                                  //\nHTML.prototype.suiteURL = function (suite) {                                                                         // 240\n  return makeUrl(suite.fullTitle());                                                                                 // 241\n};                                                                                                                   // 242\n                                                                                                                     //\n/**                                                                                                                  //\n * Provide test URL.                                                                                                 //\n *                                                                                                                   //\n * @param {Object} [test]                                                                                            //\n */                                                                                                                  //\nHTML.prototype.testURL = function (test) {                                                                           // 249\n  return makeUrl(test.fullTitle());                                                                                  // 250\n};                                                                                                                   // 251\n                                                                                                                     //\n/**                                                                                                                  //\n * Display error `msg`.                                                                                              //\n *                                                                                                                   //\n * @param {string} msg                                                                                               //\n */                                                                                                                  //\nfunction error(msg) {                                                                                                // 258\n  document.body.appendChild(fragment('<div class=\"mocha-error\">%s</div>', msg));                                     // 259\n}                                                                                                                    // 260\n                                                                                                                     //\n/**                                                                                                                  //\n * Return a DOM fragment from `html`.                                                                                //\n *                                                                                                                   //\n * @param {string} html                                                                                              //\n */                                                                                                                  //\nfunction fragment(html) {                                                                                            // 267\n  var args = arguments;                                                                                              // 268\n  var div = document.createElement('div');                                                                           // 269\n  var i = 1;                                                                                                         // 270\n                                                                                                                     //\n  div.innerHTML = html.replace(/%([se])/g, function (_, type) {                                                      // 272\n    switch (type) {                                                                                                  // 273\n      case 's':                                                                                                      // 274\n        return String(args[i++]);                                                                                    // 274\n      case 'e':                                                                                                      // 275\n        return escape(args[i++]);                                                                                    // 275\n      // no default                                                                                                  //\n    }                                                                                                                // 273\n  });                                                                                                                // 278\n                                                                                                                     //\n  return div.firstChild;                                                                                             // 280\n}                                                                                                                    // 281\n                                                                                                                     //\n/**                                                                                                                  //\n * Check for suites that do not have elements                                                                        //\n * with `classname`, and hide them.                                                                                  //\n *                                                                                                                   //\n * @param {text} classname                                                                                           //\n */                                                                                                                  //\nfunction hideSuitesWithout(classname) {                                                                              // 289\n  var suites = document.getElementsByClassName('suite');                                                             // 290\n  for (var i = 0; i < suites.length; i++) {                                                                          // 291\n    var els = suites[i].getElementsByClassName(classname);                                                           // 292\n    if (!els.length) {                                                                                               // 293\n      suites[i].className += ' hidden';                                                                              // 294\n    }                                                                                                                // 295\n  }                                                                                                                  // 296\n}                                                                                                                    // 297\n                                                                                                                     //\n/**                                                                                                                  //\n * Unhide .hidden suites.                                                                                            //\n */                                                                                                                  //\nfunction unhide() {                                                                                                  // 302\n  var els = document.getElementsByClassName('suite hidden');                                                         // 303\n  for (var i = 0; i < els.length; ++i) {                                                                             // 304\n    els[i].className = els[i].className.replace('suite hidden', 'suite');                                            // 305\n  }                                                                                                                  // 306\n}                                                                                                                    // 307\n                                                                                                                     //\n/**                                                                                                                  //\n * Set an element's text contents.                                                                                   //\n *                                                                                                                   //\n * @param {HTMLElement} el                                                                                           //\n * @param {string} contents                                                                                          //\n */                                                                                                                  //\nfunction text(el, contents) {                                                                                        // 315\n  if (el.textContent) {                                                                                              // 316\n    el.textContent = contents;                                                                                       // 317\n  } else {                                                                                                           // 318\n    el.innerText = contents;                                                                                         // 319\n  }                                                                                                                  // 320\n}                                                                                                                    // 321\n                                                                                                                     //\n/**                                                                                                                  //\n * Listen on `event` with callback `fn`.                                                                             //\n */                                                                                                                  //\nfunction on(el, event, fn) {                                                                                         // 326\n  if (el.addEventListener) {                                                                                         // 327\n    el.addEventListener(event, fn, false);                                                                           // 328\n  } else {                                                                                                           // 329\n    el.attachEvent('on' + event, fn);                                                                                // 330\n  }                                                                                                                  // 331\n}                                                                                                                    // 332\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"index.js\":[\"./ConsoleReporter\",\"./XunitReporter\",\"./HtmlReporter\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/practicalmeteor_mocha/meteor/src/reporters/index.js                                                      //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.export({HTML_REPORTER:function(){return HTML_REPORTER},CONSOLE_REPORTER:function(){return CONSOLE_REPORTER},XUNIT_REPORTER:function(){return XUNIT_REPORTER},REPORTERS:function(){return REPORTERS},reporters:function(){return reporters}});var ConsoleReporter;module.import(\"./ConsoleReporter\",{\"default\":function(v){ConsoleReporter=v}});var XunitReporter;module.import(\"./XunitReporter\",{\"default\":function(v){XunitReporter=v}});var HtmlReporter;module.import(\"./HtmlReporter\",{\"default\":function(v){HtmlReporter=v}});\n                                                                                                                     // 2\n                                                                                                                     // 3\n                                                                                                                     //\nvar HTML_REPORTER = 'html';                                                                                          // 6\nvar CONSOLE_REPORTER = 'console';                                                                                    // 7\nvar XUNIT_REPORTER = 'xunit';                                                                                        // 8\nvar REPORTERS = [HTML_REPORTER, CONSOLE_REPORTER, XUNIT_REPORTER];                                                   // 9\nvar reporters = {};                                                                                                  // 10\nreporters[HTML_REPORTER] = HtmlReporter;                                                                             // 11\nreporters[CONSOLE_REPORTER] = ConsoleReporter;                                                                       // 12\nreporters[XUNIT_REPORTER] = XunitReporter;                                                                           // 13\n                                                                                                                     // 14\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"setup\":{\"index.js\":[\"meteor/practicalmeteor:mocha-core\",\"./setupMochaClient\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/practicalmeteor_mocha/meteor/src/setup/index.js                                                          //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nvar mochaInstance;module.import(\"meteor/practicalmeteor:mocha-core\",{\"mochaInstance\":function(v){mochaInstance=v}});var setupMochaClient;module.import(\"./setupMochaClient\",{\"default\":function(v){setupMochaClient=v}});\n                                                                                                                     // 2\n                                                                                                                     //\nif (Meteor.isClient) {                                                                                               // 4\n  setupMochaClient();                                                                                                // 5\n}                                                                                                                    // 6\nif (Meteor.isServer) {                                                                                               // 7\n  global.mocha = mochaInstance;                                                                                      // 8\n}                                                                                                                    // 9\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"setupMochaClient.js\":[\"meteor/modules\",\"meteor-node-stubs\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/practicalmeteor_mocha/meteor/src/setup/setupMochaClient.js                                               //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nvar meteorInstall;module.import(\"meteor/modules\",{\"meteorInstall\":function(v){meteorInstall=v}});                    // 1\n                                                                                                                     //\n// Here we are creating stubs packages to be availabe on the client side.                                            //\n// This must be called before require('mocha')                                                                       //\n// See an example from https://goo.gl/us9YVR                                                                         //\n                                                                                                                     //\nmodule.export(\"default\",exports.default=(function () {                                                               // 7\n                                                                                                                     //\n  process.browser = true;                                                                                            // 9\n                                                                                                                     //\n  require(\"meteor-node-stubs\");                                                                                      // 11\n                                                                                                                     //\n  meteorInstall({                                                                                                    // 13\n    node_modules: {                                                                                                  // 14\n      \"tty.js\": function ttyJs(r, e, module) {                                                                       // 15\n        module.exports = { isatty: function isatty() {                                                               // 16\n            return false;                                                                                            // 16\n          } };                                                                                                       // 16\n      }                                                                                                              // 17\n    }                                                                                                                // 14\n  });                                                                                                                // 13\n                                                                                                                     //\n  meteorInstall({                                                                                                    // 21\n    node_modules: {                                                                                                  // 22\n      \"constants.js\": function constantsJs(r, e, module) {                                                           // 23\n        module.exports = {                                                                                           // 24\n          test: { 'test': 'test' }                                                                                   // 25\n        };                                                                                                           // 24\n      }                                                                                                              // 27\n    }                                                                                                                // 22\n  });                                                                                                                // 21\n}));                                                                                                                 // 32\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}}},\"lib\":{\"ms.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/practicalmeteor_mocha/lib/ms.js                                                                          //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n/**                                                                                                                  //\n * Helpers.                                                                                                          //\n */                                                                                                                  //\n                                                                                                                     //\nvar s = 1000;                                                                                                        // 5\nvar m = s * 60;                                                                                                      // 6\nvar h = m * 60;                                                                                                      // 7\nvar d = h * 24;                                                                                                      // 8\nvar y = d * 365.25;                                                                                                  // 9\n                                                                                                                     //\n/**                                                                                                                  //\n * Parse or format the given `val`.                                                                                  //\n *                                                                                                                   //\n * Options:                                                                                                          //\n *                                                                                                                   //\n *  - `long` verbose formatting [false]                                                                              //\n *                                                                                                                   //\n * @api public                                                                                                       //\n * @param {string|number} val                                                                                        //\n * @param {Object} options                                                                                           //\n * @return {string|number}                                                                                           //\n */                                                                                                                  //\nmodule.exports = function (val, options) {                                                                           // 23\n  options = options || {};                                                                                           // 24\n  if (typeof val === 'string') {                                                                                     // 25\n    return parse(val);                                                                                               // 26\n  }                                                                                                                  // 27\n  // https://github.com/mochajs/mocha/pull/1035                                                                      //\n  return options['long'] ? longFormat(val) : shortFormat(val);                                                       // 29\n};                                                                                                                   // 30\n                                                                                                                     //\n/**                                                                                                                  //\n * Parse the given `str` and return milliseconds.                                                                    //\n *                                                                                                                   //\n * @api private                                                                                                      //\n * @param {string} str                                                                                               //\n * @return {number}                                                                                                  //\n */                                                                                                                  //\nfunction parse(str) {                                                                                                // 39\n  var match = /^((?:\\d+)?\\.?\\d+) *(ms|seconds?|s|minutes?|m|hours?|h|days?|d|years?|y)?$/i.exec(str);                // 40\n  if (!match) {                                                                                                      // 41\n    return;                                                                                                          // 42\n  }                                                                                                                  // 43\n  var n = parseFloat(match[1]);                                                                                      // 44\n  var type = (match[2] || 'ms').toLowerCase();                                                                       // 45\n  switch (type) {                                                                                                    // 46\n    case 'years':                                                                                                    // 47\n    case 'year':                                                                                                     // 48\n    case 'y':                                                                                                        // 49\n      return n * y;                                                                                                  // 50\n    case 'days':                                                                                                     // 51\n    case 'day':                                                                                                      // 52\n    case 'd':                                                                                                        // 53\n      return n * d;                                                                                                  // 54\n    case 'hours':                                                                                                    // 55\n    case 'hour':                                                                                                     // 56\n    case 'h':                                                                                                        // 57\n      return n * h;                                                                                                  // 58\n    case 'minutes':                                                                                                  // 59\n    case 'minute':                                                                                                   // 60\n    case 'm':                                                                                                        // 61\n      return n * m;                                                                                                  // 62\n    case 'seconds':                                                                                                  // 63\n    case 'second':                                                                                                   // 64\n    case 's':                                                                                                        // 65\n      return n * s;                                                                                                  // 66\n    case 'ms':                                                                                                       // 67\n      return n;                                                                                                      // 68\n    default:                                                                                                         // 69\n    // No default case                                                                                               //\n  }                                                                                                                  // 46\n}                                                                                                                    // 72\n                                                                                                                     //\n/**                                                                                                                  //\n * Short format for `ms`.                                                                                            //\n *                                                                                                                   //\n * @api private                                                                                                      //\n * @param {number} ms                                                                                                //\n * @return {string}                                                                                                  //\n */                                                                                                                  //\nfunction shortFormat(ms) {                                                                                           // 81\n  if (ms >= d) {                                                                                                     // 82\n    return Math.round(ms / d) + 'd';                                                                                 // 83\n  }                                                                                                                  // 84\n  if (ms >= h) {                                                                                                     // 85\n    return Math.round(ms / h) + 'h';                                                                                 // 86\n  }                                                                                                                  // 87\n  if (ms >= m) {                                                                                                     // 88\n    return Math.round(ms / m) + 'm';                                                                                 // 89\n  }                                                                                                                  // 90\n  if (ms >= s) {                                                                                                     // 91\n    return Math.round(ms / s) + 's';                                                                                 // 92\n  }                                                                                                                  // 93\n  return ms + 'ms';                                                                                                  // 94\n}                                                                                                                    // 95\n                                                                                                                     //\n/**                                                                                                                  //\n * Long format for `ms`.                                                                                             //\n *                                                                                                                   //\n * @api private                                                                                                      //\n * @param {number} ms                                                                                                //\n * @return {string}                                                                                                  //\n */                                                                                                                  //\nfunction longFormat(ms) {                                                                                            // 104\n  return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';\n}                                                                                                                    // 110\n                                                                                                                     //\n/**                                                                                                                  //\n * Pluralization helper.                                                                                             //\n *                                                                                                                   //\n * @api private                                                                                                      //\n * @param {number} ms                                                                                                //\n * @param {number} n                                                                                                 //\n * @param {string} name                                                                                              //\n */                                                                                                                  //\nfunction plural(ms, n, name) {                                                                                       // 120\n  if (ms < n) {                                                                                                      // 121\n    return;                                                                                                          // 122\n  }                                                                                                                  // 123\n  if (ms < n * 1.5) {                                                                                                // 124\n    return Math.floor(ms / n) + ' ' + name;                                                                          // 125\n  }                                                                                                                  // 126\n  return Math.ceil(ms / n) + ' ' + name + 's';                                                                       // 127\n}                                                                                                                    // 128\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"utils.js\":[\"path\",\"debug\",\"fs\",\"glob\",\"util\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/practicalmeteor_mocha/lib/utils.js                                                                       //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n/* eslint-env browser */                                                                                             //\n                                                                                                                     //\n/**                                                                                                                  //\n * Module dependencies.                                                                                              //\n */                                                                                                                  //\n                                                                                                                     //\nvar basename = require('path').basename;                                                                             // 7\nvar debug = require('debug')('mocha:watch');                                                                         // 8\nvar exists = require('fs').existsSync || require('path').existsSync;                                                 // 9\nvar glob = require('glob');                                                                                          // 10\nvar join = require('path').join;                                                                                     // 11\nvar readdirSync = require('fs').readdirSync;                                                                         // 12\nvar statSync = require('fs').statSync;                                                                               // 13\nvar watchFile = require('fs').watchFile;                                                                             // 14\n                                                                                                                     //\n/**                                                                                                                  //\n * Ignored directories.                                                                                              //\n */                                                                                                                  //\n                                                                                                                     //\nvar ignore = ['node_modules', '.git'];                                                                               // 20\n                                                                                                                     //\nexports.inherits = require('util').inherits;                                                                         // 22\n                                                                                                                     //\n/**                                                                                                                  //\n * Escape special characters in the given string of html.                                                            //\n *                                                                                                                   //\n * @api private                                                                                                      //\n * @param  {string} html                                                                                             //\n * @return {string}                                                                                                  //\n */                                                                                                                  //\nexports.escape = function (html) {                                                                                   // 31\n  return String(html).replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/</g, '&lt;').replace(/>/g, '&gt;');    // 32\n};                                                                                                                   // 37\n                                                                                                                     //\n/**                                                                                                                  //\n * Array#forEach (<=IE8)                                                                                             //\n *                                                                                                                   //\n * @api private                                                                                                      //\n * @param {Array} arr                                                                                                //\n * @param {Function} fn                                                                                              //\n * @param {Object} scope                                                                                             //\n */                                                                                                                  //\nexports.forEach = function (arr, fn, scope) {                                                                        // 47\n  for (var i = 0, l = arr.length; i < l; i++) {                                                                      // 48\n    fn.call(scope, arr[i], i);                                                                                       // 49\n  }                                                                                                                  // 50\n};                                                                                                                   // 51\n                                                                                                                     //\n/**                                                                                                                  //\n * Test if the given obj is type of string.                                                                          //\n *                                                                                                                   //\n * @api private                                                                                                      //\n * @param {Object} obj                                                                                               //\n * @return {boolean}                                                                                                 //\n */                                                                                                                  //\nexports.isString = function (obj) {                                                                                  // 60\n  return typeof obj === 'string';                                                                                    // 61\n};                                                                                                                   // 62\n                                                                                                                     //\n/**                                                                                                                  //\n * Array#map (<=IE8)                                                                                                 //\n *                                                                                                                   //\n * @api private                                                                                                      //\n * @param {Array} arr                                                                                                //\n * @param {Function} fn                                                                                              //\n * @param {Object} scope                                                                                             //\n * @return {Array}                                                                                                   //\n */                                                                                                                  //\nexports.map = function (arr, fn, scope) {                                                                            // 73\n  var result = [];                                                                                                   // 74\n  for (var i = 0, l = arr.length; i < l; i++) {                                                                      // 75\n    result.push(fn.call(scope, arr[i], i, arr));                                                                     // 76\n  }                                                                                                                  // 77\n  return result;                                                                                                     // 78\n};                                                                                                                   // 79\n                                                                                                                     //\n/**                                                                                                                  //\n * Array#indexOf (<=IE8)                                                                                             //\n *                                                                                                                   //\n * @api private                                                                                                      //\n * @param {Array} arr                                                                                                //\n * @param {Object} obj to find index of                                                                              //\n * @param {number} start                                                                                             //\n * @return {number}                                                                                                  //\n */                                                                                                                  //\nexports.indexOf = function (arr, obj, start) {                                                                       // 90\n  for (var i = start || 0, l = arr.length; i < l; i++) {                                                             // 91\n    if (arr[i] === obj) {                                                                                            // 92\n      return i;                                                                                                      // 93\n    }                                                                                                                // 94\n  }                                                                                                                  // 95\n  return -1;                                                                                                         // 96\n};                                                                                                                   // 97\n                                                                                                                     //\n/**                                                                                                                  //\n * Array#reduce (<=IE8)                                                                                              //\n *                                                                                                                   //\n * @api private                                                                                                      //\n * @param {Array} arr                                                                                                //\n * @param {Function} fn                                                                                              //\n * @param {Object} val Initial value.                                                                                //\n * @return {*}                                                                                                       //\n */                                                                                                                  //\nexports.reduce = function (arr, fn, val) {                                                                           // 108\n  var rval = val;                                                                                                    // 109\n                                                                                                                     //\n  for (var i = 0, l = arr.length; i < l; i++) {                                                                      // 111\n    rval = fn(rval, arr[i], i, arr);                                                                                 // 112\n  }                                                                                                                  // 113\n                                                                                                                     //\n  return rval;                                                                                                       // 115\n};                                                                                                                   // 116\n                                                                                                                     //\n/**                                                                                                                  //\n * Array#filter (<=IE8)                                                                                              //\n *                                                                                                                   //\n * @api private                                                                                                      //\n * @param {Array} arr                                                                                                //\n * @param {Function} fn                                                                                              //\n * @return {Array}                                                                                                   //\n */                                                                                                                  //\nexports.filter = function (arr, fn) {                                                                                // 126\n  var ret = [];                                                                                                      // 127\n                                                                                                                     //\n  for (var i = 0, l = arr.length; i < l; i++) {                                                                      // 129\n    var val = arr[i];                                                                                                // 130\n    if (fn(val, i, arr)) {                                                                                           // 131\n      ret.push(val);                                                                                                 // 132\n    }                                                                                                                // 133\n  }                                                                                                                  // 134\n                                                                                                                     //\n  return ret;                                                                                                        // 136\n};                                                                                                                   // 137\n                                                                                                                     //\n/**                                                                                                                  //\n * Object.keys (<=IE8)                                                                                               //\n *                                                                                                                   //\n * @api private                                                                                                      //\n * @param {Object} obj                                                                                               //\n * @return {Array} keys                                                                                              //\n */                                                                                                                  //\nexports.keys = typeof Object.keys === 'function' ? Object.keys : function (obj) {                                    // 146\n  var keys = [];                                                                                                     // 147\n  var has = Object.prototype.hasOwnProperty; // for `window` on <=IE8                                                // 148\n                                                                                                                     //\n  for (var key in obj) {                                                                                             // 150\n    if (has.call(obj, key)) {                                                                                        // 151\n      keys.push(key);                                                                                                // 152\n    }                                                                                                                // 153\n  }                                                                                                                  // 154\n                                                                                                                     //\n  return keys;                                                                                                       // 156\n};                                                                                                                   // 157\n                                                                                                                     //\n/**                                                                                                                  //\n * Watch the given `files` for changes                                                                               //\n * and invoke `fn(file)` on modification.                                                                            //\n *                                                                                                                   //\n * @api private                                                                                                      //\n * @param {Array} files                                                                                              //\n * @param {Function} fn                                                                                              //\n */                                                                                                                  //\nexports.watch = function (files, fn) {                                                                               // 167\n  var options = { interval: 100 };                                                                                   // 168\n  files.forEach(function (file) {                                                                                    // 169\n    debug('file %s', file);                                                                                          // 170\n    watchFile(file, options, function (curr, prev) {                                                                 // 171\n      if (prev.mtime < curr.mtime) {                                                                                 // 172\n        fn(file);                                                                                                    // 173\n      }                                                                                                              // 174\n    });                                                                                                              // 175\n  });                                                                                                                // 176\n};                                                                                                                   // 177\n                                                                                                                     //\n/**                                                                                                                  //\n * Array.isArray (<=IE8)                                                                                             //\n *                                                                                                                   //\n * @api private                                                                                                      //\n * @param {Object} obj                                                                                               //\n * @return {Boolean}                                                                                                 //\n */                                                                                                                  //\nvar isArray = typeof Array.isArray === 'function' ? Array.isArray : function (obj) {                                 // 186\n  return Object.prototype.toString.call(obj) === '[object Array]';                                                   // 187\n};                                                                                                                   // 188\n                                                                                                                     //\nexports.isArray = isArray;                                                                                           // 190\n                                                                                                                     //\n/**                                                                                                                  //\n * Buffer.prototype.toJSON polyfill.                                                                                 //\n *                                                                                                                   //\n * @type {Function}                                                                                                  //\n */                                                                                                                  //\nif (typeof Buffer !== 'undefined' && Buffer.prototype) {                                                             // 197\n  Buffer.prototype.toJSON = Buffer.prototype.toJSON || function () {                                                 // 198\n    return Array.prototype.slice.call(this, 0);                                                                      // 199\n  };                                                                                                                 // 200\n}                                                                                                                    // 201\n                                                                                                                     //\n/**                                                                                                                  //\n * Ignored files.                                                                                                    //\n *                                                                                                                   //\n * @api private                                                                                                      //\n * @param {string} path                                                                                              //\n * @return {boolean}                                                                                                 //\n */                                                                                                                  //\nfunction ignored(path) {                                                                                             // 210\n  return !~ignore.indexOf(path);                                                                                     // 211\n}                                                                                                                    // 212\n                                                                                                                     //\n/**                                                                                                                  //\n * Lookup files in the given `dir`.                                                                                  //\n *                                                                                                                   //\n * @api private                                                                                                      //\n * @param {string} dir                                                                                               //\n * @param {string[]} [ext=['.js']]                                                                                   //\n * @param {Array} [ret=[]]                                                                                           //\n * @return {Array}                                                                                                   //\n */                                                                                                                  //\nexports.files = function (dir, ext, ret) {                                                                           // 223\n  ret = ret || [];                                                                                                   // 224\n  ext = ext || ['js'];                                                                                               // 225\n                                                                                                                     //\n  var re = new RegExp('\\\\.(' + ext.join('|') + ')$');                                                                // 227\n                                                                                                                     //\n  readdirSync(dir).filter(ignored).forEach(function (path) {                                                         // 229\n    path = join(dir, path);                                                                                          // 232\n    if (statSync(path).isDirectory()) {                                                                              // 233\n      exports.files(path, ext, ret);                                                                                 // 234\n    } else if (path.match(re)) {                                                                                     // 235\n      ret.push(path);                                                                                                // 236\n    }                                                                                                                // 237\n  });                                                                                                                // 238\n                                                                                                                     //\n  return ret;                                                                                                        // 240\n};                                                                                                                   // 241\n                                                                                                                     //\n/**                                                                                                                  //\n * Compute a slug from the given `str`.                                                                              //\n *                                                                                                                   //\n * @api private                                                                                                      //\n * @param {string} str                                                                                               //\n * @return {string}                                                                                                  //\n */                                                                                                                  //\nexports.slug = function (str) {                                                                                      // 250\n  return str.toLowerCase().replace(/ +/g, '-').replace(/[^-\\w]/g, '');                                               // 251\n};                                                                                                                   // 255\n                                                                                                                     //\n/**                                                                                                                  //\n * Strip the function definition from `str`, and re-indent for pre whitespace.                                       //\n *                                                                                                                   //\n * @param {string} str                                                                                               //\n * @return {string}                                                                                                  //\n */                                                                                                                  //\nexports.clean = function (str) {                                                                                     // 263\n  str = str.replace(/\\r\\n?|[\\n\\u2028\\u2029]/g, '\\n').replace(/^\\uFEFF/, '').replace(/^function *\\(.*\\)\\s*\\{|\\(.*\\) *=> *\\{?/, '').replace(/\\s+\\}$/, '');\n                                                                                                                     //\n  var spaces = str.match(/^\\n?( *)/)[1].length;                                                                      // 269\n  var tabs = str.match(/^\\n?(\\t*)/)[1].length;                                                                       // 270\n  var re = new RegExp('^\\n?' + (tabs ? '\\t' : ' ') + '{' + (tabs ? tabs : spaces) + '}', 'gm');                      // 271\n                                                                                                                     //\n  str = str.replace(re, '');                                                                                         // 273\n                                                                                                                     //\n  return exports.trim(str);                                                                                          // 275\n};                                                                                                                   // 276\n                                                                                                                     //\n/**                                                                                                                  //\n * Trim the given `str`.                                                                                             //\n *                                                                                                                   //\n * @api private                                                                                                      //\n * @param {string} str                                                                                               //\n * @return {string}                                                                                                  //\n */                                                                                                                  //\nexports.trim = function (str) {                                                                                      // 285\n  return str.replace(/^\\s+|\\s+$/g, '');                                                                              // 286\n};                                                                                                                   // 287\n                                                                                                                     //\n/**                                                                                                                  //\n * Parse the given `qs`.                                                                                             //\n *                                                                                                                   //\n * @api private                                                                                                      //\n * @param {string} qs                                                                                                //\n * @return {Object}                                                                                                  //\n */                                                                                                                  //\nexports.parseQuery = function (qs) {                                                                                 // 296\n  return exports.reduce(qs.replace('?', '').split('&'), function (obj, pair) {                                       // 297\n    var i = pair.indexOf('=');                                                                                       // 298\n    var key = pair.slice(0, i);                                                                                      // 299\n    var val = pair.slice(++i);                                                                                       // 300\n                                                                                                                     //\n    obj[key] = decodeURIComponent(val);                                                                              // 302\n    return obj;                                                                                                      // 303\n  }, {});                                                                                                            // 304\n};                                                                                                                   // 305\n                                                                                                                     //\n/**                                                                                                                  //\n * Highlight the given string of `js`.                                                                               //\n *                                                                                                                   //\n * @api private                                                                                                      //\n * @param {string} js                                                                                                //\n * @return {string}                                                                                                  //\n */                                                                                                                  //\nfunction highlight(js) {                                                                                             // 314\n  return js.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\/\\/(.*)/gm, '<span class=\"comment\">//$1</span>').replace(/('.*?')/gm, '<span class=\"string\">$1</span>').replace(/(\\d+\\.\\d+)/gm, '<span class=\"number\">$1</span>').replace(/(\\d+)/gm, '<span class=\"number\">$1</span>').replace(/\\bnew[ \\t]+(\\w+)/gm, '<span class=\"keyword\">new</span> <span class=\"init\">$1</span>').replace(/\\b(function|new|throw|return|var|if|else)\\b/gm, '<span class=\"keyword\">$1</span>');\n}                                                                                                                    // 324\n                                                                                                                     //\n/**                                                                                                                  //\n * Highlight the contents of tag `name`.                                                                             //\n *                                                                                                                   //\n * @api private                                                                                                      //\n * @param {string} name                                                                                              //\n */                                                                                                                  //\nexports.highlightTags = function (name) {                                                                            // 332\n  var code = document.getElementById('mocha').getElementsByTagName(name);                                            // 333\n  for (var i = 0, len = code.length; i < len; ++i) {                                                                 // 334\n    code[i].innerHTML = highlight(code[i].innerHTML);                                                                // 335\n  }                                                                                                                  // 336\n};                                                                                                                   // 337\n                                                                                                                     //\n/**                                                                                                                  //\n * If a value could have properties, and has none, this function is called,                                          //\n * which returns a string representation of the empty value.                                                         //\n *                                                                                                                   //\n * Functions w/ no properties return `'[Function]'`                                                                  //\n * Arrays w/ length === 0 return `'[]'`                                                                              //\n * Objects w/ no properties return `'{}'`                                                                            //\n * All else: return result of `value.toString()`                                                                     //\n *                                                                                                                   //\n * @api private                                                                                                      //\n * @param {*} value The value to inspect.                                                                            //\n * @param {string} [type] The type of the value, if known.                                                           //\n * @returns {string}                                                                                                 //\n */                                                                                                                  //\nfunction emptyRepresentation(value, type) {                                                                          // 353\n  type = type || exports.type(value);                                                                                // 354\n                                                                                                                     //\n  switch (type) {                                                                                                    // 356\n    case 'function':                                                                                                 // 357\n      return '[Function]';                                                                                           // 358\n    case 'object':                                                                                                   // 359\n      return '{}';                                                                                                   // 360\n    case 'array':                                                                                                    // 361\n      return '[]';                                                                                                   // 362\n    default:                                                                                                         // 363\n      return value.toString();                                                                                       // 364\n  }                                                                                                                  // 356\n}                                                                                                                    // 366\n                                                                                                                     //\n/**                                                                                                                  //\n * Takes some variable and asks `Object.prototype.toString()` what it thinks it                                      //\n * is.                                                                                                               //\n *                                                                                                                   //\n * @api private                                                                                                      //\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString             //\n * @param {*} value The value to test.                                                                               //\n * @returns {string}                                                                                                 //\n * @example                                                                                                          //\n * type({}) // 'object'                                                                                              //\n * type([]) // 'array'                                                                                               //\n * type(1) // 'number'                                                                                               //\n * type(false) // 'boolean'                                                                                          //\n * type(Infinity) // 'number'                                                                                        //\n * type(null) // 'null'                                                                                              //\n * type(new Date()) // 'date'                                                                                        //\n * type(/foo/) // 'regexp'                                                                                           //\n * type('type') // 'string'                                                                                          //\n * type(global) // 'global'                                                                                          //\n */                                                                                                                  //\nexports.type = function type(value) {                                                                                // 388\n  if (value === undefined) {                                                                                         // 389\n    return 'undefined';                                                                                              // 390\n  } else if (value === null) {                                                                                       // 391\n    return 'null';                                                                                                   // 392\n  } else if (typeof Buffer !== 'undefined' && Buffer.isBuffer(value)) {                                              // 393\n    return 'buffer';                                                                                                 // 394\n  }                                                                                                                  // 395\n  return Object.prototype.toString.call(value).replace(/^\\[.+\\s(.+?)\\]$/, '$1').toLowerCase();                       // 396\n};                                                                                                                   // 399\n                                                                                                                     //\n/**                                                                                                                  //\n * Stringify `value`. Different behavior depending on type of value:                                                 //\n *                                                                                                                   //\n * - If `value` is undefined or null, return `'[undefined]'` or `'[null]'`, respectively.                            //\n * - If `value` is not an object, function or array, return result of `value.toString()` wrapped in double-quotes.   //\n * - If `value` is an *empty* object, function, or array, return result of function                                  //\n *   {@link emptyRepresentation}.                                                                                    //\n * - If `value` has properties, call {@link exports.canonicalize} on it, then return result of                       //\n *   JSON.stringify().                                                                                               //\n *                                                                                                                   //\n * @api private                                                                                                      //\n * @see exports.type                                                                                                 //\n * @param {*} value                                                                                                  //\n * @return {string}                                                                                                  //\n */                                                                                                                  //\nexports.stringify = function (value) {                                                                               // 416\n  var type = exports.type(value);                                                                                    // 417\n                                                                                                                     //\n  if (!~exports.indexOf(['object', 'array', 'function'], type)) {                                                    // 419\n    if (type !== 'buffer') {                                                                                         // 420\n      return jsonStringify(value);                                                                                   // 421\n    }                                                                                                                // 422\n    var json = value.toJSON();                                                                                       // 423\n    // Based on the toJSON result                                                                                    //\n    return jsonStringify(json.data && json.type ? json.data : json, 2).replace(/,(\\n|$)/g, '$1');                    // 425\n  }                                                                                                                  // 427\n                                                                                                                     //\n  for (var prop in value) {                                                                                          // 429\n    if (Object.prototype.hasOwnProperty.call(value, prop)) {                                                         // 430\n      return jsonStringify(exports.canonicalize(value), 2).replace(/,(\\n|$)/g, '$1');                                // 431\n    }                                                                                                                // 432\n  }                                                                                                                  // 433\n                                                                                                                     //\n  return emptyRepresentation(value, type);                                                                           // 435\n};                                                                                                                   // 436\n                                                                                                                     //\n/**                                                                                                                  //\n * like JSON.stringify but more sense.                                                                               //\n *                                                                                                                   //\n * @api private                                                                                                      //\n * @param {Object}  object                                                                                           //\n * @param {number=} spaces                                                                                           //\n * @param {number=} depth                                                                                            //\n * @returns {*}                                                                                                      //\n */                                                                                                                  //\nfunction jsonStringify(object, spaces, depth) {                                                                      // 447\n  if (typeof spaces === 'undefined') {                                                                               // 448\n    // primitive types                                                                                               //\n    return _stringify(object);                                                                                       // 450\n  }                                                                                                                  // 451\n                                                                                                                     //\n  depth = depth || 1;                                                                                                // 453\n  var space = spaces * depth;                                                                                        // 454\n  var str = isArray(object) ? '[' : '{';                                                                             // 455\n  var end = isArray(object) ? ']' : '}';                                                                             // 456\n  var length = object.length || exports.keys(object).length;                                                         // 457\n  // `.repeat()` polyfill                                                                                            //\n  function repeat(s, n) {                                                                                            // 459\n    return new Array(n).join(s);                                                                                     // 460\n  }                                                                                                                  // 461\n                                                                                                                     //\n  function _stringify(val) {                                                                                         // 463\n    switch (exports.type(val)) {                                                                                     // 464\n      case 'null':                                                                                                   // 465\n      case 'undefined':                                                                                              // 466\n        val = '[' + val + ']';                                                                                       // 467\n        break;                                                                                                       // 468\n      case 'array':                                                                                                  // 469\n      case 'object':                                                                                                 // 470\n        val = jsonStringify(val, spaces, depth + 1);                                                                 // 471\n        break;                                                                                                       // 472\n      case 'boolean':                                                                                                // 473\n      case 'regexp':                                                                                                 // 474\n      case 'number':                                                                                                 // 475\n        val = val === 0 && 1 / val === -Infinity // `-0`                                                             // 476\n        ? '-0' : val.toString();                                                                                     // 476\n        break;                                                                                                       // 479\n      case 'date':                                                                                                   // 480\n        var sDate = isNaN(val.getTime()) // Invalid date                                                             // 481\n        ? val.toString() : val.toISOString();                                                                        // 481\n        val = '[Date: ' + sDate + ']';                                                                               // 484\n        break;                                                                                                       // 485\n      case 'buffer':                                                                                                 // 486\n        var json = val.toJSON();                                                                                     // 487\n        // Based on the toJSON result                                                                                //\n        json = json.data && json.type ? json.data : json;                                                            // 489\n        val = '[Buffer: ' + jsonStringify(json, 2, depth + 1) + ']';                                                 // 490\n        break;                                                                                                       // 491\n      default:                                                                                                       // 492\n        val = val === '[Function]' || val === '[Circular]' ? val : JSON.stringify(val); // string                    // 493\n    }                                                                                                                // 464\n    return val;                                                                                                      // 497\n  }                                                                                                                  // 498\n                                                                                                                     //\n  for (var i in object) {                                                                                            // 500\n    if (!object.hasOwnProperty(i)) {                                                                                 // 501\n      continue; // not my business                                                                                   // 502\n    }                                                                                                                // 503\n    --length;                                                                                                        // 504\n    str += '\\n ' + repeat(' ', space) + (isArray(object) ? '' : '\"' + i + '\": ') // key                              // 505\n    + _stringify(object[i]) // value                                                                                 // 505\n    + (length ? ',' : ''); // comma                                                                                  // 505\n  }                                                                                                                  // 509\n                                                                                                                     //\n  return str                                                                                                         // 511\n  // [], {}                                                                                                          //\n  + (str.length !== 1 ? '\\n' + repeat(' ', --space) + end : end);                                                    // 511\n}                                                                                                                    // 514\n                                                                                                                     //\n/**                                                                                                                  //\n * Test if a value is a buffer.                                                                                      //\n *                                                                                                                   //\n * @api private                                                                                                      //\n * @param {*} value The value to test.                                                                               //\n * @return {boolean} True if `value` is a buffer, otherwise false                                                    //\n */                                                                                                                  //\nexports.isBuffer = function (value) {                                                                                // 523\n  return typeof Buffer !== 'undefined' && Buffer.isBuffer(value);                                                    // 524\n};                                                                                                                   // 525\n                                                                                                                     //\n/**                                                                                                                  //\n * Return a new Thing that has the keys in sorted order. Recursive.                                                  //\n *                                                                                                                   //\n * If the Thing...                                                                                                   //\n * - has already been seen, return string `'[Circular]'`                                                             //\n * - is `undefined`, return string `'[undefined]'`                                                                   //\n * - is `null`, return value `null`                                                                                  //\n * - is some other primitive, return the value                                                                       //\n * - is not a primitive or an `Array`, `Object`, or `Function`, return the value of the Thing's `toString()` method  //\n * - is a non-empty `Array`, `Object`, or `Function`, return the result of calling this function again.              //\n * - is an empty `Array`, `Object`, or `Function`, return the result of calling `emptyRepresentation()`              //\n *                                                                                                                   //\n * @api private                                                                                                      //\n * @see {@link exports.stringify}                                                                                    //\n * @param {*} value Thing to inspect.  May or may not have properties.                                               //\n * @param {Array} [stack=[]] Stack of seen values                                                                    //\n * @return {(Object|Array|Function|string|undefined)}                                                                //\n */                                                                                                                  //\nexports.canonicalize = function (value, stack) {                                                                     // 545\n  var canonicalizedObj;                                                                                              // 546\n  /* eslint-disable no-unused-vars */                                                                                //\n  var prop;                                                                                                          // 548\n  /* eslint-enable no-unused-vars */                                                                                 //\n  var type = exports.type(value);                                                                                    // 550\n  function withStack(value, fn) {                                                                                    // 551\n    stack.push(value);                                                                                               // 552\n    fn();                                                                                                            // 553\n    stack.pop();                                                                                                     // 554\n  }                                                                                                                  // 555\n                                                                                                                     //\n  stack = stack || [];                                                                                               // 557\n                                                                                                                     //\n  if (exports.indexOf(stack, value) !== -1) {                                                                        // 559\n    return '[Circular]';                                                                                             // 560\n  }                                                                                                                  // 561\n                                                                                                                     //\n  switch (type) {                                                                                                    // 563\n    case 'undefined':                                                                                                // 564\n    case 'buffer':                                                                                                   // 565\n    case 'null':                                                                                                     // 566\n      canonicalizedObj = value;                                                                                      // 567\n      break;                                                                                                         // 568\n    case 'array':                                                                                                    // 569\n      withStack(value, function () {                                                                                 // 570\n        canonicalizedObj = exports.map(value, function (item) {                                                      // 571\n          return exports.canonicalize(item, stack);                                                                  // 572\n        });                                                                                                          // 573\n      });                                                                                                            // 574\n      break;                                                                                                         // 575\n    case 'function':                                                                                                 // 576\n      /* eslint-disable guard-for-in */                                                                              //\n      for (prop in value) {                                                                                          // 578\n        canonicalizedObj = {};                                                                                       // 579\n        break;                                                                                                       // 580\n      }                                                                                                              // 581\n      /* eslint-enable guard-for-in */                                                                               //\n      if (!canonicalizedObj) {                                                                                       // 583\n        canonicalizedObj = emptyRepresentation(value, type);                                                         // 584\n        break;                                                                                                       // 585\n      }                                                                                                              // 586\n    /* falls through */                                                                                              //\n    case 'object':                                                                                                   // 588\n      canonicalizedObj = canonicalizedObj || {};                                                                     // 589\n      withStack(value, function () {                                                                                 // 590\n        exports.forEach(exports.keys(value).sort(), function (key) {                                                 // 591\n          canonicalizedObj[key] = exports.canonicalize(value[key], stack);                                           // 592\n        });                                                                                                          // 593\n      });                                                                                                            // 594\n      break;                                                                                                         // 595\n    case 'date':                                                                                                     // 596\n    case 'number':                                                                                                   // 597\n    case 'regexp':                                                                                                   // 598\n    case 'boolean':                                                                                                  // 599\n      canonicalizedObj = value;                                                                                      // 600\n      break;                                                                                                         // 601\n    default:                                                                                                         // 602\n      canonicalizedObj = value + '';                                                                                 // 603\n  }                                                                                                                  // 563\n                                                                                                                     //\n  return canonicalizedObj;                                                                                           // 606\n};                                                                                                                   // 607\n                                                                                                                     //\n/**                                                                                                                  //\n * Lookup file names at the given `path`.                                                                            //\n *                                                                                                                   //\n * @api public                                                                                                       //\n * @param {string} path Base path to start searching from.                                                           //\n * @param {string[]} extensions File extensions to look for.                                                         //\n * @param {boolean} recursive Whether or not to recurse into subdirectories.                                         //\n * @return {string[]} An array of paths.                                                                             //\n */                                                                                                                  //\nexports.lookupFiles = function lookupFiles(path, extensions, recursive) {                                            // 618\n  var files = [];                                                                                                    // 619\n  var re = new RegExp('\\\\.(' + extensions.join('|') + ')$');                                                         // 620\n                                                                                                                     //\n  if (!exists(path)) {                                                                                               // 622\n    if (exists(path + '.js')) {                                                                                      // 623\n      path += '.js';                                                                                                 // 624\n    } else {                                                                                                         // 625\n      files = glob.sync(path);                                                                                       // 626\n      if (!files.length) {                                                                                           // 627\n        throw new Error(\"cannot resolve path (or pattern) '\" + path + \"'\");                                          // 628\n      }                                                                                                              // 629\n      return files;                                                                                                  // 630\n    }                                                                                                                // 631\n  }                                                                                                                  // 632\n                                                                                                                     //\n  try {                                                                                                              // 634\n    var stat = statSync(path);                                                                                       // 635\n    if (stat.isFile()) {                                                                                             // 636\n      return path;                                                                                                   // 637\n    }                                                                                                                // 638\n  } catch (err) {                                                                                                    // 639\n    // ignore error                                                                                                  //\n    return;                                                                                                          // 641\n  }                                                                                                                  // 642\n                                                                                                                     //\n  readdirSync(path).forEach(function (file) {                                                                        // 644\n    file = join(path, file);                                                                                         // 645\n    try {                                                                                                            // 646\n      var stat = statSync(file);                                                                                     // 647\n      if (stat.isDirectory()) {                                                                                      // 648\n        if (recursive) {                                                                                             // 649\n          files = files.concat(lookupFiles(file, extensions, recursive));                                            // 650\n        }                                                                                                            // 651\n        return;                                                                                                      // 652\n      }                                                                                                              // 653\n    } catch (err) {                                                                                                  // 654\n      // ignore error                                                                                                //\n      return;                                                                                                        // 656\n    }                                                                                                                // 657\n    if (!stat.isFile() || !re.test(file) || basename(file)[0] === '.') {                                             // 658\n      return;                                                                                                        // 659\n    }                                                                                                                // 660\n    files.push(file);                                                                                                // 661\n  });                                                                                                                // 662\n                                                                                                                     //\n  return files;                                                                                                      // 664\n};                                                                                                                   // 665\n                                                                                                                     //\n/**                                                                                                                  //\n * Generate an undefined error with a message warning the user.                                                      //\n *                                                                                                                   //\n * @return {Error}                                                                                                   //\n */                                                                                                                  //\n                                                                                                                     //\nexports.undefinedError = function () {                                                                               // 673\n  return new Error('Caught undefined error, did you throw without specifying what?');                                // 674\n};                                                                                                                   // 675\n                                                                                                                     //\n/**                                                                                                                  //\n * Generate an undefined error if `err` is not defined.                                                              //\n *                                                                                                                   //\n * @param {Error} err                                                                                                //\n * @return {Error}                                                                                                   //\n */                                                                                                                  //\n                                                                                                                     //\nexports.getError = function (err) {                                                                                  // 684\n  return err || exports.undefinedError();                                                                            // 685\n};                                                                                                                   // 686\n                                                                                                                     //\n/**                                                                                                                  //\n * @summary                                                                                                          //\n * This Filter based on `mocha-clean` module.(see: `github.com/rstacruz/mocha-clean`)                                //\n * @description                                                                                                      //\n * When invoking this function you get a filter function that get the Error.stack as an input,                       //\n * and return a prettify output.                                                                                     //\n * (i.e: strip Mocha and internal node functions from stack trace).                                                  //\n * @returns {Function}                                                                                               //\n */                                                                                                                  //\nexports.stackTraceFilter = function () {                                                                             // 697\n  // TODO: Replace with `process.browser`                                                                            //\n  var slash = '/';                                                                                                   // 699\n  var is = typeof document === 'undefined' ? { node: true } : { browser: true };                                     // 700\n  var cwd = is.node ? process.cwd() + slash : (typeof location === 'undefined' ? window.location : location).href.replace(/\\/[^\\/]*$/, '/');\n                                                                                                                     //\n  function isMochaInternal(line) {                                                                                   // 705\n    return ~line.indexOf('node_modules' + slash + 'mocha' + slash) || ~line.indexOf('components' + slash + 'mochajs' + slash) || ~line.indexOf('components' + slash + 'mocha' + slash) || ~line.indexOf(slash + 'mocha.js');\n  }                                                                                                                  // 710\n                                                                                                                     //\n  function isNodeInternal(line) {                                                                                    // 712\n    return ~line.indexOf('(timers.js:') || ~line.indexOf('(events.js:') || ~line.indexOf('(node.js:') || ~line.indexOf('(module.js:') || ~line.indexOf('GeneratorFunctionPrototype.next (native)') || false;\n  }                                                                                                                  // 719\n                                                                                                                     //\n  return function (stack) {                                                                                          // 721\n    stack = stack.split('\\n');                                                                                       // 722\n                                                                                                                     //\n    stack = exports.reduce(stack, function (list, line) {                                                            // 724\n      if (isMochaInternal(line)) {                                                                                   // 725\n        return list;                                                                                                 // 726\n      }                                                                                                              // 727\n                                                                                                                     //\n      if (is.node && isNodeInternal(line)) {                                                                         // 729\n        return list;                                                                                                 // 730\n      }                                                                                                              // 731\n                                                                                                                     //\n      // Clean up cwd(absolute)                                                                                      //\n      list.push(line.replace(cwd, ''));                                                                              // 734\n      return list;                                                                                                   // 735\n    }, []);                                                                                                          // 736\n                                                                                                                     //\n    return stack.join('\\n');                                                                                         // 738\n  };                                                                                                                 // 739\n};                                                                                                                   // 740\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"browser\":{\"progress.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/practicalmeteor_mocha/lib/browser/progress.js                                                            //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n/**                                                                                                                  //\n * Expose `Progress`.                                                                                                //\n */                                                                                                                  //\n                                                                                                                     //\nmodule.exports = Progress;                                                                                           // 5\n                                                                                                                     //\n/**                                                                                                                  //\n * Initialize a new `Progress` indicator.                                                                            //\n */                                                                                                                  //\nfunction Progress() {                                                                                                // 10\n  this.percent = 0;                                                                                                  // 11\n  this.size(0);                                                                                                      // 12\n  this.fontSize(11);                                                                                                 // 13\n  this.font('helvetica, arial, sans-serif');                                                                         // 14\n}                                                                                                                    // 15\n                                                                                                                     //\n/**                                                                                                                  //\n * Set progress size to `size`.                                                                                      //\n *                                                                                                                   //\n * @api public                                                                                                       //\n * @param {number} size                                                                                              //\n * @return {Progress} Progress instance.                                                                             //\n */                                                                                                                  //\nProgress.prototype.size = function (size) {                                                                          // 24\n  this._size = size;                                                                                                 // 25\n  return this;                                                                                                       // 26\n};                                                                                                                   // 27\n                                                                                                                     //\n/**                                                                                                                  //\n * Set text to `text`.                                                                                               //\n *                                                                                                                   //\n * @api public                                                                                                       //\n * @param {string} text                                                                                              //\n * @return {Progress} Progress instance.                                                                             //\n */                                                                                                                  //\nProgress.prototype.text = function (text) {                                                                          // 36\n  this._text = text;                                                                                                 // 37\n  return this;                                                                                                       // 38\n};                                                                                                                   // 39\n                                                                                                                     //\n/**                                                                                                                  //\n * Set font size to `size`.                                                                                          //\n *                                                                                                                   //\n * @api public                                                                                                       //\n * @param {number} size                                                                                              //\n * @return {Progress} Progress instance.                                                                             //\n */                                                                                                                  //\nProgress.prototype.fontSize = function (size) {                                                                      // 48\n  this._fontSize = size;                                                                                             // 49\n  return this;                                                                                                       // 50\n};                                                                                                                   // 51\n                                                                                                                     //\n/**                                                                                                                  //\n * Set font to `family`.                                                                                             //\n *                                                                                                                   //\n * @param {string} family                                                                                            //\n * @return {Progress} Progress instance.                                                                             //\n */                                                                                                                  //\nProgress.prototype.font = function (family) {                                                                        // 59\n  this._font = family;                                                                                               // 60\n  return this;                                                                                                       // 61\n};                                                                                                                   // 62\n                                                                                                                     //\n/**                                                                                                                  //\n * Update percentage to `n`.                                                                                         //\n *                                                                                                                   //\n * @param {number} n                                                                                                 //\n * @return {Progress} Progress instance.                                                                             //\n */                                                                                                                  //\nProgress.prototype.update = function (n) {                                                                           // 70\n  this.percent = n;                                                                                                  // 71\n  return this;                                                                                                       // 72\n};                                                                                                                   // 73\n                                                                                                                     //\n/**                                                                                                                  //\n * Draw on `ctx`.                                                                                                    //\n *                                                                                                                   //\n * @param {CanvasRenderingContext2d} ctx                                                                             //\n * @return {Progress} Progress instance.                                                                             //\n */                                                                                                                  //\nProgress.prototype.draw = function (ctx) {                                                                           // 81\n  try {                                                                                                              // 82\n    var percent = Math.min(this.percent, 100);                                                                       // 83\n    var size = this._size;                                                                                           // 84\n    var half = size / 2;                                                                                             // 85\n    var x = half;                                                                                                    // 86\n    var y = half;                                                                                                    // 87\n    var rad = half - 1;                                                                                              // 88\n    var fontSize = this._fontSize;                                                                                   // 89\n                                                                                                                     //\n    ctx.font = fontSize + 'px ' + this._font;                                                                        // 91\n                                                                                                                     //\n    var angle = Math.PI * 2 * (percent / 100);                                                                       // 93\n    ctx.clearRect(0, 0, size, size);                                                                                 // 94\n                                                                                                                     //\n    // outer circle                                                                                                  //\n    ctx.strokeStyle = '#9f9f9f';                                                                                     // 97\n    ctx.beginPath();                                                                                                 // 98\n    ctx.arc(x, y, rad, 0, angle, false);                                                                             // 99\n    ctx.stroke();                                                                                                    // 100\n                                                                                                                     //\n    // inner circle                                                                                                  //\n    ctx.strokeStyle = '#eee';                                                                                        // 103\n    ctx.beginPath();                                                                                                 // 104\n    ctx.arc(x, y, rad - 1, 0, angle, true);                                                                          // 105\n    ctx.stroke();                                                                                                    // 106\n                                                                                                                     //\n    // text                                                                                                          //\n    var text = this._text || (percent | 0) + '%';                                                                    // 109\n    var w = ctx.measureText(text).width;                                                                             // 110\n                                                                                                                     //\n    ctx.fillText(text, x - w / 2 + 1, y + fontSize / 2 - 1);                                                         // 112\n  } catch (err) {                                                                                                    // 113\n    // don't fail if we can't render progress                                                                        //\n  }                                                                                                                  // 115\n  return this;                                                                                                       // 116\n};                                                                                                                   // 117\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"reporters\":{\"base.js\":[\"tty\",\"diff\",\"../ms\",\"../utils\",\"supports-color\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/practicalmeteor_mocha/lib/reporters/base.js                                                              //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n/**                                                                                                                  //\n * Module dependencies.                                                                                              //\n */                                                                                                                  //\n                                                                                                                     //\nvar tty = require('tty');                                                                                            // 5\nvar diff = require('diff');                                                                                          // 6\nvar ms = require('../ms');                                                                                           // 7\nvar utils = require('../utils');                                                                                     // 8\nvar supportsColor = process.browser ? null : require('supports-color');                                              // 9\n                                                                                                                     //\n/**                                                                                                                  //\n * Expose `Base`.                                                                                                    //\n */                                                                                                                  //\n                                                                                                                     //\nexports = module.exports = Base;                                                                                     // 15\n                                                                                                                     //\n/**                                                                                                                  //\n * Save timer references to avoid Sinon interfering.                                                                 //\n * See: https://github.com/mochajs/mocha/issues/237                                                                  //\n */                                                                                                                  //\n                                                                                                                     //\n/* eslint-disable no-unused-vars, no-native-reassign */                                                              //\nvar Date = global.Date;                                                                                              // 23\nvar setTimeout = global.setTimeout;                                                                                  // 24\nvar setInterval = global.setInterval;                                                                                // 25\nvar clearTimeout = global.clearTimeout;                                                                              // 26\nvar clearInterval = global.clearInterval;                                                                            // 27\n/* eslint-enable no-unused-vars, no-native-reassign */                                                               //\n                                                                                                                     //\n/**                                                                                                                  //\n * Check if both stdio streams are associated with a tty.                                                            //\n */                                                                                                                  //\n                                                                                                                     //\nvar isatty = tty.isatty(1) && tty.isatty(2);                                                                         // 34\n                                                                                                                     //\n/**                                                                                                                  //\n * Enable coloring by default, except in the browser interface.                                                      //\n */                                                                                                                  //\n                                                                                                                     //\nexports.useColors = !process.browser && (supportsColor || process.env.MOCHA_COLORS !== undefined);                   // 40\n                                                                                                                     //\n/**                                                                                                                  //\n * Inline diffs instead of +/-                                                                                       //\n */                                                                                                                  //\n                                                                                                                     //\nexports.inlineDiffs = false;                                                                                         // 46\n                                                                                                                     //\n/**                                                                                                                  //\n * Default color map.                                                                                                //\n */                                                                                                                  //\n                                                                                                                     //\nexports.colors = {                                                                                                   // 52\n  pass: 90,                                                                                                          // 53\n  fail: 31,                                                                                                          // 54\n  'bright pass': 92,                                                                                                 // 55\n  'bright fail': 91,                                                                                                 // 56\n  'bright yellow': 93,                                                                                               // 57\n  pending: 36,                                                                                                       // 58\n  suite: 0,                                                                                                          // 59\n  'error title': 0,                                                                                                  // 60\n  'error message': 31,                                                                                               // 61\n  'error stack': 90,                                                                                                 // 62\n  checkmark: 32,                                                                                                     // 63\n  fast: 90,                                                                                                          // 64\n  medium: 33,                                                                                                        // 65\n  slow: 31,                                                                                                          // 66\n  green: 32,                                                                                                         // 67\n  light: 90,                                                                                                         // 68\n  'diff gutter': 90,                                                                                                 // 69\n  'diff added': 32,                                                                                                  // 70\n  'diff removed': 31                                                                                                 // 71\n};                                                                                                                   // 52\n                                                                                                                     //\n/**                                                                                                                  //\n * Default symbol map.                                                                                               //\n */                                                                                                                  //\n                                                                                                                     //\nexports.symbols = {                                                                                                  // 78\n  ok: '✓',                                                                                                           // 79\n  err: '✖',                                                                                                          // 80\n  dot: '․'                                                                                                           // 81\n};                                                                                                                   // 78\n                                                                                                                     //\n// With node.js on Windows: use symbols available in terminal default fonts                                          //\nif (process.platform === 'win32') {                                                                                  // 85\n  exports.symbols.ok = '√';                                                                                          // 86\n  exports.symbols.err = '×';                                                                                         // 87\n  exports.symbols.dot = '.';                                                                                         // 88\n}                                                                                                                    // 89\n                                                                                                                     //\n/**                                                                                                                  //\n * Color `str` with the given `type`,                                                                                //\n * allowing colors to be disabled,                                                                                   //\n * as well as user-defined color                                                                                     //\n * schemes.                                                                                                          //\n *                                                                                                                   //\n * @param {string} type                                                                                              //\n * @param {string} str                                                                                               //\n * @return {string}                                                                                                  //\n * @api private                                                                                                      //\n */                                                                                                                  //\nvar color = exports.color = function (type, str) {                                                                   // 102\n  if (!exports.useColors) {                                                                                          // 103\n    return String(str);                                                                                              // 104\n  }                                                                                                                  // 105\n  return '\\u001b[' + exports.colors[type] + 'm' + str + '\\u001b[0m';                                                 // 106\n};                                                                                                                   // 107\n                                                                                                                     //\n/**                                                                                                                  //\n * Expose term window size, with some defaults for when stderr is not a tty.                                         //\n */                                                                                                                  //\n                                                                                                                     //\nexports.window = {                                                                                                   // 113\n  width: 75                                                                                                          // 114\n};                                                                                                                   // 113\n                                                                                                                     //\nif (isatty) {                                                                                                        // 117\n  exports.window.width = process.stdout.getWindowSize ? process.stdout.getWindowSize(1)[0] : tty.getWindowSize()[1];\n}                                                                                                                    // 121\n                                                                                                                     //\n/**                                                                                                                  //\n * Expose some basic cursor interactions that are common among reporters.                                            //\n */                                                                                                                  //\n                                                                                                                     //\nexports.cursor = {                                                                                                   // 127\n  hide: function hide() {                                                                                            // 128\n    isatty && process.stdout.write('\\u001b[?25l');                                                                   // 129\n  },                                                                                                                 // 130\n                                                                                                                     //\n  show: function show() {                                                                                            // 132\n    isatty && process.stdout.write('\\u001b[?25h');                                                                   // 133\n  },                                                                                                                 // 134\n                                                                                                                     //\n  deleteLine: function deleteLine() {                                                                                // 136\n    isatty && process.stdout.write('\\u001b[2K');                                                                     // 137\n  },                                                                                                                 // 138\n                                                                                                                     //\n  beginningOfLine: function beginningOfLine() {                                                                      // 140\n    isatty && process.stdout.write('\\u001b[0G');                                                                     // 141\n  },                                                                                                                 // 142\n                                                                                                                     //\n  CR: function CR() {                                                                                                // 144\n    if (isatty) {                                                                                                    // 145\n      exports.cursor.deleteLine();                                                                                   // 146\n      exports.cursor.beginningOfLine();                                                                              // 147\n    } else {                                                                                                         // 148\n      process.stdout.write('\\r');                                                                                    // 149\n    }                                                                                                                // 150\n  }                                                                                                                  // 151\n};                                                                                                                   // 127\n                                                                                                                     //\n/**                                                                                                                  //\n * Outut the given `failures` as a list.                                                                             //\n *                                                                                                                   //\n * @param {Array} failures                                                                                           //\n * @api public                                                                                                       //\n */                                                                                                                  //\n                                                                                                                     //\nexports.list = function (failures) {                                                                                 // 161\n  console.log();                                                                                                     // 162\n  failures.forEach(function (test, i) {                                                                              // 163\n    // format                                                                                                        //\n    var fmt = color('error title', '  %s) %s:\\n') + color('error message', '     %s') + color('error stack', '\\n%s\\n');\n                                                                                                                     //\n    // msg                                                                                                           //\n    var msg;                                                                                                         // 170\n    var err = test.err;                                                                                              // 171\n    var message;                                                                                                     // 172\n    if (err.message) {                                                                                               // 173\n      message = err.message;                                                                                         // 174\n    } else if (typeof err.inspect === 'function') {                                                                  // 175\n      message = err.inspect() + '';                                                                                  // 176\n    } else {                                                                                                         // 177\n      message = '';                                                                                                  // 178\n    }                                                                                                                // 179\n    var stack = err.stack || message;                                                                                // 180\n    var index = stack.indexOf(message);                                                                              // 181\n    var actual = err.actual;                                                                                         // 182\n    var expected = err.expected;                                                                                     // 183\n    var escape = true;                                                                                               // 184\n                                                                                                                     //\n    if (index === -1) {                                                                                              // 186\n      msg = message;                                                                                                 // 187\n    } else {                                                                                                         // 188\n      index += message.length;                                                                                       // 189\n      msg = stack.slice(0, index);                                                                                   // 190\n      // remove msg from stack                                                                                       //\n      stack = stack.slice(index + 1);                                                                                // 192\n    }                                                                                                                // 193\n                                                                                                                     //\n    // uncaught                                                                                                      //\n    if (err.uncaught) {                                                                                              // 196\n      msg = 'Uncaught ' + msg;                                                                                       // 197\n    }                                                                                                                // 198\n    // explicitly show diff                                                                                          //\n    if (err.showDiff !== false && sameType(actual, expected) && expected !== undefined) {                            // 200\n      escape = false;                                                                                                // 201\n      if (!(utils.isString(actual) && utils.isString(expected))) {                                                   // 202\n        err.actual = actual = utils.stringify(actual);                                                               // 203\n        err.expected = expected = utils.stringify(expected);                                                         // 204\n      }                                                                                                              // 205\n                                                                                                                     //\n      fmt = color('error title', '  %s) %s:\\n%s') + color('error stack', '\\n%s\\n');                                  // 207\n      var match = message.match(/^([^:]+): expected/);                                                               // 208\n      msg = '\\n      ' + color('error message', match ? match[1] : msg);                                             // 209\n                                                                                                                     //\n      if (exports.inlineDiffs) {                                                                                     // 211\n        msg += inlineDiff(err, escape);                                                                              // 212\n      } else {                                                                                                       // 213\n        msg += unifiedDiff(err, escape);                                                                             // 214\n      }                                                                                                              // 215\n    }                                                                                                                // 216\n                                                                                                                     //\n    // indent stack trace                                                                                            //\n    stack = stack.replace(/^/gm, '  ');                                                                              // 219\n                                                                                                                     //\n    console.log(fmt, i + 1, test.fullTitle(), msg, stack);                                                           // 221\n  });                                                                                                                // 222\n};                                                                                                                   // 223\n                                                                                                                     //\n/**                                                                                                                  //\n * Initialize a new `Base` reporter.                                                                                 //\n *                                                                                                                   //\n * All other reporters generally                                                                                     //\n * inherit from this reporter, providing                                                                             //\n * stats such as test duration, number                                                                               //\n * of tests passed / failed etc.                                                                                     //\n *                                                                                                                   //\n * @param {Runner} runner                                                                                            //\n * @api public                                                                                                       //\n */                                                                                                                  //\n                                                                                                                     //\nfunction Base(runner) {                                                                                              // 237\n  var stats = this.stats = { suites: 0, tests: 0, passes: 0, pending: 0, failures: 0 };                              // 238\n  var failures = this.failures = [];                                                                                 // 239\n                                                                                                                     //\n  if (!runner) {                                                                                                     // 241\n    return;                                                                                                          // 242\n  }                                                                                                                  // 243\n  this.runner = runner;                                                                                              // 244\n                                                                                                                     //\n  runner.stats = stats;                                                                                              // 246\n                                                                                                                     //\n  runner.on('start', function () {                                                                                   // 248\n    stats.start = new Date();                                                                                        // 249\n  });                                                                                                                // 250\n                                                                                                                     //\n  runner.on('suite', function (suite) {                                                                              // 252\n    stats.suites = stats.suites || 0;                                                                                // 253\n    suite.root || stats.suites++;                                                                                    // 254\n  });                                                                                                                // 255\n                                                                                                                     //\n  runner.on('test end', function () {                                                                                // 257\n    stats.tests = stats.tests || 0;                                                                                  // 258\n    stats.tests++;                                                                                                   // 259\n  });                                                                                                                // 260\n                                                                                                                     //\n  runner.on('pass', function (test) {                                                                                // 262\n    stats.passes = stats.passes || 0;                                                                                // 263\n                                                                                                                     //\n    if (test.duration > test.slow()) {                                                                               // 265\n      test.speed = 'slow';                                                                                           // 266\n    } else if (test.duration > test.slow() / 2) {                                                                    // 267\n      test.speed = 'medium';                                                                                         // 268\n    } else {                                                                                                         // 269\n      test.speed = 'fast';                                                                                           // 270\n    }                                                                                                                // 271\n                                                                                                                     //\n    stats.passes++;                                                                                                  // 273\n  });                                                                                                                // 274\n                                                                                                                     //\n  runner.on('fail', function (test, err) {                                                                           // 276\n    stats.failures = stats.failures || 0;                                                                            // 277\n    stats.failures++;                                                                                                // 278\n    test.err = err;                                                                                                  // 279\n    failures.push(test);                                                                                             // 280\n  });                                                                                                                // 281\n                                                                                                                     //\n  runner.on('end', function () {                                                                                     // 283\n    stats.end = new Date();                                                                                          // 284\n    stats.duration = new Date() - stats.start;                                                                       // 285\n  });                                                                                                                // 286\n                                                                                                                     //\n  runner.on('pending', function () {                                                                                 // 288\n    stats.pending++;                                                                                                 // 289\n  });                                                                                                                // 290\n}                                                                                                                    // 291\n                                                                                                                     //\n/**                                                                                                                  //\n * Output common epilogue used by many of                                                                            //\n * the bundled reporters.                                                                                            //\n *                                                                                                                   //\n * @api public                                                                                                       //\n */                                                                                                                  //\nBase.prototype.epilogue = function () {                                                                              // 299\n  var stats = this.stats;                                                                                            // 300\n  var fmt;                                                                                                           // 301\n                                                                                                                     //\n  console.log();                                                                                                     // 303\n                                                                                                                     //\n  // passes                                                                                                          //\n  fmt = color('bright pass', ' ') + color('green', ' %d passing') + color('light', ' (%s)');                         // 306\n                                                                                                                     //\n  console.log(fmt, stats.passes || 0, ms(stats.duration));                                                           // 310\n                                                                                                                     //\n  // pending                                                                                                         //\n  if (stats.pending) {                                                                                               // 315\n    fmt = color('pending', ' ') + color('pending', ' %d pending');                                                   // 316\n                                                                                                                     //\n    console.log(fmt, stats.pending);                                                                                 // 319\n  }                                                                                                                  // 320\n                                                                                                                     //\n  // failures                                                                                                        //\n  if (stats.failures) {                                                                                              // 323\n    fmt = color('fail', '  %d failing');                                                                             // 324\n                                                                                                                     //\n    console.log(fmt, stats.failures);                                                                                // 326\n                                                                                                                     //\n    Base.list(this.failures);                                                                                        // 328\n    console.log();                                                                                                   // 329\n  }                                                                                                                  // 330\n                                                                                                                     //\n  console.log();                                                                                                     // 332\n};                                                                                                                   // 333\n                                                                                                                     //\n/**                                                                                                                  //\n * Pad the given `str` to `len`.                                                                                     //\n *                                                                                                                   //\n * @api private                                                                                                      //\n * @param {string} str                                                                                               //\n * @param {string} len                                                                                               //\n * @return {string}                                                                                                  //\n */                                                                                                                  //\nfunction pad(str, len) {                                                                                             // 343\n  str = String(str);                                                                                                 // 344\n  return Array(len - str.length + 1).join(' ') + str;                                                                // 345\n}                                                                                                                    // 346\n                                                                                                                     //\n/**                                                                                                                  //\n * Returns an inline diff between 2 strings with coloured ANSI output                                                //\n *                                                                                                                   //\n * @api private                                                                                                      //\n * @param {Error} err with actual/expected                                                                           //\n * @param {boolean} escape                                                                                           //\n * @return {string} Diff                                                                                             //\n */                                                                                                                  //\nfunction inlineDiff(err, escape) {                                                                                   // 356\n  var msg = errorDiff(err, 'WordsWithSpace', escape);                                                                // 357\n                                                                                                                     //\n  // linenos                                                                                                         //\n  var lines = msg.split('\\n');                                                                                       // 360\n  if (lines.length > 4) {                                                                                            // 361\n    var width = String(lines.length).length;                                                                         // 362\n    msg = lines.map(function (str, i) {                                                                              // 363\n      return pad(++i, width) + ' |' + ' ' + str;                                                                     // 364\n    }).join('\\n');                                                                                                   // 365\n  }                                                                                                                  // 366\n                                                                                                                     //\n  // legend                                                                                                          //\n  msg = '\\n' + color('diff removed', 'actual') + ' ' + color('diff added', 'expected') + '\\n\\n' + msg + '\\n';        // 369\n                                                                                                                     //\n  // indent                                                                                                          //\n  msg = msg.replace(/^/gm, '      ');                                                                                // 378\n  return msg;                                                                                                        // 379\n}                                                                                                                    // 380\n                                                                                                                     //\n/**                                                                                                                  //\n * Returns a unified diff between two strings.                                                                       //\n *                                                                                                                   //\n * @api private                                                                                                      //\n * @param {Error} err with actual/expected                                                                           //\n * @param {boolean} escape                                                                                           //\n * @return {string} The diff.                                                                                        //\n */                                                                                                                  //\nfunction unifiedDiff(err, escape) {                                                                                  // 390\n  var indent = '      ';                                                                                             // 391\n  function cleanUp(line) {                                                                                           // 392\n    if (escape) {                                                                                                    // 393\n      line = escapeInvisibles(line);                                                                                 // 394\n    }                                                                                                                // 395\n    if (line[0] === '+') {                                                                                           // 396\n      return indent + colorLines('diff added', line);                                                                // 397\n    }                                                                                                                // 398\n    if (line[0] === '-') {                                                                                           // 399\n      return indent + colorLines('diff removed', line);                                                              // 400\n    }                                                                                                                // 401\n    if (line.match(/\\@\\@/)) {                                                                                        // 402\n      return null;                                                                                                   // 403\n    }                                                                                                                // 404\n    if (line.match(/\\\\ No newline/)) {                                                                               // 405\n      return null;                                                                                                   // 406\n    }                                                                                                                // 407\n    return indent + line;                                                                                            // 408\n  }                                                                                                                  // 409\n  function notBlank(line) {                                                                                          // 410\n    return typeof line !== 'undefined' && line !== null;                                                             // 411\n  }                                                                                                                  // 412\n  var msg = diff.createPatch('string', err.actual, err.expected);                                                    // 413\n  var lines = msg.split('\\n').splice(4);                                                                             // 414\n  return '\\n      ' + colorLines('diff added', '+ expected') + ' ' + colorLines('diff removed', '- actual') + '\\n\\n' + lines.map(cleanUp).filter(notBlank).join('\\n');\n}                                                                                                                    // 420\n                                                                                                                     //\n/**                                                                                                                  //\n * Return a character diff for `err`.                                                                                //\n *                                                                                                                   //\n * @api private                                                                                                      //\n * @param {Error} err                                                                                                //\n * @param {string} type                                                                                              //\n * @param {boolean} escape                                                                                           //\n * @return {string}                                                                                                  //\n */                                                                                                                  //\nfunction errorDiff(err, type, escape) {                                                                              // 431\n  var actual = escape ? escapeInvisibles(err.actual) : err.actual;                                                   // 432\n  var expected = escape ? escapeInvisibles(err.expected) : err.expected;                                             // 433\n  return diff['diff' + type](actual, expected).map(function (str) {                                                  // 434\n    if (str.added) {                                                                                                 // 435\n      return colorLines('diff added', str.value);                                                                    // 436\n    }                                                                                                                // 437\n    if (str.removed) {                                                                                               // 438\n      return colorLines('diff removed', str.value);                                                                  // 439\n    }                                                                                                                // 440\n    return str.value;                                                                                                // 441\n  }).join('');                                                                                                       // 442\n}                                                                                                                    // 443\n                                                                                                                     //\n/**                                                                                                                  //\n * Returns a string with all invisible characters in plain text                                                      //\n *                                                                                                                   //\n * @api private                                                                                                      //\n * @param {string} line                                                                                              //\n * @return {string}                                                                                                  //\n */                                                                                                                  //\nfunction escapeInvisibles(line) {                                                                                    // 452\n  return line.replace(/\\t/g, '<tab>').replace(/\\r/g, '<CR>').replace(/\\n/g, '<LF>\\n');                               // 453\n}                                                                                                                    // 456\n                                                                                                                     //\n/**                                                                                                                  //\n * Color lines for `str`, using the color `name`.                                                                    //\n *                                                                                                                   //\n * @api private                                                                                                      //\n * @param {string} name                                                                                              //\n * @param {string} str                                                                                               //\n * @return {string}                                                                                                  //\n */                                                                                                                  //\nfunction colorLines(name, str) {                                                                                     // 466\n  return str.split('\\n').map(function (str) {                                                                        // 467\n    return color(name, str);                                                                                         // 468\n  }).join('\\n');                                                                                                     // 469\n}                                                                                                                    // 470\n                                                                                                                     //\n/**                                                                                                                  //\n * Object#toString reference.                                                                                        //\n */                                                                                                                  //\nvar objToString = Object.prototype.toString;                                                                         // 475\n                                                                                                                     //\n/**                                                                                                                  //\n * Check that a / b have the same type.                                                                              //\n *                                                                                                                   //\n * @api private                                                                                                      //\n * @param {Object} a                                                                                                 //\n * @param {Object} b                                                                                                 //\n * @return {boolean}                                                                                                 //\n */                                                                                                                  //\nfunction sameType(a, b) {                                                                                            // 485\n  return objToString.call(a) === objToString.call(b);                                                                // 486\n}                                                                                                                    // 487\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},\"node_modules\":{\"meteor-node-stubs\":{\"package.json\":function(require,exports){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// ../npm/node_modules/meteor-node-stubs/package.json                                                                //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nexports.name = \"meteor-node-stubs\";\nexports.version = \"0.2.1\";\nexports.main = \"index.js\";\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":[\"./map.json\",function(require,exports){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/practicalmeteor:mocha/node_modules/meteor-node-stubs/index.js                                 //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nvar map = require(\"./map.json\");\nvar meteorAliases = {};\n\nObject.keys(map).forEach(function (id) {\n  if (typeof map[id] === \"string\") {\n    try {\n      exports[id] = meteorAliases[id + \".js\"] =\n        require.resolve(map[id]);\n    } catch (e) {\n      // Resolution can fail at runtime if the stub was not included in the\n      // bundle because nothing depended on it.\n    }\n  } else {\n    exports[id] = map[id];\n    meteorAliases[id + \".js\"] = function(){};\n  }\n});\n\nif (typeof meteorInstall === \"function\") {\n  meteorInstall({\n    // Install the aliases into a node_modules directory one level up from\n    // the root directory, so that they do not clutter the namespace\n    // available to apps and packages.\n    \"..\": {\n      node_modules: meteorAliases\n    }\n  });\n}\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"map.json\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/practicalmeteor:mocha/node_modules/meteor-node-stubs/map.json                                 //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.exports = {\n  \"assert\": \"assert/\",\n  \"buffer\": \"buffer/\",\n  \"child_process\": null,\n  \"cluster\": null,\n  \"console\": \"console-browserify\",\n  \"constants\": \"constants-browserify\",\n  \"crypto\": \"crypto-browserify\",\n  \"dgram\": null,\n  \"dns\": null,\n  \"domain\": \"domain-browser\",\n  \"events\": \"events/\",\n  \"fs\": null,\n  \"http\": \"http-browserify\",\n  \"https\": \"https-browserify\",\n  \"module\": null,\n  \"net\": null,\n  \"os\": \"os-browserify/browser.js\",\n  \"path\": \"path-browserify\",\n  \"process\": \"process/browser.js\",\n  \"punycode\": \"punycode/\",\n  \"querystring\": \"querystring-es3/\",\n  \"readline\": null,\n  \"repl\": null,\n  \"stream\": \"stream-browserify\",\n  \"_stream_duplex\": \"readable-stream/duplex.js\",\n  \"_stream_passthrough\": \"readable-stream/passthrough.js\",\n  \"_stream_readable\": \"readable-stream/readable.js\",\n  \"_stream_transform\": \"readable-stream/transform.js\",\n  \"_stream_writable\": \"readable-stream/writable.js\",\n  \"string_decoder\": \"string_decoder/\",\n  \"sys\": \"util/util.js\",\n  \"timers\": \"timers-browserify\",\n  \"tls\": null,\n  \"tty\": \"tty-browserify\",\n  \"url\": \"url/\",\n  \"util\": \"util/util.js\",\n  \"vm\": \"vm-browserify\",\n  \"zlib\": \"browserify-zlib\"\n};\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"underscore\":{\"package.json\":function(require,exports){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// ../npm/node_modules/underscore/package.json                                                                       //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nexports.name = \"underscore\";\nexports.version = \"1.8.3\";\nexports.main = \"underscore.js\";\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"underscore.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/practicalmeteor:mocha/node_modules/underscore/underscore.js                                   //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"mocha\":{\"lib\":{\"test.js\":[\"./runnable\",\"./utils\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/practicalmeteor:mocha/node_modules/mocha/lib/test.js                                          //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n/**\n * Module dependencies.\n */\n\nvar Runnable = require('./runnable');\nvar inherits = require('./utils').inherits;\n\n/**\n * Expose `Test`.\n */\n\nmodule.exports = Test;\n\n/**\n * Initialize a new `Test` with the given `title` and callback `fn`.\n *\n * @api private\n * @param {String} title\n * @param {Function} fn\n */\nfunction Test(title, fn) {\n  Runnable.call(this, title, fn);\n  this.pending = !fn;\n  this.type = 'test';\n  this.body = (fn || '').toString();\n}\n\n/**\n * Inherit from `Runnable.prototype`.\n */\ninherits(Test, Runnable);\n\nTest.prototype.clone = function() {\n  var test = new Test(this.title, this.fn);\n  test.timeout(this.timeout());\n  test.slow(this.slow());\n  test.enableTimeouts(this.enableTimeouts());\n  test.retries(this.retries());\n  test.currentRetry(this.currentRetry());\n  test.globals(this.globals());\n  test.parent = this.parent;\n  test.file = this.file;\n  test.ctx = this.ctx;\n  return test;\n};\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"runnable.js\":[\"events\",\"./pending\",\"debug\",\"./ms\",\"./utils\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/practicalmeteor:mocha/node_modules/mocha/lib/runnable.js                                      //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n/**\n * Module dependencies.\n */\n\nvar EventEmitter = require('events').EventEmitter;\nvar Pending = require('./pending');\nvar debug = require('debug')('mocha:runnable');\nvar milliseconds = require('./ms');\nvar utils = require('./utils');\nvar inherits = utils.inherits;\n\n/**\n * Save timer references to avoid Sinon interfering (see GH-237).\n */\n\n/* eslint-disable no-unused-vars, no-native-reassign */\nvar Date = global.Date;\nvar setTimeout = global.setTimeout;\nvar setInterval = global.setInterval;\nvar clearTimeout = global.clearTimeout;\nvar clearInterval = global.clearInterval;\n/* eslint-enable no-unused-vars, no-native-reassign */\n\n/**\n * Object#toString().\n */\n\nvar toString = Object.prototype.toString;\n\n/**\n * Expose `Runnable`.\n */\n\nmodule.exports = Runnable;\n\n/**\n * Initialize a new `Runnable` with the given `title` and callback `fn`.\n *\n * @param {String} title\n * @param {Function} fn\n * @api private\n * @param {string} title\n * @param {Function} fn\n */\nfunction Runnable(title, fn) {\n  this.title = title;\n  this.fn = fn;\n  this.async = fn && fn.length;\n  this.sync = !this.async;\n  this._timeout = 2000;\n  this._slow = 75;\n  this._enableTimeouts = true;\n  this.timedOut = false;\n  this._trace = new Error('done() called multiple times');\n  this._retries = -1;\n  this._currentRetry = 0;\n}\n\n/**\n * Inherit from `EventEmitter.prototype`.\n */\ninherits(Runnable, EventEmitter);\n\n/**\n * Set & get timeout `ms`.\n *\n * @api private\n * @param {number|string} ms\n * @return {Runnable|number} ms or Runnable instance.\n */\nRunnable.prototype.timeout = function(ms) {\n  if (!arguments.length) {\n    return this._timeout;\n  }\n  if (ms === 0) {\n    this._enableTimeouts = false;\n  }\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  }\n  debug('timeout %d', ms);\n  this._timeout = ms;\n  if (this.timer) {\n    this.resetTimeout();\n  }\n  return this;\n};\n\n/**\n * Set & get slow `ms`.\n *\n * @api private\n * @param {number|string} ms\n * @return {Runnable|number} ms or Runnable instance.\n */\nRunnable.prototype.slow = function(ms) {\n  if (!arguments.length) {\n    return this._slow;\n  }\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  }\n  debug('timeout %d', ms);\n  this._slow = ms;\n  return this;\n};\n\n/**\n * Set and get whether timeout is `enabled`.\n *\n * @api private\n * @param {boolean} enabled\n * @return {Runnable|boolean} enabled or Runnable instance.\n */\nRunnable.prototype.enableTimeouts = function(enabled) {\n  if (!arguments.length) {\n    return this._enableTimeouts;\n  }\n  debug('enableTimeouts %s', enabled);\n  this._enableTimeouts = enabled;\n  return this;\n};\n\n/**\n * Halt and mark as pending.\n *\n * @api private\n */\nRunnable.prototype.skip = function() {\n  throw new Pending();\n};\n\n/**\n * Set number of retries.\n *\n * @api private\n */\nRunnable.prototype.retries = function(n) {\n  if (!arguments.length) {\n    return this._retries;\n  }\n  this._retries = n;\n};\n\n/**\n * Get current retry\n *\n * @api private\n */\nRunnable.prototype.currentRetry = function(n) {\n  if (!arguments.length) {\n    return this._currentRetry;\n  }\n  this._currentRetry = n;\n};\n\n/**\n * Return the full title generated by recursively concatenating the parent's\n * full title.\n *\n * @api public\n * @return {string}\n */\nRunnable.prototype.fullTitle = function() {\n  return this.parent.fullTitle() + ' ' + this.title;\n};\n\n/**\n * Clear the timeout.\n *\n * @api private\n */\nRunnable.prototype.clearTimeout = function() {\n  clearTimeout(this.timer);\n};\n\n/**\n * Inspect the runnable void of private properties.\n *\n * @api private\n * @return {string}\n */\nRunnable.prototype.inspect = function() {\n  return JSON.stringify(this, function(key, val) {\n    if (key[0] === '_') {\n      return;\n    }\n    if (key === 'parent') {\n      return '#<Suite>';\n    }\n    if (key === 'ctx') {\n      return '#<Context>';\n    }\n    return val;\n  }, 2);\n};\n\n/**\n * Reset the timeout.\n *\n * @api private\n */\nRunnable.prototype.resetTimeout = function() {\n  var self = this;\n  var ms = this.timeout() || 1e9;\n\n  if (!this._enableTimeouts) {\n    return;\n  }\n  this.clearTimeout();\n  this.timer = setTimeout(function() {\n    if (!self._enableTimeouts) {\n      return;\n    }\n    self.callback(new Error('timeout of ' + ms + 'ms exceeded. Ensure the done() callback is being called in this test.'));\n    self.timedOut = true;\n  }, ms);\n};\n\n/**\n * Whitelist a list of globals for this test run.\n *\n * @api private\n * @param {string[]} globals\n */\nRunnable.prototype.globals = function(globals) {\n  if (!arguments.length) {\n    return this._allowedGlobals;\n  }\n  this._allowedGlobals = globals;\n};\n\n/**\n * Run the test and invoke `fn(err)`.\n *\n * @param {Function} fn\n * @api private\n */\nRunnable.prototype.run = function(fn) {\n  var self = this;\n  var start = new Date();\n  var ctx = this.ctx;\n  var finished;\n  var emitted;\n\n  // Sometimes the ctx exists, but it is not runnable\n  if (ctx && ctx.runnable) {\n    ctx.runnable(this);\n  }\n\n  // called multiple times\n  function multiple(err) {\n    if (emitted) {\n      return;\n    }\n    emitted = true;\n    self.emit('error', err || new Error('done() called multiple times; stacktrace may be inaccurate'));\n  }\n\n  // finished\n  function done(err) {\n    var ms = self.timeout();\n    if (self.timedOut) {\n      return;\n    }\n    if (finished) {\n      return multiple(err || self._trace);\n    }\n\n    self.clearTimeout();\n    self.duration = new Date() - start;\n    finished = true;\n    if (!err && self.duration > ms && self._enableTimeouts) {\n      err = new Error('timeout of ' + ms + 'ms exceeded. Ensure the done() callback is being called in this test.');\n    }\n    fn(err);\n  }\n\n  // for .resetTimeout()\n  this.callback = done;\n\n  // explicit async with `done` argument\n  if (this.async) {\n    this.resetTimeout();\n\n    if (this.allowUncaught) {\n      return callFnAsync(this.fn);\n    }\n    try {\n      callFnAsync(this.fn);\n    } catch (err) {\n      done(utils.getError(err));\n    }\n    return;\n  }\n\n  if (this.allowUncaught) {\n    callFn(this.fn);\n    done();\n    return;\n  }\n\n  // sync or promise-returning\n  try {\n    if (this.pending) {\n      done();\n    } else {\n      callFn(this.fn);\n    }\n  } catch (err) {\n    done(utils.getError(err));\n  }\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result\n        .then(function() {\n          done();\n          // Return null so libraries like bluebird do not warn about\n          // subsequently constructed Promises.\n          return null;\n        },\n        function(reason) {\n          done(reason || new Error('Promise rejected with no or falsy reason'));\n        });\n    } else {\n      if (self.asyncOnly) {\n        return done(new Error('--async-only option in use without declaring `done()` or returning a promise'));\n      }\n\n      done();\n    }\n  }\n\n  function callFnAsync(fn) {\n    fn.call(ctx, function(err) {\n      if (err instanceof Error || toString.call(err) === '[object Error]') {\n        return done(err);\n      }\n      if (err) {\n        if (Object.prototype.toString.call(err) === '[object Object]') {\n          return done(new Error('done() invoked with non-Error: '\n            + JSON.stringify(err)));\n        }\n        return done(new Error('done() invoked with non-Error: ' + err));\n      }\n      done();\n    });\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"pending.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/practicalmeteor:mocha/node_modules/mocha/lib/pending.js                                       //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n\n/**\n * Expose `Pending`.\n */\n\nmodule.exports = Pending;\n\n/**\n * Initialize a new `Pending` error with the given message.\n *\n * @param {string} message\n */\nfunction Pending(message) {\n  this.message = message;\n}\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ms.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/practicalmeteor:mocha/node_modules/mocha/lib/ms.js                                            //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @api public\n * @param {string|number} val\n * @param {Object} options\n * @return {string|number}\n */\nmodule.exports = function(val, options) {\n  options = options || {};\n  if (typeof val === 'string') {\n    return parse(val);\n  }\n  // https://github.com/mochajs/mocha/pull/1035\n  return options['long'] ? longFormat(val) : shortFormat(val);\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @api private\n * @param {string} str\n * @return {number}\n */\nfunction parse(str) {\n  var match = (/^((?:\\d+)?\\.?\\d+) *(ms|seconds?|s|minutes?|m|hours?|h|days?|d|years?|y)?$/i).exec(str);\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 's':\n      return n * s;\n    case 'ms':\n      return n;\n    default:\n      // No default case\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @api private\n * @param {number} ms\n * @return {string}\n */\nfunction shortFormat(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @api private\n * @param {number} ms\n * @return {string}\n */\nfunction longFormat(ms) {\n  return plural(ms, d, 'day')\n    || plural(ms, h, 'hour')\n    || plural(ms, m, 'minute')\n    || plural(ms, s, 'second')\n    || ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n *\n * @api private\n * @param {number} ms\n * @param {number} n\n * @param {string} name\n */\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"utils.js\":[\"path\",\"debug\",\"fs\",\"glob\",\"util\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/practicalmeteor:mocha/node_modules/mocha/lib/utils.js                                         //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n/* eslint-env browser */\n\n/**\n * Module dependencies.\n */\n\nvar basename = require('path').basename;\nvar debug = require('debug')('mocha:watch');\nvar exists = require('fs').existsSync || require('path').existsSync;\nvar glob = require('glob');\nvar join = require('path').join;\nvar readdirSync = require('fs').readdirSync;\nvar statSync = require('fs').statSync;\nvar watchFile = require('fs').watchFile;\n\n/**\n * Ignored directories.\n */\n\nvar ignore = ['node_modules', '.git'];\n\nexports.inherits = require('util').inherits;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @api private\n * @param  {string} html\n * @return {string}\n */\nexports.escape = function(html) {\n  return String(html)\n    .replace(/&/g, '&amp;')\n    .replace(/\"/g, '&quot;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;');\n};\n\n/**\n * Array#forEach (<=IE8)\n *\n * @api private\n * @param {Array} arr\n * @param {Function} fn\n * @param {Object} scope\n */\nexports.forEach = function(arr, fn, scope) {\n  for (var i = 0, l = arr.length; i < l; i++) {\n    fn.call(scope, arr[i], i);\n  }\n};\n\n/**\n * Test if the given obj is type of string.\n *\n * @api private\n * @param {Object} obj\n * @return {boolean}\n */\nexports.isString = function(obj) {\n  return typeof obj === 'string';\n};\n\n/**\n * Array#map (<=IE8)\n *\n * @api private\n * @param {Array} arr\n * @param {Function} fn\n * @param {Object} scope\n * @return {Array}\n */\nexports.map = function(arr, fn, scope) {\n  var result = [];\n  for (var i = 0, l = arr.length; i < l; i++) {\n    result.push(fn.call(scope, arr[i], i, arr));\n  }\n  return result;\n};\n\n/**\n * Array#indexOf (<=IE8)\n *\n * @api private\n * @param {Array} arr\n * @param {Object} obj to find index of\n * @param {number} start\n * @return {number}\n */\nexports.indexOf = function(arr, obj, start) {\n  for (var i = start || 0, l = arr.length; i < l; i++) {\n    if (arr[i] === obj) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n/**\n * Array#reduce (<=IE8)\n *\n * @api private\n * @param {Array} arr\n * @param {Function} fn\n * @param {Object} val Initial value.\n * @return {*}\n */\nexports.reduce = function(arr, fn, val) {\n  var rval = val;\n\n  for (var i = 0, l = arr.length; i < l; i++) {\n    rval = fn(rval, arr[i], i, arr);\n  }\n\n  return rval;\n};\n\n/**\n * Array#filter (<=IE8)\n *\n * @api private\n * @param {Array} arr\n * @param {Function} fn\n * @return {Array}\n */\nexports.filter = function(arr, fn) {\n  var ret = [];\n\n  for (var i = 0, l = arr.length; i < l; i++) {\n    var val = arr[i];\n    if (fn(val, i, arr)) {\n      ret.push(val);\n    }\n  }\n\n  return ret;\n};\n\n/**\n * Object.keys (<=IE8)\n *\n * @api private\n * @param {Object} obj\n * @return {Array} keys\n */\nexports.keys = typeof Object.keys === 'function' ? Object.keys : function(obj) {\n  var keys = [];\n  var has = Object.prototype.hasOwnProperty; // for `window` on <=IE8\n\n  for (var key in obj) {\n    if (has.call(obj, key)) {\n      keys.push(key);\n    }\n  }\n\n  return keys;\n};\n\n/**\n * Watch the given `files` for changes\n * and invoke `fn(file)` on modification.\n *\n * @api private\n * @param {Array} files\n * @param {Function} fn\n */\nexports.watch = function(files, fn) {\n  var options = { interval: 100 };\n  files.forEach(function(file) {\n    debug('file %s', file);\n    watchFile(file, options, function(curr, prev) {\n      if (prev.mtime < curr.mtime) {\n        fn(file);\n      }\n    });\n  });\n};\n\n/**\n * Array.isArray (<=IE8)\n *\n * @api private\n * @param {Object} obj\n * @return {Boolean}\n */\nvar isArray = typeof Array.isArray === 'function' ? Array.isArray : function(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]';\n};\n\nexports.isArray = isArray;\n\n/**\n * Buffer.prototype.toJSON polyfill.\n *\n * @type {Function}\n */\nif (typeof Buffer !== 'undefined' && Buffer.prototype) {\n  Buffer.prototype.toJSON = Buffer.prototype.toJSON || function() {\n    return Array.prototype.slice.call(this, 0);\n  };\n}\n\n/**\n * Ignored files.\n *\n * @api private\n * @param {string} path\n * @return {boolean}\n */\nfunction ignored(path) {\n  return !~ignore.indexOf(path);\n}\n\n/**\n * Lookup files in the given `dir`.\n *\n * @api private\n * @param {string} dir\n * @param {string[]} [ext=['.js']]\n * @param {Array} [ret=[]]\n * @return {Array}\n */\nexports.files = function(dir, ext, ret) {\n  ret = ret || [];\n  ext = ext || ['js'];\n\n  var re = new RegExp('\\\\.(' + ext.join('|') + ')$');\n\n  readdirSync(dir)\n    .filter(ignored)\n    .forEach(function(path) {\n      path = join(dir, path);\n      if (statSync(path).isDirectory()) {\n        exports.files(path, ext, ret);\n      } else if (path.match(re)) {\n        ret.push(path);\n      }\n    });\n\n  return ret;\n};\n\n/**\n * Compute a slug from the given `str`.\n *\n * @api private\n * @param {string} str\n * @return {string}\n */\nexports.slug = function(str) {\n  return str\n    .toLowerCase()\n    .replace(/ +/g, '-')\n    .replace(/[^-\\w]/g, '');\n};\n\n/**\n * Strip the function definition from `str`, and re-indent for pre whitespace.\n *\n * @param {string} str\n * @return {string}\n */\nexports.clean = function(str) {\n  str = str\n    .replace(/\\r\\n?|[\\n\\u2028\\u2029]/g, '\\n').replace(/^\\uFEFF/, '')\n    .replace(/^function *\\(.*\\)\\s*\\{|\\(.*\\) *=> *\\{?/, '')\n    .replace(/\\s+\\}$/, '');\n\n  var spaces = str.match(/^\\n?( *)/)[1].length;\n  var tabs = str.match(/^\\n?(\\t*)/)[1].length;\n  var re = new RegExp('^\\n?' + (tabs ? '\\t' : ' ') + '{' + (tabs ? tabs : spaces) + '}', 'gm');\n\n  str = str.replace(re, '');\n\n  return exports.trim(str);\n};\n\n/**\n * Trim the given `str`.\n *\n * @api private\n * @param {string} str\n * @return {string}\n */\nexports.trim = function(str) {\n  return str.replace(/^\\s+|\\s+$/g, '');\n};\n\n/**\n * Parse the given `qs`.\n *\n * @api private\n * @param {string} qs\n * @return {Object}\n */\nexports.parseQuery = function(qs) {\n  return exports.reduce(qs.replace('?', '').split('&'), function(obj, pair) {\n    var i = pair.indexOf('=');\n    var key = pair.slice(0, i);\n    var val = pair.slice(++i);\n\n    obj[key] = decodeURIComponent(val);\n    return obj;\n  }, {});\n};\n\n/**\n * Highlight the given string of `js`.\n *\n * @api private\n * @param {string} js\n * @return {string}\n */\nfunction highlight(js) {\n  return js\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\\/\\/(.*)/gm, '<span class=\"comment\">//$1</span>')\n    .replace(/('.*?')/gm, '<span class=\"string\">$1</span>')\n    .replace(/(\\d+\\.\\d+)/gm, '<span class=\"number\">$1</span>')\n    .replace(/(\\d+)/gm, '<span class=\"number\">$1</span>')\n    .replace(/\\bnew[ \\t]+(\\w+)/gm, '<span class=\"keyword\">new</span> <span class=\"init\">$1</span>')\n    .replace(/\\b(function|new|throw|return|var|if|else)\\b/gm, '<span class=\"keyword\">$1</span>');\n}\n\n/**\n * Highlight the contents of tag `name`.\n *\n * @api private\n * @param {string} name\n */\nexports.highlightTags = function(name) {\n  var code = document.getElementById('mocha').getElementsByTagName(name);\n  for (var i = 0, len = code.length; i < len; ++i) {\n    code[i].innerHTML = highlight(code[i].innerHTML);\n  }\n};\n\n/**\n * If a value could have properties, and has none, this function is called,\n * which returns a string representation of the empty value.\n *\n * Functions w/ no properties return `'[Function]'`\n * Arrays w/ length === 0 return `'[]'`\n * Objects w/ no properties return `'{}'`\n * All else: return result of `value.toString()`\n *\n * @api private\n * @param {*} value The value to inspect.\n * @param {string} [type] The type of the value, if known.\n * @returns {string}\n */\nfunction emptyRepresentation(value, type) {\n  type = type || exports.type(value);\n\n  switch (type) {\n    case 'function':\n      return '[Function]';\n    case 'object':\n      return '{}';\n    case 'array':\n      return '[]';\n    default:\n      return value.toString();\n  }\n}\n\n/**\n * Takes some variable and asks `Object.prototype.toString()` what it thinks it\n * is.\n *\n * @api private\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\n * @param {*} value The value to test.\n * @returns {string}\n * @example\n * type({}) // 'object'\n * type([]) // 'array'\n * type(1) // 'number'\n * type(false) // 'boolean'\n * type(Infinity) // 'number'\n * type(null) // 'null'\n * type(new Date()) // 'date'\n * type(/foo/) // 'regexp'\n * type('type') // 'string'\n * type(global) // 'global'\n */\nexports.type = function type(value) {\n  if (value === undefined) {\n    return 'undefined';\n  } else if (value === null) {\n    return 'null';\n  } else if (typeof Buffer !== 'undefined' && Buffer.isBuffer(value)) {\n    return 'buffer';\n  }\n  return Object.prototype.toString.call(value)\n    .replace(/^\\[.+\\s(.+?)\\]$/, '$1')\n    .toLowerCase();\n};\n\n/**\n * Stringify `value`. Different behavior depending on type of value:\n *\n * - If `value` is undefined or null, return `'[undefined]'` or `'[null]'`, respectively.\n * - If `value` is not an object, function or array, return result of `value.toString()` wrapped in double-quotes.\n * - If `value` is an *empty* object, function, or array, return result of function\n *   {@link emptyRepresentation}.\n * - If `value` has properties, call {@link exports.canonicalize} on it, then return result of\n *   JSON.stringify().\n *\n * @api private\n * @see exports.type\n * @param {*} value\n * @return {string}\n */\nexports.stringify = function(value) {\n  var type = exports.type(value);\n\n  if (!~exports.indexOf(['object', 'array', 'function'], type)) {\n    if (type !== 'buffer') {\n      return jsonStringify(value);\n    }\n    var json = value.toJSON();\n    // Based on the toJSON result\n    return jsonStringify(json.data && json.type ? json.data : json, 2)\n      .replace(/,(\\n|$)/g, '$1');\n  }\n\n  for (var prop in value) {\n    if (Object.prototype.hasOwnProperty.call(value, prop)) {\n      return jsonStringify(exports.canonicalize(value), 2).replace(/,(\\n|$)/g, '$1');\n    }\n  }\n\n  return emptyRepresentation(value, type);\n};\n\n/**\n * like JSON.stringify but more sense.\n *\n * @api private\n * @param {Object}  object\n * @param {number=} spaces\n * @param {number=} depth\n * @returns {*}\n */\nfunction jsonStringify(object, spaces, depth) {\n  if (typeof spaces === 'undefined') {\n    // primitive types\n    return _stringify(object);\n  }\n\n  depth = depth || 1;\n  var space = spaces * depth;\n  var str = isArray(object) ? '[' : '{';\n  var end = isArray(object) ? ']' : '}';\n  var length = object.length || exports.keys(object).length;\n  // `.repeat()` polyfill\n  function repeat(s, n) {\n    return new Array(n).join(s);\n  }\n\n  function _stringify(val) {\n    switch (exports.type(val)) {\n      case 'null':\n      case 'undefined':\n        val = '[' + val + ']';\n        break;\n      case 'array':\n      case 'object':\n        val = jsonStringify(val, spaces, depth + 1);\n        break;\n      case 'boolean':\n      case 'regexp':\n      case 'number':\n        val = val === 0 && (1 / val) === -Infinity // `-0`\n          ? '-0'\n          : val.toString();\n        break;\n      case 'date':\n        var sDate = isNaN(val.getTime())        // Invalid date\n          ? val.toString()\n          : val.toISOString();\n        val = '[Date: ' + sDate + ']';\n        break;\n      case 'buffer':\n        var json = val.toJSON();\n        // Based on the toJSON result\n        json = json.data && json.type ? json.data : json;\n        val = '[Buffer: ' + jsonStringify(json, 2, depth + 1) + ']';\n        break;\n      default:\n        val = (val === '[Function]' || val === '[Circular]')\n          ? val\n          : JSON.stringify(val); // string\n    }\n    return val;\n  }\n\n  for (var i in object) {\n    if (!object.hasOwnProperty(i)) {\n      continue; // not my business\n    }\n    --length;\n    str += '\\n ' + repeat(' ', space)\n      + (isArray(object) ? '' : '\"' + i + '\": ') // key\n      + _stringify(object[i])                     // value\n      + (length ? ',' : '');                     // comma\n  }\n\n  return str\n    // [], {}\n    + (str.length !== 1 ? '\\n' + repeat(' ', --space) + end : end);\n}\n\n/**\n * Test if a value is a buffer.\n *\n * @api private\n * @param {*} value The value to test.\n * @return {boolean} True if `value` is a buffer, otherwise false\n */\nexports.isBuffer = function(value) {\n  return typeof Buffer !== 'undefined' && Buffer.isBuffer(value);\n};\n\n/**\n * Return a new Thing that has the keys in sorted order. Recursive.\n *\n * If the Thing...\n * - has already been seen, return string `'[Circular]'`\n * - is `undefined`, return string `'[undefined]'`\n * - is `null`, return value `null`\n * - is some other primitive, return the value\n * - is not a primitive or an `Array`, `Object`, or `Function`, return the value of the Thing's `toString()` method\n * - is a non-empty `Array`, `Object`, or `Function`, return the result of calling this function again.\n * - is an empty `Array`, `Object`, or `Function`, return the result of calling `emptyRepresentation()`\n *\n * @api private\n * @see {@link exports.stringify}\n * @param {*} value Thing to inspect.  May or may not have properties.\n * @param {Array} [stack=[]] Stack of seen values\n * @return {(Object|Array|Function|string|undefined)}\n */\nexports.canonicalize = function(value, stack) {\n  var canonicalizedObj;\n  /* eslint-disable no-unused-vars */\n  var prop;\n  /* eslint-enable no-unused-vars */\n  var type = exports.type(value);\n  function withStack(value, fn) {\n    stack.push(value);\n    fn();\n    stack.pop();\n  }\n\n  stack = stack || [];\n\n  if (exports.indexOf(stack, value) !== -1) {\n    return '[Circular]';\n  }\n\n  switch (type) {\n    case 'undefined':\n    case 'buffer':\n    case 'null':\n      canonicalizedObj = value;\n      break;\n    case 'array':\n      withStack(value, function() {\n        canonicalizedObj = exports.map(value, function(item) {\n          return exports.canonicalize(item, stack);\n        });\n      });\n      break;\n    case 'function':\n      /* eslint-disable guard-for-in */\n      for (prop in value) {\n        canonicalizedObj = {};\n        break;\n      }\n      /* eslint-enable guard-for-in */\n      if (!canonicalizedObj) {\n        canonicalizedObj = emptyRepresentation(value, type);\n        break;\n      }\n    /* falls through */\n    case 'object':\n      canonicalizedObj = canonicalizedObj || {};\n      withStack(value, function() {\n        exports.forEach(exports.keys(value).sort(), function(key) {\n          canonicalizedObj[key] = exports.canonicalize(value[key], stack);\n        });\n      });\n      break;\n    case 'date':\n    case 'number':\n    case 'regexp':\n    case 'boolean':\n      canonicalizedObj = value;\n      break;\n    default:\n      canonicalizedObj = value + '';\n  }\n\n  return canonicalizedObj;\n};\n\n/**\n * Lookup file names at the given `path`.\n *\n * @api public\n * @param {string} path Base path to start searching from.\n * @param {string[]} extensions File extensions to look for.\n * @param {boolean} recursive Whether or not to recurse into subdirectories.\n * @return {string[]} An array of paths.\n */\nexports.lookupFiles = function lookupFiles(path, extensions, recursive) {\n  var files = [];\n  var re = new RegExp('\\\\.(' + extensions.join('|') + ')$');\n\n  if (!exists(path)) {\n    if (exists(path + '.js')) {\n      path += '.js';\n    } else {\n      files = glob.sync(path);\n      if (!files.length) {\n        throw new Error(\"cannot resolve path (or pattern) '\" + path + \"'\");\n      }\n      return files;\n    }\n  }\n\n  try {\n    var stat = statSync(path);\n    if (stat.isFile()) {\n      return path;\n    }\n  } catch (err) {\n    // ignore error\n    return;\n  }\n\n  readdirSync(path).forEach(function(file) {\n    file = join(path, file);\n    try {\n      var stat = statSync(file);\n      if (stat.isDirectory()) {\n        if (recursive) {\n          files = files.concat(lookupFiles(file, extensions, recursive));\n        }\n        return;\n      }\n    } catch (err) {\n      // ignore error\n      return;\n    }\n    if (!stat.isFile() || !re.test(file) || basename(file)[0] === '.') {\n      return;\n    }\n    files.push(file);\n  });\n\n  return files;\n};\n\n/**\n * Generate an undefined error with a message warning the user.\n *\n * @return {Error}\n */\n\nexports.undefinedError = function() {\n  return new Error('Caught undefined error, did you throw without specifying what?');\n};\n\n/**\n * Generate an undefined error if `err` is not defined.\n *\n * @param {Error} err\n * @return {Error}\n */\n\nexports.getError = function(err) {\n  return err || exports.undefinedError();\n};\n\n/**\n * @summary\n * This Filter based on `mocha-clean` module.(see: `github.com/rstacruz/mocha-clean`)\n * @description\n * When invoking this function you get a filter function that get the Error.stack as an input,\n * and return a prettify output.\n * (i.e: strip Mocha and internal node functions from stack trace).\n * @returns {Function}\n */\nexports.stackTraceFilter = function() {\n  // TODO: Replace with `process.browser`\n  var slash = '/';\n  var is = typeof document === 'undefined' ? { node: true } : { browser: true };\n  var cwd = is.node\n      ? process.cwd() + slash\n      : (typeof location === 'undefined' ? window.location : location).href.replace(/\\/[^\\/]*$/, '/');\n\n  function isMochaInternal(line) {\n    return (~line.indexOf('node_modules' + slash + 'mocha' + slash))\n      || (~line.indexOf('components' + slash + 'mochajs' + slash))\n      || (~line.indexOf('components' + slash + 'mocha' + slash))\n      || (~line.indexOf(slash + 'mocha.js'));\n  }\n\n  function isNodeInternal(line) {\n    return (~line.indexOf('(timers.js:'))\n      || (~line.indexOf('(events.js:'))\n      || (~line.indexOf('(node.js:'))\n      || (~line.indexOf('(module.js:'))\n      || (~line.indexOf('GeneratorFunctionPrototype.next (native)'))\n      || false;\n  }\n\n  return function(stack) {\n    stack = stack.split('\\n');\n\n    stack = exports.reduce(stack, function(list, line) {\n      if (isMochaInternal(line)) {\n        return list;\n      }\n\n      if (is.node && isNodeInternal(line)) {\n        return list;\n      }\n\n      // Clean up cwd(absolute)\n      list.push(line.replace(cwd, ''));\n      return list;\n    }, []);\n\n    return stack.join('\\n');\n  };\n};\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"suite.js\":[\"events\",\"./hook\",\"./utils\",\"debug\",\"./ms\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/practicalmeteor:mocha/node_modules/mocha/lib/suite.js                                         //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n/**\n * Module dependencies.\n */\n\nvar EventEmitter = require('events').EventEmitter;\nvar Hook = require('./hook');\nvar utils = require('./utils');\nvar inherits = utils.inherits;\nvar debug = require('debug')('mocha:suite');\nvar milliseconds = require('./ms');\n\n/**\n * Expose `Suite`.\n */\n\nexports = module.exports = Suite;\n\n/**\n * Create a new `Suite` with the given `title` and parent `Suite`. When a suite\n * with the same title is already present, that suite is returned to provide\n * nicer reporter and more flexible meta-testing.\n *\n * @api public\n * @param {Suite} parent\n * @param {string} title\n * @return {Suite}\n */\nexports.create = function(parent, title) {\n  var suite = new Suite(title, parent.ctx);\n  suite.parent = parent;\n  if (parent.pending) {\n    suite.pending = true;\n  }\n  title = suite.fullTitle();\n  parent.addSuite(suite);\n  return suite;\n};\n\n/**\n * Initialize a new `Suite` with the given `title` and `ctx`.\n *\n * @api private\n * @param {string} title\n * @param {Context} parentContext\n */\nfunction Suite(title, parentContext) {\n  this.title = title;\n  function Context() {}\n  Context.prototype = parentContext;\n  this.ctx = new Context();\n  this.suites = [];\n  this.tests = [];\n  this.pending = false;\n  this._beforeEach = [];\n  this._beforeAll = [];\n  this._afterEach = [];\n  this._afterAll = [];\n  this.root = !title;\n  this._timeout = 2000;\n  this._enableTimeouts = true;\n  this._slow = 75;\n  this._bail = false;\n  this._retries = -1;\n  this.delayed = false;\n}\n\n/**\n * Inherit from `EventEmitter.prototype`.\n */\ninherits(Suite, EventEmitter);\n\n/**\n * Return a clone of this `Suite`.\n *\n * @api private\n * @return {Suite}\n */\nSuite.prototype.clone = function() {\n  var suite = new Suite(this.title);\n  debug('clone');\n  suite.ctx = this.ctx;\n  suite.timeout(this.timeout());\n  suite.retries(this.retries());\n  suite.enableTimeouts(this.enableTimeouts());\n  suite.slow(this.slow());\n  suite.bail(this.bail());\n  return suite;\n};\n\n/**\n * Set timeout `ms` or short-hand such as \"2s\".\n *\n * @api private\n * @param {number|string} ms\n * @return {Suite|number} for chaining\n */\nSuite.prototype.timeout = function(ms) {\n  if (!arguments.length) {\n    return this._timeout;\n  }\n  if (ms.toString() === '0') {\n    this._enableTimeouts = false;\n  }\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  }\n  debug('timeout %d', ms);\n  this._timeout = parseInt(ms, 10);\n  return this;\n};\n\n/**\n * Set number of times to retry a failed test.\n *\n * @api private\n * @param {number|string} n\n * @return {Suite|number} for chaining\n */\nSuite.prototype.retries = function(n) {\n  if (!arguments.length) {\n    return this._retries;\n  }\n  debug('retries %d', n);\n  this._retries = parseInt(n, 10) || 0;\n  return this;\n};\n\n/**\n  * Set timeout to `enabled`.\n  *\n  * @api private\n  * @param {boolean} enabled\n  * @return {Suite|boolean} self or enabled\n  */\nSuite.prototype.enableTimeouts = function(enabled) {\n  if (!arguments.length) {\n    return this._enableTimeouts;\n  }\n  debug('enableTimeouts %s', enabled);\n  this._enableTimeouts = enabled;\n  return this;\n};\n\n/**\n * Set slow `ms` or short-hand such as \"2s\".\n *\n * @api private\n * @param {number|string} ms\n * @return {Suite|number} for chaining\n */\nSuite.prototype.slow = function(ms) {\n  if (!arguments.length) {\n    return this._slow;\n  }\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  }\n  debug('slow %d', ms);\n  this._slow = ms;\n  return this;\n};\n\n/**\n * Sets whether to bail after first error.\n *\n * @api private\n * @param {boolean} bail\n * @return {Suite|number} for chaining\n */\nSuite.prototype.bail = function(bail) {\n  if (!arguments.length) {\n    return this._bail;\n  }\n  debug('bail %s', bail);\n  this._bail = bail;\n  return this;\n};\n\n/**\n * Run `fn(test[, done])` before running tests.\n *\n * @api private\n * @param {string} title\n * @param {Function} fn\n * @return {Suite} for chaining\n */\nSuite.prototype.beforeAll = function(title, fn) {\n  if (this.pending) {\n    return this;\n  }\n  if (typeof title === 'function') {\n    fn = title;\n    title = fn.name;\n  }\n  title = '\"before all\" hook' + (title ? ': ' + title : '');\n\n  var hook = new Hook(title, fn);\n  hook.parent = this;\n  hook.timeout(this.timeout());\n  hook.retries(this.retries());\n  hook.enableTimeouts(this.enableTimeouts());\n  hook.slow(this.slow());\n  hook.ctx = this.ctx;\n  this._beforeAll.push(hook);\n  this.emit('beforeAll', hook);\n  return this;\n};\n\n/**\n * Run `fn(test[, done])` after running tests.\n *\n * @api private\n * @param {string} title\n * @param {Function} fn\n * @return {Suite} for chaining\n */\nSuite.prototype.afterAll = function(title, fn) {\n  if (this.pending) {\n    return this;\n  }\n  if (typeof title === 'function') {\n    fn = title;\n    title = fn.name;\n  }\n  title = '\"after all\" hook' + (title ? ': ' + title : '');\n\n  var hook = new Hook(title, fn);\n  hook.parent = this;\n  hook.timeout(this.timeout());\n  hook.retries(this.retries());\n  hook.enableTimeouts(this.enableTimeouts());\n  hook.slow(this.slow());\n  hook.ctx = this.ctx;\n  this._afterAll.push(hook);\n  this.emit('afterAll', hook);\n  return this;\n};\n\n/**\n * Run `fn(test[, done])` before each test case.\n *\n * @api private\n * @param {string} title\n * @param {Function} fn\n * @return {Suite} for chaining\n */\nSuite.prototype.beforeEach = function(title, fn) {\n  if (this.pending) {\n    return this;\n  }\n  if (typeof title === 'function') {\n    fn = title;\n    title = fn.name;\n  }\n  title = '\"before each\" hook' + (title ? ': ' + title : '');\n\n  var hook = new Hook(title, fn);\n  hook.parent = this;\n  hook.timeout(this.timeout());\n  hook.retries(this.retries());\n  hook.enableTimeouts(this.enableTimeouts());\n  hook.slow(this.slow());\n  hook.ctx = this.ctx;\n  this._beforeEach.push(hook);\n  this.emit('beforeEach', hook);\n  return this;\n};\n\n/**\n * Run `fn(test[, done])` after each test case.\n *\n * @api private\n * @param {string} title\n * @param {Function} fn\n * @return {Suite} for chaining\n */\nSuite.prototype.afterEach = function(title, fn) {\n  if (this.pending) {\n    return this;\n  }\n  if (typeof title === 'function') {\n    fn = title;\n    title = fn.name;\n  }\n  title = '\"after each\" hook' + (title ? ': ' + title : '');\n\n  var hook = new Hook(title, fn);\n  hook.parent = this;\n  hook.timeout(this.timeout());\n  hook.retries(this.retries());\n  hook.enableTimeouts(this.enableTimeouts());\n  hook.slow(this.slow());\n  hook.ctx = this.ctx;\n  this._afterEach.push(hook);\n  this.emit('afterEach', hook);\n  return this;\n};\n\n/**\n * Add a test `suite`.\n *\n * @api private\n * @param {Suite} suite\n * @return {Suite} for chaining\n */\nSuite.prototype.addSuite = function(suite) {\n  suite.parent = this;\n  suite.timeout(this.timeout());\n  suite.retries(this.retries());\n  suite.enableTimeouts(this.enableTimeouts());\n  suite.slow(this.slow());\n  suite.bail(this.bail());\n  this.suites.push(suite);\n  this.emit('suite', suite);\n  return this;\n};\n\n/**\n * Add a `test` to this suite.\n *\n * @api private\n * @param {Test} test\n * @return {Suite} for chaining\n */\nSuite.prototype.addTest = function(test) {\n  test.parent = this;\n  test.timeout(this.timeout());\n  test.retries(this.retries());\n  test.enableTimeouts(this.enableTimeouts());\n  test.slow(this.slow());\n  test.ctx = this.ctx;\n  this.tests.push(test);\n  this.emit('test', test);\n  return this;\n};\n\n/**\n * Return the full title generated by recursively concatenating the parent's\n * full title.\n *\n * @api public\n * @return {string}\n */\nSuite.prototype.fullTitle = function() {\n  if (this.parent) {\n    var full = this.parent.fullTitle();\n    if (full) {\n      return full + ' ' + this.title;\n    }\n  }\n  return this.title;\n};\n\n/**\n * Return the total number of tests.\n *\n * @api public\n * @return {number}\n */\nSuite.prototype.total = function() {\n  return utils.reduce(this.suites, function(sum, suite) {\n    return sum + suite.total();\n  }, 0) + this.tests.length;\n};\n\n/**\n * Iterates through each suite recursively to find all tests. Applies a\n * function in the format `fn(test)`.\n *\n * @api private\n * @param {Function} fn\n * @return {Suite}\n */\nSuite.prototype.eachTest = function(fn) {\n  utils.forEach(this.tests, fn);\n  utils.forEach(this.suites, function(suite) {\n    suite.eachTest(fn);\n  });\n  return this;\n};\n\n/**\n * This will run the root suite if we happen to be running in delayed mode.\n */\nSuite.prototype.run = function run() {\n  if (this.root) {\n    this.emit('run');\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"hook.js\":[\"./runnable\",\"./utils\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/practicalmeteor:mocha/node_modules/mocha/lib/hook.js                                          //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n/**\n * Module dependencies.\n */\n\nvar Runnable = require('./runnable');\nvar inherits = require('./utils').inherits;\n\n/**\n * Expose `Hook`.\n */\n\nmodule.exports = Hook;\n\n/**\n * Initialize a new `Hook` with the given `title` and callback `fn`.\n *\n * @param {String} title\n * @param {Function} fn\n * @api private\n */\nfunction Hook(title, fn) {\n  Runnable.call(this, title, fn);\n  this.type = 'hook';\n}\n\n/**\n * Inherit from `Runnable.prototype`.\n */\ninherits(Hook, Runnable);\n\n/**\n * Get or set the test `err`.\n *\n * @param {Error} err\n * @return {Error}\n * @api public\n */\nHook.prototype.error = function(err) {\n  if (!arguments.length) {\n    err = this._error;\n    this._error = null;\n    return err;\n  }\n\n  this._error = err;\n};\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},\"debug\":{\"package.json\":function(require,exports){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// ../npm/node_modules/debug/package.json                                                                            //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nexports.name = \"debug\";\nexports.version = \"2.2.0\";\nexports.main = \"./node.js\";\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"node.js\":[\"tty\",\"util\",\"./debug\",\"fs\",\"net\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/practicalmeteor:mocha/node_modules/debug/node.js                                              //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n\n/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\nvar stream = 1 === fd ? process.stdout :\n             2 === fd ? process.stderr :\n             createWritableStdioStream(fd);\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  var debugColors = (process.env.DEBUG_COLORS || '').trim().toLowerCase();\n  if (0 === debugColors.length) {\n    return tty.isatty(fd);\n  } else {\n    return '0' !== debugColors\n        && 'no' !== debugColors\n        && 'false' !== debugColors\n        && 'disabled' !== debugColors;\n  }\n}\n\n/**\n * Map %o to `util.inspect()`, since Node doesn't do that out of the box.\n */\n\nvar inspect = (4 === util.inspect.length ?\n  // node <= 0.8.x\n  function (v, colors) {\n    return util.inspect(v, void 0, void 0, colors);\n  } :\n  // node > 0.8.x\n  function (v, colors) {\n    return util.inspect(v, { colors: colors });\n  }\n);\n\nexports.formatters.o = function(v) {\n  return inspect(v, this.useColors)\n    .replace(/\\s*\\n\\s*/g, ' ');\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n  var name = this.namespace;\n\n  if (useColors) {\n    var c = this.color;\n\n    args[0] = '  \\u001b[3' + c + ';1m' + name + ' '\n      + '\\u001b[0m'\n      + args[0] + '\\u001b[3' + c + 'm'\n      + ' +' + exports.humanize(this.diff) + '\\u001b[0m';\n  } else {\n    args[0] = new Date().toUTCString()\n      + ' ' + name + ' ' + args[0];\n  }\n  return args;\n}\n\n/**\n * Invokes `console.error()` with the specified arguments.\n */\n\nfunction log() {\n  return stream.write(util.format.apply(this, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\nfunction createWritableStdioStream (fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap');\n\n  // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n\n      // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    case 'FILE':\n      var fs = require('fs');\n      stream = new fs.SyncWriteStream(fd, { autoClose: false });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = require('net');\n      stream = new net.Socket({\n        fd: fd,\n        readable: false,\n        writable: true\n      });\n\n      // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe';\n\n      // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"debug.js\":[\"ms\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/practicalmeteor:mocha/node_modules/debug/debug.js                                             //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n\n  // define the `disabled` version\n  function disabled() {\n  }\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n\n    var self = enabled;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n\n    var args = Array.prototype.slice.call(arguments);\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    if ('function' === typeof exports.formatArgs) {\n      args = exports.formatArgs.apply(self, args);\n    }\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n\n  fn.namespace = namespace;\n\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"ms\":{\"package.json\":function(require,exports){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// ../npm/node_modules/ms/package.json                                                                               //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nexports.name = \"ms\";\nexports.version = \"0.7.1\";\nexports.main = \"./index\";\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/practicalmeteor:mocha/node_modules/ms/index.js                                                //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options){\n  options = options || {};\n  if ('string' == typeof val) return parse(val);\n  return options.long\n    ? long(val)\n    : short(val);\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = '' + str;\n  if (str.length > 10000) return;\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n  if (!match) return;\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction short(ms) {\n  if (ms >= d) return Math.round(ms / d) + 'd';\n  if (ms >= h) return Math.round(ms / h) + 'h';\n  if (ms >= m) return Math.round(ms / m) + 'm';\n  if (ms >= s) return Math.round(ms / s) + 's';\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction long(ms) {\n  return plural(ms, d, 'day')\n    || plural(ms, h, 'hour')\n    || plural(ms, m, 'minute')\n    || plural(ms, s, 'second')\n    || ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) return;\n  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"glob\":{\"package.json\":function(require,exports){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// ../npm/node_modules/glob/package.json                                                                             //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nexports.name = \"glob\";\nexports.version = \"3.2.3\";\nexports.main = \"glob.js\";\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"glob.js\":[\"graceful-fs\",\"minimatch\",\"inherits\",\"events\",\"path\",\"assert\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/practicalmeteor:mocha/node_modules/glob/glob.js                                               //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n// Approach:\n//\n// 1. Get the minimatch set\n// 2. For each pattern in the set, PROCESS(pattern)\n// 3. Store matches per-set, then uniq them\n//\n// PROCESS(pattern)\n// Get the first [n] items from pattern that are all strings\n// Join these together.  This is PREFIX.\n//   If there is no more remaining, then stat(PREFIX) and\n//   add to matches if it succeeds.  END.\n// readdir(PREFIX) as ENTRIES\n//   If fails, END\n//   If pattern[n] is GLOBSTAR\n//     // handle the case where the globstar match is empty\n//     // by pruning it out, and testing the resulting pattern\n//     PROCESS(pattern[0..n] + pattern[n+1 .. $])\n//     // handle other cases.\n//     for ENTRY in ENTRIES (not dotfiles)\n//       // attach globstar + tail onto the entry\n//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $])\n//\n//   else // not globstar\n//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)\n//       Test ENTRY against pattern[n]\n//       If fails, continue\n//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])\n//\n// Caveat:\n//   Cache all stats and readdirs results to minimize syscall.  Since all\n//   we ever care about is existence and directory-ness, we can just keep\n//   `true` for files, and [children,...] for directories, or `false` for\n//   things that don't exist.\n\n\n\nmodule.exports = glob\n\nvar fs = require(\"graceful-fs\")\n, minimatch = require(\"minimatch\")\n, Minimatch = minimatch.Minimatch\n, inherits = require(\"inherits\")\n, EE = require(\"events\").EventEmitter\n, path = require(\"path\")\n, isDir = {}\n, assert = require(\"assert\").ok\n\nfunction glob (pattern, options, cb) {\n  if (typeof options === \"function\") cb = options, options = {}\n  if (!options) options = {}\n\n  if (typeof options === \"number\") {\n    deprecated()\n    return\n  }\n\n  var g = new Glob(pattern, options, cb)\n  return g.sync ? g.found : g\n}\n\nglob.fnmatch = deprecated\n\nfunction deprecated () {\n  throw new Error(\"glob's interface has changed. Please see the docs.\")\n}\n\nglob.sync = globSync\nfunction globSync (pattern, options) {\n  if (typeof options === \"number\") {\n    deprecated()\n    return\n  }\n\n  options = options || {}\n  options.sync = true\n  return glob(pattern, options)\n}\n\n\nglob.Glob = Glob\ninherits(Glob, EE)\nfunction Glob (pattern, options, cb) {\n  if (!(this instanceof Glob)) {\n    return new Glob(pattern, options, cb)\n  }\n\n  if (typeof cb === \"function\") {\n    this.on(\"error\", cb)\n    this.on(\"end\", function (matches) {\n      cb(null, matches)\n    })\n  }\n\n  options = options || {}\n\n  this.EOF = {}\n  this._emitQueue = []\n\n  this.maxDepth = options.maxDepth || 1000\n  this.maxLength = options.maxLength || Infinity\n  this.cache = options.cache || {}\n  this.statCache = options.statCache || {}\n\n  this.changedCwd = false\n  var cwd = process.cwd()\n  if (!options.hasOwnProperty(\"cwd\")) this.cwd = cwd\n  else {\n    this.cwd = options.cwd\n    this.changedCwd = path.resolve(options.cwd) !== cwd\n  }\n\n  this.root = options.root || path.resolve(this.cwd, \"/\")\n  this.root = path.resolve(this.root)\n  if (process.platform === \"win32\")\n    this.root = this.root.replace(/\\\\/g, \"/\")\n\n  this.nomount = !!options.nomount\n\n  if (!pattern) {\n    throw new Error(\"must provide pattern\")\n  }\n\n  // base-matching: just use globstar for that.\n  if (options.matchBase && -1 === pattern.indexOf(\"/\")) {\n    if (options.noglobstar) {\n      throw new Error(\"base matching requires globstar\")\n    }\n    pattern = \"**/\" + pattern\n  }\n\n  this.strict = options.strict !== false\n  this.dot = !!options.dot\n  this.mark = !!options.mark\n  this.sync = !!options.sync\n  this.nounique = !!options.nounique\n  this.nonull = !!options.nonull\n  this.nosort = !!options.nosort\n  this.nocase = !!options.nocase\n  this.stat = !!options.stat\n\n  this.debug = !!options.debug || !!options.globDebug\n  if (this.debug)\n    this.log = console.error\n\n  this.silent = !!options.silent\n\n  var mm = this.minimatch = new Minimatch(pattern, options)\n  this.options = mm.options\n  pattern = this.pattern = mm.pattern\n\n  this.error = null\n  this.aborted = false\n\n  // list of all the patterns that ** has resolved do, so\n  // we can avoid visiting multiple times.\n  this._globstars = {}\n\n  EE.call(this)\n\n  // process each pattern in the minimatch set\n  var n = this.minimatch.set.length\n\n  // The matches are stored as {<filename>: true,...} so that\n  // duplicates are automagically pruned.\n  // Later, we do an Object.keys() on these.\n  // Keep them as a list so we can fill in when nonull is set.\n  this.matches = new Array(n)\n\n  this.minimatch.set.forEach(iterator.bind(this))\n  function iterator (pattern, i, set) {\n    this._process(pattern, 0, i, function (er) {\n      if (er) this.emit(\"error\", er)\n      if (-- n <= 0) this._finish()\n    })\n  }\n}\n\nGlob.prototype.log = function () {}\n\nGlob.prototype._finish = function () {\n  assert(this instanceof Glob)\n\n  var nou = this.nounique\n  , all = nou ? [] : {}\n\n  for (var i = 0, l = this.matches.length; i < l; i ++) {\n    var matches = this.matches[i]\n    this.log(\"matches[%d] =\", i, matches)\n    // do like the shell, and spit out the literal glob\n    if (!matches) {\n      if (this.nonull) {\n        var literal = this.minimatch.globSet[i]\n        if (nou) all.push(literal)\n        else all[literal] = true\n      }\n    } else {\n      // had matches\n      var m = Object.keys(matches)\n      if (nou) all.push.apply(all, m)\n      else m.forEach(function (m) {\n        all[m] = true\n      })\n    }\n  }\n\n  if (!nou) all = Object.keys(all)\n\n  if (!this.nosort) {\n    all = all.sort(this.nocase ? alphasorti : alphasort)\n  }\n\n  if (this.mark) {\n    // at *some* point we statted all of these\n    all = all.map(function (m) {\n      var sc = this.cache[m]\n      if (!sc)\n        return m\n      var isDir = (Array.isArray(sc) || sc === 2)\n      if (isDir && m.slice(-1) !== \"/\") {\n        return m + \"/\"\n      }\n      if (!isDir && m.slice(-1) === \"/\") {\n        return m.replace(/\\/+$/, \"\")\n      }\n      return m\n    }, this)\n  }\n\n  this.log(\"emitting end\", all)\n\n  this.EOF = this.found = all\n  this.emitMatch(this.EOF)\n}\n\nfunction alphasorti (a, b) {\n  a = a.toLowerCase()\n  b = b.toLowerCase()\n  return alphasort(a, b)\n}\n\nfunction alphasort (a, b) {\n  return a > b ? 1 : a < b ? -1 : 0\n}\n\nGlob.prototype.abort = function () {\n  this.aborted = true\n  this.emit(\"abort\")\n}\n\nGlob.prototype.pause = function () {\n  if (this.paused) return\n  if (this.sync)\n    this.emit(\"error\", new Error(\"Can't pause/resume sync glob\"))\n  this.paused = true\n  this.emit(\"pause\")\n}\n\nGlob.prototype.resume = function () {\n  if (!this.paused) return\n  if (this.sync)\n    this.emit(\"error\", new Error(\"Can't pause/resume sync glob\"))\n  this.paused = false\n  this.emit(\"resume\")\n  this._processEmitQueue()\n  //process.nextTick(this.emit.bind(this, \"resume\"))\n}\n\nGlob.prototype.emitMatch = function (m) {\n  if (!this.stat || this.statCache[m] || m === this.EOF) {\n    this._emitQueue.push(m)\n    this._processEmitQueue()\n  } else {\n    this._stat(m, function(exists, isDir) {\n      if (exists) {\n        this._emitQueue.push(m)\n        this._processEmitQueue()\n      }\n    })\n  }\n}\n\nGlob.prototype._processEmitQueue = function (m) {\n  while (!this._processingEmitQueue &&\n         !this.paused) {\n    this._processingEmitQueue = true\n    var m = this._emitQueue.shift()\n    if (!m) {\n      this._processingEmitQueue = false\n      break\n    }\n\n    this.log('emit!', m === this.EOF ? \"end\" : \"match\")\n\n    this.emit(m === this.EOF ? \"end\" : \"match\", m)\n    this._processingEmitQueue = false\n  }\n}\n\nGlob.prototype._process = function (pattern, depth, index, cb_) {\n  assert(this instanceof Glob)\n\n  var cb = function cb (er, res) {\n    assert(this instanceof Glob)\n    if (this.paused) {\n      if (!this._processQueue) {\n        this._processQueue = []\n        this.once(\"resume\", function () {\n          var q = this._processQueue\n          this._processQueue = null\n          q.forEach(function (cb) { cb() })\n        })\n      }\n      this._processQueue.push(cb_.bind(this, er, res))\n    } else {\n      cb_.call(this, er, res)\n    }\n  }.bind(this)\n\n  if (this.aborted) return cb()\n\n  if (depth > this.maxDepth) return cb()\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === \"string\") {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // see if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      prefix = pattern.join(\"/\")\n      this._stat(prefix, function (exists, isDir) {\n        // either it's there, or it isn't.\n        // nothing more to do, either way.\n        if (exists) {\n          if (prefix && isAbsolute(prefix) && !this.nomount) {\n            if (prefix.charAt(0) === \"/\") {\n              prefix = path.join(this.root, prefix)\n            } else {\n              prefix = path.resolve(this.root, prefix)\n            }\n          }\n\n          if (process.platform === \"win32\")\n            prefix = prefix.replace(/\\\\/g, \"/\")\n\n          this.matches[index] = this.matches[index] || {}\n          this.matches[index][prefix] = true\n          this.emitMatch(prefix)\n        }\n        return cb()\n      })\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's \"absolute\" like /foo/bar,\n      // or \"relative\" like \"../baz\"\n      prefix = pattern.slice(0, n)\n      prefix = prefix.join(\"/\")\n      break\n  }\n\n  // get the list of entries.\n  var read\n  if (prefix === null) read = \".\"\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join(\"/\"))) {\n    if (!prefix || !isAbsolute(prefix)) {\n      prefix = path.join(\"/\", prefix)\n    }\n    read = prefix = path.resolve(prefix)\n\n    // if (process.platform === \"win32\")\n    //   read = prefix = prefix.replace(/^[a-zA-Z]:|\\\\/g, \"/\")\n\n    this.log('absolute: ', prefix, this.root, pattern, read)\n  } else {\n    read = prefix\n  }\n\n  this.log('readdir(%j)', read, this.cwd, this.root)\n\n  return this._readdir(read, function (er, entries) {\n    if (er) {\n      // not a directory!\n      // this means that, whatever else comes after this, it can never match\n      return cb()\n    }\n\n    // globstar is special\n    if (pattern[n] === minimatch.GLOBSTAR) {\n      // test without the globstar, and with every child both below\n      // and replacing the globstar.\n      var s = [ pattern.slice(0, n).concat(pattern.slice(n + 1)) ]\n      entries.forEach(function (e) {\n        if (e.charAt(0) === \".\" && !this.dot) return\n        // instead of the globstar\n        s.push(pattern.slice(0, n).concat(e).concat(pattern.slice(n + 1)))\n        // below the globstar\n        s.push(pattern.slice(0, n).concat(e).concat(pattern.slice(n)))\n      }, this)\n\n      s = s.filter(function (pattern) {\n        var key = gsKey(pattern)\n        var seen = !this._globstars[key]\n        this._globstars[key] = true\n        return seen\n      }, this)\n\n      if (!s.length)\n        return cb()\n\n      // now asyncForEach over this\n      var l = s.length\n      , errState = null\n      s.forEach(function (gsPattern) {\n        this._process(gsPattern, depth + 1, index, function (er) {\n          if (errState) return\n          if (er) return cb(errState = er)\n          if (--l <= 0) return cb()\n        })\n      }, this)\n\n      return\n    }\n\n    // not a globstar\n    // It will only match dot entries if it starts with a dot, or if\n    // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n    var pn = pattern[n]\n    var rawGlob = pattern[n]._glob\n    , dotOk = this.dot || rawGlob.charAt(0) === \".\"\n\n    entries = entries.filter(function (e) {\n      return (e.charAt(0) !== \".\" || dotOk) &&\n             e.match(pattern[n])\n    })\n\n    // If n === pattern.length - 1, then there's no need for the extra stat\n    // *unless* the user has specified \"mark\" or \"stat\" explicitly.\n    // We know that they exist, since the readdir returned them.\n    if (n === pattern.length - 1 &&\n        !this.mark &&\n        !this.stat) {\n      entries.forEach(function (e) {\n        if (prefix) {\n          if (prefix !== \"/\") e = prefix + \"/\" + e\n          else e = prefix + e\n        }\n        if (e.charAt(0) === \"/\" && !this.nomount) {\n          e = path.join(this.root, e)\n        }\n\n        if (process.platform === \"win32\")\n          e = e.replace(/\\\\/g, \"/\")\n\n        this.matches[index] = this.matches[index] || {}\n        this.matches[index][e] = true\n        this.emitMatch(e)\n      }, this)\n      return cb.call(this)\n    }\n\n\n    // now test all the remaining entries as stand-ins for that part\n    // of the pattern.\n    var l = entries.length\n    , errState = null\n    if (l === 0) return cb() // no matches possible\n    entries.forEach(function (e) {\n      var p = pattern.slice(0, n).concat(e).concat(pattern.slice(n + 1))\n      this._process(p, depth + 1, index, function (er) {\n        if (errState) return\n        if (er) return cb(errState = er)\n        if (--l === 0) return cb.call(this)\n      })\n    }, this)\n  })\n\n}\n\nfunction gsKey (pattern) {\n  return '**' + pattern.map(function (p) {\n    return (p === minimatch.GLOBSTAR) ? '**' : (''+p)\n  }).join('/')\n}\n\nGlob.prototype._stat = function (f, cb) {\n  assert(this instanceof Glob)\n  var abs = f\n  if (f.charAt(0) === \"/\") {\n    abs = path.join(this.root, f)\n  } else if (this.changedCwd) {\n    abs = path.resolve(this.cwd, f)\n  }\n\n  if (f.length > this.maxLength) {\n    var er = new Error(\"Path name too long\")\n    er.code = \"ENAMETOOLONG\"\n    er.path = f\n    return this._afterStat(f, abs, cb, er)\n  }\n\n  this.log('stat', [this.cwd, f, '=', abs])\n\n  if (!this.stat && this.cache.hasOwnProperty(f)) {\n    var exists = this.cache[f]\n    , isDir = exists && (Array.isArray(exists) || exists === 2)\n    if (this.sync) return cb.call(this, !!exists, isDir)\n    return process.nextTick(cb.bind(this, !!exists, isDir))\n  }\n\n  var stat = this.statCache[abs]\n  if (this.sync || stat) {\n    var er\n    try {\n      stat = fs.statSync(abs)\n    } catch (e) {\n      er = e\n    }\n    this._afterStat(f, abs, cb, er, stat)\n  } else {\n    fs.stat(abs, this._afterStat.bind(this, f, abs, cb))\n  }\n}\n\nGlob.prototype._afterStat = function (f, abs, cb, er, stat) {\n  var exists\n  assert(this instanceof Glob)\n\n  if (abs.slice(-1) === \"/\" && stat && !stat.isDirectory()) {\n    this.log(\"should be ENOTDIR, fake it\")\n\n    er = new Error(\"ENOTDIR, not a directory '\" + abs + \"'\")\n    er.path = abs\n    er.code = \"ENOTDIR\"\n    stat = null\n  }\n\n  var emit = !this.statCache[abs]\n  this.statCache[abs] = stat\n\n  if (er || !stat) {\n    exists = false\n  } else {\n    exists = stat.isDirectory() ? 2 : 1\n    if (emit)\n      this.emit('stat', f, stat)\n  }\n  this.cache[f] = this.cache[f] || exists\n  cb.call(this, !!exists, exists === 2)\n}\n\nGlob.prototype._readdir = function (f, cb) {\n  assert(this instanceof Glob)\n  var abs = f\n  if (f.charAt(0) === \"/\") {\n    abs = path.join(this.root, f)\n  } else if (isAbsolute(f)) {\n    abs = f\n  } else if (this.changedCwd) {\n    abs = path.resolve(this.cwd, f)\n  }\n\n  if (f.length > this.maxLength) {\n    var er = new Error(\"Path name too long\")\n    er.code = \"ENAMETOOLONG\"\n    er.path = f\n    return this._afterReaddir(f, abs, cb, er)\n  }\n\n  this.log('readdir', [this.cwd, f, abs])\n  if (this.cache.hasOwnProperty(f)) {\n    var c = this.cache[f]\n    if (Array.isArray(c)) {\n      if (this.sync) return cb.call(this, null, c)\n      return process.nextTick(cb.bind(this, null, c))\n    }\n\n    if (!c || c === 1) {\n      // either ENOENT or ENOTDIR\n      var code = c ? \"ENOTDIR\" : \"ENOENT\"\n      , er = new Error((c ? \"Not a directory\" : \"Not found\") + \": \" + f)\n      er.path = f\n      er.code = code\n      this.log(f, er)\n      if (this.sync) return cb.call(this, er)\n      return process.nextTick(cb.bind(this, er))\n    }\n\n    // at this point, c === 2, meaning it's a dir, but we haven't\n    // had to read it yet, or c === true, meaning it's *something*\n    // but we don't have any idea what.  Need to read it, either way.\n  }\n\n  if (this.sync) {\n    var er, entries\n    try {\n      entries = fs.readdirSync(abs)\n    } catch (e) {\n      er = e\n    }\n    return this._afterReaddir(f, abs, cb, er, entries)\n  }\n\n  fs.readdir(abs, this._afterReaddir.bind(this, f, abs, cb))\n}\n\nGlob.prototype._afterReaddir = function (f, abs, cb, er, entries) {\n  assert(this instanceof Glob)\n  if (entries && !er) {\n    this.cache[f] = entries\n    // if we haven't asked to stat everything for suresies, then just\n    // assume that everything in there exists, so we can avoid\n    // having to stat it a second time.  This also gets us one step\n    // further into ELOOP territory.\n    if (!this.mark && !this.stat) {\n      entries.forEach(function (e) {\n        if (f === \"/\") e = f + e\n        else e = f + \"/\" + e\n        this.cache[e] = true\n      }, this)\n    }\n\n    return cb.call(this, er, entries)\n  }\n\n  // now handle errors, and cache the information\n  if (er) switch (er.code) {\n    case \"ENOTDIR\": // totally normal. means it *does* exist.\n      this.cache[f] = 1\n      return cb.call(this, er)\n    case \"ENOENT\": // not terribly unusual\n    case \"ELOOP\":\n    case \"ENAMETOOLONG\":\n    case \"UNKNOWN\":\n      this.cache[f] = false\n      return cb.call(this, er)\n    default: // some unusual error.  Treat as failure.\n      this.cache[f] = false\n      if (this.strict) this.emit(\"error\", er)\n      if (!this.silent) console.error(\"glob error\", er)\n      return cb.call(this, er)\n  }\n}\n\nvar isAbsolute = process.platform === \"win32\" ? absWin : absUnix\n\nfunction absWin (p) {\n  if (absUnix(p)) return true\n  // pull off the device/UNC bit from a windows path.\n  // from node's lib/path.js\n  var splitDeviceRe =\n      /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/\n    , result = splitDeviceRe.exec(p)\n    , device = result[1] || ''\n    , isUnc = device && device.charAt(1) !== ':'\n    , isAbsolute = !!result[2] || isUnc // UNC paths are always absolute\n\n  return isAbsolute\n}\n\nfunction absUnix (p) {\n  return p.charAt(0) === \"/\" || p === \"\"\n}\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"graceful-fs\":{\"package.json\":function(require,exports){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// ../npm/node_modules/graceful-fs/package.json                                                                      //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nexports.name = \"graceful-fs\";\nexports.version = \"2.0.3\";\nexports.main = \"graceful-fs.js\";\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"graceful-fs.js\":[\"fs\",\"assert\",\"./polyfills.js\",\"util\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/practicalmeteor:mocha/node_modules/graceful-fs/graceful-fs.js                                 //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n// Monkey-patching the fs module.\n// It's ugly, but there is simply no other way to do this.\nvar fs = module.exports = require('fs')\n\nvar assert = require('assert')\n\n// fix up some busted stuff, mostly on windows and old nodes\nrequire('./polyfills.js')\n\n// The EMFILE enqueuing stuff\n\nvar util = require('util')\n\nfunction noop () {}\n\nvar debug = noop\nif (util.debuglog)\n  debug = util.debuglog('gfs')\nelse if (/\\bgfs\\b/i.test(process.env.NODE_DEBUG || ''))\n  debug = function() {\n    var m = util.format.apply(util, arguments)\n    m = 'GFS: ' + m.split(/\\n/).join('\\nGFS: ')\n    console.error(m)\n  }\n\nif (/\\bgfs\\b/i.test(process.env.NODE_DEBUG || '')) {\n  process.on('exit', function() {\n    debug('fds', fds)\n    debug(queue)\n    assert.equal(queue.length, 0)\n  })\n}\n\n\nvar originalOpen = fs.open\nfs.open = open\n\nfunction open(path, flags, mode, cb) {\n  if (typeof mode === \"function\") cb = mode, mode = null\n  if (typeof cb !== \"function\") cb = noop\n  new OpenReq(path, flags, mode, cb)\n}\n\nfunction OpenReq(path, flags, mode, cb) {\n  this.path = path\n  this.flags = flags\n  this.mode = mode\n  this.cb = cb\n  Req.call(this)\n}\n\nutil.inherits(OpenReq, Req)\n\nOpenReq.prototype.process = function() {\n  originalOpen.call(fs, this.path, this.flags, this.mode, this.done)\n}\n\nvar fds = {}\nOpenReq.prototype.done = function(er, fd) {\n  debug('open done', er, fd)\n  if (fd)\n    fds['fd' + fd] = this.path\n  Req.prototype.done.call(this, er, fd)\n}\n\n\nvar originalReaddir = fs.readdir\nfs.readdir = readdir\n\nfunction readdir(path, cb) {\n  if (typeof cb !== \"function\") cb = noop\n  new ReaddirReq(path, cb)\n}\n\nfunction ReaddirReq(path, cb) {\n  this.path = path\n  this.cb = cb\n  Req.call(this)\n}\n\nutil.inherits(ReaddirReq, Req)\n\nReaddirReq.prototype.process = function() {\n  originalReaddir.call(fs, this.path, this.done)\n}\n\nReaddirReq.prototype.done = function(er, files) {\n  if (files && files.sort)\n    files = files.sort()\n  Req.prototype.done.call(this, er, files)\n  onclose()\n}\n\n\nvar originalClose = fs.close\nfs.close = close\n\nfunction close (fd, cb) {\n  debug('close', fd)\n  if (typeof cb !== \"function\") cb = noop\n  delete fds['fd' + fd]\n  originalClose.call(fs, fd, function(er) {\n    onclose()\n    cb(er)\n  })\n}\n\n\nvar originalCloseSync = fs.closeSync\nfs.closeSync = closeSync\n\nfunction closeSync (fd) {\n  try {\n    return originalCloseSync(fd)\n  } finally {\n    onclose()\n  }\n}\n\n\n// Req class\nfunction Req () {\n  // start processing\n  this.done = this.done.bind(this)\n  this.failures = 0\n  this.process()\n}\n\nReq.prototype.done = function (er, result) {\n  var tryAgain = false\n  if (er) {\n    var code = er.code\n    var tryAgain = code === \"EMFILE\"\n    if (process.platform === \"win32\")\n      tryAgain = tryAgain || code === \"OK\"\n  }\n\n  if (tryAgain) {\n    this.failures ++\n    enqueue(this)\n  } else {\n    var cb = this.cb\n    cb(er, result)\n  }\n}\n\nvar queue = []\n\nfunction enqueue(req) {\n  queue.push(req)\n  debug('enqueue %d %s', queue.length, req.constructor.name, req)\n}\n\nfunction onclose() {\n  var req = queue.shift()\n  if (req) {\n    debug('process', req.constructor.name, req)\n    req.process()\n  }\n}\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"polyfills.js\":[\"fs\",\"constants\",function(require){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/practicalmeteor:mocha/node_modules/graceful-fs/polyfills.js                                   //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nvar fs = require('fs')\nvar constants = require('constants')\n\nvar origCwd = process.cwd\nvar cwd = null\nprocess.cwd = function() {\n  if (!cwd)\n    cwd = origCwd.call(process)\n  return cwd\n}\nvar chdir = process.chdir\nprocess.chdir = function(d) {\n  cwd = null\n  chdir.call(process, d)\n}\n\n// (re-)implement some things that are known busted or missing.\n\n// lchmod, broken prior to 0.6.2\n// back-port the fix here.\nif (constants.hasOwnProperty('O_SYMLINK') &&\n    process.version.match(/^v0\\.6\\.[0-2]|^v0\\.5\\./)) {\n  fs.lchmod = function (path, mode, callback) {\n    callback = callback || noop\n    fs.open( path\n           , constants.O_WRONLY | constants.O_SYMLINK\n           , mode\n           , function (err, fd) {\n      if (err) {\n        callback(err)\n        return\n      }\n      // prefer to return the chmod error, if one occurs,\n      // but still try to close, and report closing errors if they occur.\n      fs.fchmod(fd, mode, function (err) {\n        fs.close(fd, function(err2) {\n          callback(err || err2)\n        })\n      })\n    })\n  }\n\n  fs.lchmodSync = function (path, mode) {\n    var fd = fs.openSync(path, constants.O_WRONLY | constants.O_SYMLINK, mode)\n\n    // prefer to return the chmod error, if one occurs,\n    // but still try to close, and report closing errors if they occur.\n    var err, err2\n    try {\n      var ret = fs.fchmodSync(fd, mode)\n    } catch (er) {\n      err = er\n    }\n    try {\n      fs.closeSync(fd)\n    } catch (er) {\n      err2 = er\n    }\n    if (err || err2) throw (err || err2)\n    return ret\n  }\n}\n\n\n// lutimes implementation, or no-op\nif (!fs.lutimes) {\n  if (constants.hasOwnProperty(\"O_SYMLINK\")) {\n    fs.lutimes = function (path, at, mt, cb) {\n      fs.open(path, constants.O_SYMLINK, function (er, fd) {\n        cb = cb || noop\n        if (er) return cb(er)\n        fs.futimes(fd, at, mt, function (er) {\n          fs.close(fd, function (er2) {\n            return cb(er || er2)\n          })\n        })\n      })\n    }\n\n    fs.lutimesSync = function (path, at, mt) {\n      var fd = fs.openSync(path, constants.O_SYMLINK)\n        , err\n        , err2\n        , ret\n\n      try {\n        var ret = fs.futimesSync(fd, at, mt)\n      } catch (er) {\n        err = er\n      }\n      try {\n        fs.closeSync(fd)\n      } catch (er) {\n        err2 = er\n      }\n      if (err || err2) throw (err || err2)\n      return ret\n    }\n\n  } else if (fs.utimensat && constants.hasOwnProperty(\"AT_SYMLINK_NOFOLLOW\")) {\n    // maybe utimensat will be bound soonish?\n    fs.lutimes = function (path, at, mt, cb) {\n      fs.utimensat(path, at, mt, constants.AT_SYMLINK_NOFOLLOW, cb)\n    }\n\n    fs.lutimesSync = function (path, at, mt) {\n      return fs.utimensatSync(path, at, mt, constants.AT_SYMLINK_NOFOLLOW)\n    }\n\n  } else {\n    fs.lutimes = function (_a, _b, _c, cb) { process.nextTick(cb) }\n    fs.lutimesSync = function () {}\n  }\n}\n\n\n// https://github.com/isaacs/node-graceful-fs/issues/4\n// Chown should not fail on einval or eperm if non-root.\n\nfs.chown = chownFix(fs.chown)\nfs.fchown = chownFix(fs.fchown)\nfs.lchown = chownFix(fs.lchown)\n\nfs.chownSync = chownFixSync(fs.chownSync)\nfs.fchownSync = chownFixSync(fs.fchownSync)\nfs.lchownSync = chownFixSync(fs.lchownSync)\n\nfunction chownFix (orig) {\n  if (!orig) return orig\n  return function (target, uid, gid, cb) {\n    return orig.call(fs, target, uid, gid, function (er, res) {\n      if (chownErOk(er)) er = null\n      cb(er, res)\n    })\n  }\n}\n\nfunction chownFixSync (orig) {\n  if (!orig) return orig\n  return function (target, uid, gid) {\n    try {\n      return orig.call(fs, target, uid, gid)\n    } catch (er) {\n      if (!chownErOk(er)) throw er\n    }\n  }\n}\n\nfunction chownErOk (er) {\n  // if there's no getuid, or if getuid() is something other than 0,\n  // and the error is EINVAL or EPERM, then just ignore it.\n  // This specific case is a silent failure in cp, install, tar,\n  // and most other unix tools that manage permissions.\n  // When running as root, or if other types of errors are encountered,\n  // then it's strict.\n  if (!er || (!process.getuid || process.getuid() !== 0)\n      && (er.code === \"EINVAL\" || er.code === \"EPERM\")) return true\n}\n\n\n// if lchmod/lchown do not exist, then make them no-ops\nif (!fs.lchmod) {\n  fs.lchmod = function (path, mode, cb) {\n    process.nextTick(cb)\n  }\n  fs.lchmodSync = function () {}\n}\nif (!fs.lchown) {\n  fs.lchown = function (path, uid, gid, cb) {\n    process.nextTick(cb)\n  }\n  fs.lchownSync = function () {}\n}\n\n\n\n// on Windows, A/V software can lock the directory, causing this\n// to fail with an EACCES or EPERM if the directory contains newly\n// created files.  Try again on failure, for up to 1 second.\nif (process.platform === \"win32\") {\n  var rename_ = fs.rename\n  fs.rename = function rename (from, to, cb) {\n    var start = Date.now()\n    rename_(from, to, function CB (er) {\n      if (er\n          && (er.code === \"EACCES\" || er.code === \"EPERM\")\n          && Date.now() - start < 1000) {\n        return rename_(from, to, CB)\n      }\n      cb(er)\n    })\n  }\n}\n\n\n// if read() returns EAGAIN, then just try it again.\nvar read = fs.read\nfs.read = function (fd, buffer, offset, length, position, callback_) {\n  var callback\n  if (callback_ && typeof callback_ === 'function') {\n    var eagCounter = 0\n    callback = function (er, _, __) {\n      if (er && er.code === 'EAGAIN' && eagCounter < 10) {\n        eagCounter ++\n        return read.call(fs, fd, buffer, offset, length, position, callback)\n      }\n      callback_.apply(this, arguments)\n    }\n  }\n  return read.call(fs, fd, buffer, offset, length, position, callback)\n}\n\nvar readSync = fs.readSync\nfs.readSync = function (fd, buffer, offset, length, position) {\n  var eagCounter = 0\n  while (true) {\n    try {\n      return readSync.call(fs, fd, buffer, offset, length, position)\n    } catch (er) {\n      if (er.code === 'EAGAIN' && eagCounter < 10) {\n        eagCounter ++\n        continue\n      }\n      throw er\n    }\n  }\n}\n\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"minimatch\":{\"package.json\":function(require,exports){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// ../npm/node_modules/minimatch/package.json                                                                        //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nexports.name = \"minimatch\";\nexports.version = \"0.2.14\";\nexports.main = \"minimatch.js\";\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"minimatch.js\":[\"lru-cache\",\"sigmund\",\"path\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/practicalmeteor:mocha/node_modules/minimatch/minimatch.js                                     //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n;(function (require, exports, module, platform) {\n\nif (module) module.exports = minimatch\nelse exports.minimatch = minimatch\n\nif (!require) {\n  require = function (id) {\n    switch (id) {\n      case \"sigmund\": return function sigmund (obj) {\n        return JSON.stringify(obj)\n      }\n      case \"path\": return { basename: function (f) {\n        f = f.split(/[\\/\\\\]/)\n        var e = f.pop()\n        if (!e) e = f.pop()\n        return e\n      }}\n      case \"lru-cache\": return function LRUCache () {\n        // not quite an LRU, but still space-limited.\n        var cache = {}\n        var cnt = 0\n        this.set = function (k, v) {\n          cnt ++\n          if (cnt >= 100) cache = {}\n          cache[k] = v\n        }\n        this.get = function (k) { return cache[k] }\n      }\n    }\n  }\n}\n\nminimatch.Minimatch = Minimatch\n\nvar LRU = require(\"lru-cache\")\n  , cache = minimatch.cache = new LRU({max: 100})\n  , GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\n  , sigmund = require(\"sigmund\")\n\nvar path = require(\"path\")\n  // any single thing other than /\n  // don't need to escape / when using new RegExp()\n  , qmark = \"[^/]\"\n\n  // * => any number of characters\n  , star = qmark + \"*?\"\n\n  // ** when dots are allowed.  Anything goes, except .. and .\n  // not (^ or / followed by one or two dots followed by $ or /),\n  // followed by anything, any number of times.\n  , twoStarDot = \"(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?\"\n\n  // not a ^ or / followed by a dot,\n  // followed by anything, any number of times.\n  , twoStarNoDot = \"(?:(?!(?:\\\\\\/|^)\\\\.).)*?\"\n\n  // characters that need to be escaped in RegExp.\n  , reSpecials = charSet(\"().*{}+?[]^$\\\\!\")\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split(\"\").reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  a = a || {}\n  b = b || {}\n  var t = {}\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return minimatch\n\n  var orig = minimatch\n\n  var m = function minimatch (p, pattern, options) {\n    return orig.minimatch(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return Minimatch\n  return minimatch.defaults(def).Minimatch\n}\n\n\nfunction minimatch (p, pattern, options) {\n  if (typeof pattern !== \"string\") {\n    throw new TypeError(\"glob pattern string required\")\n  }\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === \"#\") {\n    return false\n  }\n\n  // \"\" only matches \"\"\n  if (pattern.trim() === \"\") return p === \"\"\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options, cache)\n  }\n\n  if (typeof pattern !== \"string\") {\n    throw new TypeError(\"glob pattern string required\")\n  }\n\n  if (!options) options = {}\n  pattern = pattern.trim()\n\n  // windows: need to use /, not \\\n  // On other platforms, \\ is a valid (albeit bad) filename char.\n  if (platform === \"win32\") {\n    pattern = pattern.split(\"\\\\\").join(\"/\")\n  }\n\n  // lru storage.\n  // these things aren't particularly big, but walking down the string\n  // and turning it into a regexp can get pretty costly.\n  var cacheKey = pattern + \"\\n\" + sigmund(options)\n  var cached = minimatch.cache.get(cacheKey)\n  if (cached) return cached\n  minimatch.cache.set(cacheKey, this)\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function() {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  // don't do it more than once.\n  if (this._made) return\n\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === \"#\") {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = console.error\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return -1 === s.indexOf(false)\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n    , negate = false\n    , options = this.options\n    , negateOffset = 0\n\n  if (options.nonegate) return\n\n  for ( var i = 0, l = pattern.length\n      ; i < l && pattern.charAt(i) === \"!\"\n      ; i ++) {\n    negate = !negate\n    negateOffset ++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return new Minimatch(pattern, options).braceExpand()\n}\n\nMinimatch.prototype.braceExpand = braceExpand\nfunction braceExpand (pattern, options) {\n  options = options || this.options\n  pattern = typeof pattern === \"undefined\"\n    ? this.pattern : pattern\n\n  if (typeof pattern === \"undefined\") {\n    throw new Error(\"undefined pattern\")\n  }\n\n  if (options.nobrace ||\n      !pattern.match(/\\{.*\\}/)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  var escaping = false\n\n  // examples and comments refer to this crazy pattern:\n  // a{b,c{d,e},{f,g}h}x{y,z}\n  // expected:\n  // abxy\n  // abxz\n  // acdxy\n  // acdxz\n  // acexy\n  // acexz\n  // afhxy\n  // afhxz\n  // aghxy\n  // aghxz\n\n  // everything before the first \\{ is just a prefix.\n  // So, we pluck that off, and work with the rest,\n  // and then prepend it to everything we find.\n  if (pattern.charAt(0) !== \"{\") {\n    this.debug(pattern)\n    var prefix = null\n    for (var i = 0, l = pattern.length; i < l; i ++) {\n      var c = pattern.charAt(i)\n      this.debug(i, c)\n      if (c === \"\\\\\") {\n        escaping = !escaping\n      } else if (c === \"{\" && !escaping) {\n        prefix = pattern.substr(0, i)\n        break\n      }\n    }\n\n    // actually no sets, all { were escaped.\n    if (prefix === null) {\n      this.debug(\"no sets\")\n      return [pattern]\n    }\n\n   var tail = braceExpand.call(this, pattern.substr(i), options)\n    return tail.map(function (t) {\n      return prefix + t\n    })\n  }\n\n  // now we have something like:\n  // {b,c{d,e},{f,g}h}x{y,z}\n  // walk through the set, expanding each part, until\n  // the set ends.  then, we'll expand the suffix.\n  // If the set only has a single member, then'll put the {} back\n\n  // first, handle numeric sets, since they're easier\n  var numset = pattern.match(/^\\{(-?[0-9]+)\\.\\.(-?[0-9]+)\\}/)\n  if (numset) {\n    this.debug(\"numset\", numset[1], numset[2])\n    var suf = braceExpand.call(this, pattern.substr(numset[0].length), options)\n      , start = +numset[1]\n      , end = +numset[2]\n      , inc = start > end ? -1 : 1\n      , set = []\n    for (var i = start; i != (end + inc); i += inc) {\n      // append all the suffixes\n      for (var ii = 0, ll = suf.length; ii < ll; ii ++) {\n        set.push(i + suf[ii])\n      }\n    }\n    return set\n  }\n\n  // ok, walk through the set\n  // We hope, somewhat optimistically, that there\n  // will be a } at the end.\n  // If the closing brace isn't found, then the pattern is\n  // interpreted as braceExpand(\"\\\\\" + pattern) so that\n  // the leading \\{ will be interpreted literally.\n  var i = 1 // skip the \\{\n    , depth = 1\n    , set = []\n    , member = \"\"\n    , sawEnd = false\n    , escaping = false\n\n  function addMember () {\n    set.push(member)\n    member = \"\"\n  }\n\n  this.debug(\"Entering for\")\n  FOR: for (i = 1, l = pattern.length; i < l; i ++) {\n    var c = pattern.charAt(i)\n    this.debug(\"\", i, c)\n\n    if (escaping) {\n      escaping = false\n      member += \"\\\\\" + c\n    } else {\n      switch (c) {\n        case \"\\\\\":\n          escaping = true\n          continue\n\n        case \"{\":\n          depth ++\n          member += \"{\"\n          continue\n\n        case \"}\":\n          depth --\n          // if this closes the actual set, then we're done\n          if (depth === 0) {\n            addMember()\n            // pluck off the close-brace\n            i ++\n            break FOR\n          } else {\n            member += c\n            continue\n          }\n\n        case \",\":\n          if (depth === 1) {\n            addMember()\n          } else {\n            member += c\n          }\n          continue\n\n        default:\n          member += c\n          continue\n      } // switch\n    } // else\n  } // for\n\n  // now we've either finished the set, and the suffix is\n  // pattern.substr(i), or we have *not* closed the set,\n  // and need to escape the leading brace\n  if (depth !== 0) {\n    this.debug(\"didn't close\", pattern)\n    return braceExpand.call(this, \"\\\\\" + pattern, options)\n  }\n\n  // x{y,z} -> [\"xy\", \"xz\"]\n  this.debug(\"set\", set)\n  this.debug(\"suffix\", pattern.substr(i))\n  var suf = braceExpand.call(this, pattern.substr(i), options)\n  // [\"b\", \"c{d,e}\",\"{f,g}h\"] ->\n  //   [[\"b\"], [\"cd\", \"ce\"], [\"fh\", \"gh\"]]\n  var addBraces = set.length === 1\n  this.debug(\"set pre-expanded\", set)\n  set = set.map(function (p) {\n    return braceExpand.call(this, p, options)\n  }, this)\n  this.debug(\"set expanded\", set)\n\n\n  // [[\"b\"], [\"cd\", \"ce\"], [\"fh\", \"gh\"]] ->\n  //   [\"b\", \"cd\", \"ce\", \"fh\", \"gh\"]\n  set = set.reduce(function (l, r) {\n    return l.concat(r)\n  })\n\n  if (addBraces) {\n    set = set.map(function (s) {\n      return \"{\" + s + \"}\"\n    })\n  }\n\n  // now attach the suffixes.\n  var ret = []\n  for (var i = 0, l = set.length; i < l; i ++) {\n    for (var ii = 0, ll = suf.length; ii < ll; ii ++) {\n      ret.push(set[i] + suf[ii])\n    }\n  }\n  return ret\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nvar SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  var options = this.options\n\n  // shortcuts\n  if (!options.noglobstar && pattern === \"**\") return GLOBSTAR\n  if (pattern === \"\") return \"\"\n\n  var re = \"\"\n    , hasMagic = !!options.nocase\n    , escaping = false\n    // ? => one single character\n    , patternListStack = []\n    , plType\n    , stateChar\n    , inClass = false\n    , reClassStart = -1\n    , classStart = -1\n    // . and .. never match anything that doesn't start with .,\n    // even when options.dot is set.\n    , patternStart = pattern.charAt(0) === \".\" ? \"\" // anything\n      // not (start or / followed by . or .. followed by / or end)\n      : options.dot ? \"(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))\"\n      : \"(?!\\\\.)\"\n    , self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case \"*\":\n          re += star\n          hasMagic = true\n          break\n        case \"?\":\n          re += qmark\n          hasMagic = true\n          break\n        default:\n          re += \"\\\\\"+stateChar\n          break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for ( var i = 0, len = pattern.length, c\n      ; (i < len) && (c = pattern.charAt(i))\n      ; i ++ ) {\n\n    this.debug(\"%s\\t%s %s %j\", pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += \"\\\\\" + c\n      escaping = false\n      continue\n    }\n\n    SWITCH: switch (c) {\n      case \"/\":\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n\n      case \"\\\\\":\n        clearStateChar()\n        escaping = true\n        continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case \"?\":\n      case \"*\":\n      case \"+\":\n      case \"@\":\n      case \"!\":\n        this.debug(\"%s\\t%s %s %j <-- stateChar\", pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === \"!\" && i === classStart + 1) c = \"^\"\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n        continue\n\n      case \"(\":\n        if (inClass) {\n          re += \"(\"\n          continue\n        }\n\n        if (!stateChar) {\n          re += \"\\\\(\"\n          continue\n        }\n\n        plType = stateChar\n        patternListStack.push({ type: plType\n                              , start: i - 1\n                              , reStart: re.length })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === \"!\" ? \"(?:(?!\" : \"(?:\"\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n        continue\n\n      case \")\":\n        if (inClass || !patternListStack.length) {\n          re += \"\\\\)\"\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        re += \")\"\n        plType = patternListStack.pop().type\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        switch (plType) {\n          case \"!\":\n            re += \"[^/]*?)\"\n            break\n          case \"?\":\n          case \"+\":\n          case \"*\": re += plType\n          case \"@\": break // the default anyway\n        }\n        continue\n\n      case \"|\":\n        if (inClass || !patternListStack.length || escaping) {\n          re += \"\\\\|\"\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += \"|\"\n        continue\n\n      // these are mostly the same in regexp and glob\n      case \"[\":\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += \"\\\\\" + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n        continue\n\n      case \"]\":\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += \"\\\\\" + c\n          escaping = false\n          continue\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n        continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n                   && !(c === \"^\" && inClass)) {\n          re += \"\\\\\"\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    var cs = pattern.substr(classStart + 1)\n      , sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + \"\\\\[\" + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  var pl\n  while (pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + 3)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2})*)(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = \"\\\\\"\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + \"|\"\n    })\n\n    this.debug(\"tail=%j\\n   %s\", tail, tail)\n    var t = pl.type === \"*\" ? star\n          : pl.type === \"?\" ? qmark\n          : \"\\\\\" + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart)\n       + t + \"\\\\(\"\n       + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += \"\\\\\\\\\"\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case \".\":\n    case \"[\":\n    case \"(\": addPatternStart = true\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== \"\" && hasMagic) re = \"(?=.)\" + re\n\n  if (addPatternStart) re = patternStart + re\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [ re, hasMagic ]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? \"i\" : \"\"\n    , regExp = new RegExp(\"^\" + re + \"$\", flags)\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) return this.regexp = false\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n      : options.dot ? twoStarDot\n      : twoStarNoDot\n    , flags = options.nocase ? \"i\" : \"\"\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n           : (typeof p === \"string\") ? regExpEscape(p)\n           : p._src\n    }).join(\"\\\\\\/\")\n  }).join(\"|\")\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = \"^(?:\" + re + \")$\"\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = \"^(?!\" + re + \").*$\"\n\n  try {\n    return this.regexp = new RegExp(re, flags)\n  } catch (ex) {\n    return this.regexp = false\n  }\n}\n\nminimatch.match = function (list, pattern, options) {\n  var mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = match\nfunction match (f, partial) {\n  this.debug(\"match\", f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === \"\"\n\n  if (f === \"/\" && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  // On other platforms, \\ is a valid (albeit bad) filename char.\n  if (platform === \"win32\") {\n    f = f.split(\"\\\\\").join(\"/\")\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, \"split\", f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, \"set\", set)\n\n  var splitFile = path.basename(f.join(\"/\")).split(\"/\")\n\n  for (var i = 0, l = set.length; i < l; i ++) {\n    var pattern = set[i], file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = splitFile\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug(\"matchOne\",\n              { \"this\": this\n              , file: file\n              , pattern: pattern })\n\n  this.debug(\"matchOne\", file.length, pattern.length)\n\n  for ( var fi = 0\n          , pi = 0\n          , fl = file.length\n          , pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi ++, pi ++ ) {\n\n    this.debug(\"matchOne loop\")\n    var p = pattern[pi]\n      , f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n        , pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for ( ; fi < fl; fi ++) {\n          if (file[fi] === \".\" || file[fi] === \"..\" ||\n              (!options.dot && file[fi].charAt(0) === \".\")) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      WHILE: while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while',\n                    file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === \".\" || swallowee === \"..\" ||\n              (!options.dot && swallowee.charAt(0) === \".\")) {\n            this.debug(\"dot detected!\", file, fr, pattern, pr)\n            break WHILE\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr ++\n        }\n      }\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then \n      if (partial) {\n        // ran out of file\n        this.debug(\"\\n>>> no match, partial?\", file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === \"string\") {\n      if (options.nocase) {\n        hit = f.toLowerCase() === p.toLowerCase()\n      } else {\n        hit = f === p\n      }\n      this.debug(\"string match\", p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug(\"pattern match\", p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    var emptyFileEnd = (fi === fl - 1) && (file[fi] === \"\")\n    return emptyFileEnd\n  }\n\n  // should be unreachable.\n  throw new Error(\"wtf?\")\n}\n\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, \"$1\")\n}\n\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\")\n}\n\n})( typeof require === \"function\" ? require : null,\n    this,\n    typeof module === \"object\" ? module : null,\n    typeof process === \"object\" ? process.platform : \"win32\"\n  )\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"lru-cache\":{\"package.json\":function(require,exports){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// ../npm/node_modules/lru-cache/package.json                                                                        //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nexports.name = \"lru-cache\";\nexports.version = \"2.7.3\";\nexports.main = \"lib/lru-cache.js\";\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"lru-cache.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/practicalmeteor:mocha/node_modules/lru-cache/lib/lru-cache.js                                 //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n;(function () { // closure for web browsers\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = LRUCache\n} else {\n  // just set the global for non-node platforms.\n  this.LRUCache = LRUCache\n}\n\nfunction hOP (obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key)\n}\n\nfunction naiveLength () { return 1 }\n\nvar didTypeWarning = false\nfunction typeCheckKey(key) {\n  if (!didTypeWarning && typeof key !== 'string' && typeof key !== 'number') {\n    didTypeWarning = true\n    console.error(new TypeError(\"LRU: key must be a string or number. Almost certainly a bug! \" + typeof key).stack)\n  }\n}\n\nfunction LRUCache (options) {\n  if (!(this instanceof LRUCache))\n    return new LRUCache(options)\n\n  if (typeof options === 'number')\n    options = { max: options }\n\n  if (!options)\n    options = {}\n\n  this._max = options.max\n  // Kind of weird to have a default max of Infinity, but oh well.\n  if (!this._max || !(typeof this._max === \"number\") || this._max <= 0 )\n    this._max = Infinity\n\n  this._lengthCalculator = options.length || naiveLength\n  if (typeof this._lengthCalculator !== \"function\")\n    this._lengthCalculator = naiveLength\n\n  this._allowStale = options.stale || false\n  this._maxAge = options.maxAge || null\n  this._dispose = options.dispose\n  this.reset()\n}\n\n// resize the cache when the max changes.\nObject.defineProperty(LRUCache.prototype, \"max\",\n  { set : function (mL) {\n      if (!mL || !(typeof mL === \"number\") || mL <= 0 ) mL = Infinity\n      this._max = mL\n      if (this._length > this._max) trim(this)\n    }\n  , get : function () { return this._max }\n  , enumerable : true\n  })\n\n// resize the cache when the lengthCalculator changes.\nObject.defineProperty(LRUCache.prototype, \"lengthCalculator\",\n  { set : function (lC) {\n      if (typeof lC !== \"function\") {\n        this._lengthCalculator = naiveLength\n        this._length = this._itemCount\n        for (var key in this._cache) {\n          this._cache[key].length = 1\n        }\n      } else {\n        this._lengthCalculator = lC\n        this._length = 0\n        for (var key in this._cache) {\n          this._cache[key].length = this._lengthCalculator(this._cache[key].value)\n          this._length += this._cache[key].length\n        }\n      }\n\n      if (this._length > this._max) trim(this)\n    }\n  , get : function () { return this._lengthCalculator }\n  , enumerable : true\n  })\n\nObject.defineProperty(LRUCache.prototype, \"length\",\n  { get : function () { return this._length }\n  , enumerable : true\n  })\n\n\nObject.defineProperty(LRUCache.prototype, \"itemCount\",\n  { get : function () { return this._itemCount }\n  , enumerable : true\n  })\n\nLRUCache.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  var i = 0\n  var itemCount = this._itemCount\n\n  for (var k = this._mru - 1; k >= 0 && i < itemCount; k--) if (this._lruList[k]) {\n    i++\n    var hit = this._lruList[k]\n    if (isStale(this, hit)) {\n      del(this, hit)\n      if (!this._allowStale) hit = undefined\n    }\n    if (hit) {\n      fn.call(thisp, hit.value, hit.key, this)\n    }\n  }\n}\n\nLRUCache.prototype.keys = function () {\n  var keys = new Array(this._itemCount)\n  var i = 0\n  for (var k = this._mru - 1; k >= 0 && i < this._itemCount; k--) if (this._lruList[k]) {\n    var hit = this._lruList[k]\n    keys[i++] = hit.key\n  }\n  return keys\n}\n\nLRUCache.prototype.values = function () {\n  var values = new Array(this._itemCount)\n  var i = 0\n  for (var k = this._mru - 1; k >= 0 && i < this._itemCount; k--) if (this._lruList[k]) {\n    var hit = this._lruList[k]\n    values[i++] = hit.value\n  }\n  return values\n}\n\nLRUCache.prototype.reset = function () {\n  if (this._dispose && this._cache) {\n    for (var k in this._cache) {\n      this._dispose(k, this._cache[k].value)\n    }\n  }\n\n  this._cache = Object.create(null) // hash of items by key\n  this._lruList = Object.create(null) // list of items in order of use recency\n  this._mru = 0 // most recently used\n  this._lru = 0 // least recently used\n  this._length = 0 // number of items in the list\n  this._itemCount = 0\n}\n\nLRUCache.prototype.dump = function () {\n  var arr = []\n  var i = 0\n\n  for (var k = this._mru - 1; k >= 0 && i < this._itemCount; k--) if (this._lruList[k]) {\n    var hit = this._lruList[k]\n    if (!isStale(this, hit)) {\n      //Do not store staled hits\n      ++i\n      arr.push({\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      });\n    }\n  }\n  //arr has the most read first\n  return arr\n}\n\nLRUCache.prototype.dumpLru = function () {\n  return this._lruList\n}\n\nLRUCache.prototype.set = function (key, value, maxAge) {\n  maxAge = maxAge || this._maxAge\n  typeCheckKey(key)\n\n  var now = maxAge ? Date.now() : 0\n  var len = this._lengthCalculator(value)\n\n  if (hOP(this._cache, key)) {\n    if (len > this._max) {\n      del(this, this._cache[key])\n      return false\n    }\n    // dispose of the old one before overwriting\n    if (this._dispose)\n      this._dispose(key, this._cache[key].value)\n\n    this._cache[key].now = now\n    this._cache[key].maxAge = maxAge\n    this._cache[key].value = value\n    this._length += (len - this._cache[key].length)\n    this._cache[key].length = len\n    this.get(key)\n\n    if (this._length > this._max)\n      trim(this)\n\n    return true\n  }\n\n  var hit = new Entry(key, value, this._mru++, len, now, maxAge)\n\n  // oversized objects fall out of cache automatically.\n  if (hit.length > this._max) {\n    if (this._dispose) this._dispose(key, value)\n    return false\n  }\n\n  this._length += hit.length\n  this._lruList[hit.lu] = this._cache[key] = hit\n  this._itemCount ++\n\n  if (this._length > this._max)\n    trim(this)\n\n  return true\n}\n\nLRUCache.prototype.has = function (key) {\n  typeCheckKey(key)\n  if (!hOP(this._cache, key)) return false\n  var hit = this._cache[key]\n  if (isStale(this, hit)) {\n    return false\n  }\n  return true\n}\n\nLRUCache.prototype.get = function (key) {\n  typeCheckKey(key)\n  return get(this, key, true)\n}\n\nLRUCache.prototype.peek = function (key) {\n  typeCheckKey(key)\n  return get(this, key, false)\n}\n\nLRUCache.prototype.pop = function () {\n  var hit = this._lruList[this._lru]\n  del(this, hit)\n  return hit || null\n}\n\nLRUCache.prototype.del = function (key) {\n  typeCheckKey(key)\n  del(this, this._cache[key])\n}\n\nLRUCache.prototype.load = function (arr) {\n  //reset the cache\n  this.reset();\n\n  var now = Date.now()\n  //A previous serialized cache has the most recent items first\n  for (var l = arr.length - 1; l >= 0; l-- ) {\n    var hit = arr[l]\n    typeCheckKey(hit.k)\n    var expiresAt = hit.e || 0\n    if (expiresAt === 0) {\n      //the item was created without expiration in a non aged cache\n      this.set(hit.k, hit.v)\n    } else {\n      var maxAge = expiresAt - now\n      //dont add already expired items\n      if (maxAge > 0) this.set(hit.k, hit.v, maxAge)\n    }\n  }\n}\n\nfunction get (self, key, doUse) {\n  typeCheckKey(key)\n  var hit = self._cache[key]\n  if (hit) {\n    if (isStale(self, hit)) {\n      del(self, hit)\n      if (!self._allowStale) hit = undefined\n    } else {\n      if (doUse) use(self, hit)\n    }\n    if (hit) hit = hit.value\n  }\n  return hit\n}\n\nfunction isStale(self, hit) {\n  if (!hit || (!hit.maxAge && !self._maxAge)) return false\n  var stale = false;\n  var diff = Date.now() - hit.now\n  if (hit.maxAge) {\n    stale = diff > hit.maxAge\n  } else {\n    stale = self._maxAge && (diff > self._maxAge)\n  }\n  return stale;\n}\n\nfunction use (self, hit) {\n  shiftLU(self, hit)\n  hit.lu = self._mru ++\n  self._lruList[hit.lu] = hit\n}\n\nfunction trim (self) {\n  while (self._lru < self._mru && self._length > self._max)\n    del(self, self._lruList[self._lru])\n}\n\nfunction shiftLU (self, hit) {\n  delete self._lruList[ hit.lu ]\n  while (self._lru < self._mru && !self._lruList[self._lru]) self._lru ++\n}\n\nfunction del (self, hit) {\n  if (hit) {\n    if (self._dispose) self._dispose(hit.key, hit.value)\n    self._length -= hit.length\n    self._itemCount --\n    delete self._cache[ hit.key ]\n    shiftLU(self, hit)\n  }\n}\n\n// classy, since V8 prefers predictable objects.\nfunction Entry (key, value, lu, length, now, maxAge) {\n  this.key = key\n  this.value = value\n  this.lu = lu\n  this.length = length\n  this.now = now\n  if (maxAge) this.maxAge = maxAge\n}\n\n})()\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"sigmund\":{\"package.json\":function(require,exports){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// ../npm/node_modules/sigmund/package.json                                                                          //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nexports.name = \"sigmund\";\nexports.version = \"1.0.1\";\nexports.main = \"sigmund.js\";\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"sigmund.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/practicalmeteor:mocha/node_modules/sigmund/sigmund.js                                         //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.exports = sigmund\nfunction sigmund (subject, maxSessions) {\n    maxSessions = maxSessions || 10;\n    var notes = [];\n    var analysis = '';\n    var RE = RegExp;\n\n    function psychoAnalyze (subject, session) {\n        if (session > maxSessions) return;\n\n        if (typeof subject === 'function' ||\n            typeof subject === 'undefined') {\n            return;\n        }\n\n        if (typeof subject !== 'object' || !subject ||\n            (subject instanceof RE)) {\n            analysis += subject;\n            return;\n        }\n\n        if (notes.indexOf(subject) !== -1 || session === maxSessions) return;\n\n        notes.push(subject);\n        analysis += '{';\n        Object.keys(subject).forEach(function (issue, _, __) {\n            // pseudo-private values.  skip those.\n            if (issue.charAt(0) === '_') return;\n            var to = typeof subject[issue];\n            if (to === 'function' || to === 'undefined') return;\n            analysis += issue;\n            psychoAnalyze(subject[issue], session + 1);\n        });\n    }\n    psychoAnalyze(subject, 0);\n    return analysis;\n}\n\n// vim: set softtabstop=4 shiftwidth=4:\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"inherits\":{\"package.json\":function(require,exports){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// ../npm/node_modules/inherits/package.json                                                                         //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nexports.name = \"inherits\";\nexports.version = \"2.0.1\";\nexports.main = \"./inherits.js\";\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"inherits.js\":[\"util\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/practicalmeteor:mocha/node_modules/inherits/inherits.js                                       //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nmodule.exports = require('util').inherits\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"diff\":{\"package.json\":function(require,exports){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// ../npm/node_modules/diff/package.json                                                                             //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nexports.name = \"diff\";\nexports.version = \"1.4.0\";\nexports.main = \"./diff\";\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"diff.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/practicalmeteor:mocha/node_modules/diff/diff.js                                               //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n/* See LICENSE file for terms of use */\n\n/*\n * Text diff implementation.\n *\n * This library supports the following APIS:\n * JsDiff.diffChars: Character by character diff\n * JsDiff.diffWords: Word (as defined by \\b regex) diff which ignores whitespace\n * JsDiff.diffLines: Line based diff\n *\n * JsDiff.diffCss: Diff targeted at CSS content\n *\n * These methods are based on the implementation proposed in\n * \"An O(ND) Difference Algorithm and its Variations\" (Myers, 1986).\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.4.6927\n */\n(function(global, undefined) {\n  var objectPrototypeToString = Object.prototype.toString;\n\n  /*istanbul ignore next*/\n  function map(arr, mapper, that) {\n    if (Array.prototype.map) {\n      return Array.prototype.map.call(arr, mapper, that);\n    }\n\n    var other = new Array(arr.length);\n\n    for (var i = 0, n = arr.length; i < n; i++) {\n      other[i] = mapper.call(that, arr[i], i, arr);\n    }\n    return other;\n  }\n  function clonePath(path) {\n    return { newPos: path.newPos, components: path.components.slice(0) };\n  }\n  function removeEmpty(array) {\n    var ret = [];\n    for (var i = 0; i < array.length; i++) {\n      if (array[i]) {\n        ret.push(array[i]);\n      }\n    }\n    return ret;\n  }\n  function escapeHTML(s) {\n    var n = s;\n    n = n.replace(/&/g, '&amp;');\n    n = n.replace(/</g, '&lt;');\n    n = n.replace(/>/g, '&gt;');\n    n = n.replace(/\"/g, '&quot;');\n\n    return n;\n  }\n\n  // This function handles the presence of circular references by bailing out when encountering an\n  // object that is already on the \"stack\" of items being processed.\n  function canonicalize(obj, stack, replacementStack) {\n    stack = stack || [];\n    replacementStack = replacementStack || [];\n\n    var i;\n\n    for (i = 0; i < stack.length; i += 1) {\n      if (stack[i] === obj) {\n        return replacementStack[i];\n      }\n    }\n\n    var canonicalizedObj;\n\n    if ('[object Array]' === objectPrototypeToString.call(obj)) {\n      stack.push(obj);\n      canonicalizedObj = new Array(obj.length);\n      replacementStack.push(canonicalizedObj);\n      for (i = 0; i < obj.length; i += 1) {\n        canonicalizedObj[i] = canonicalize(obj[i], stack, replacementStack);\n      }\n      stack.pop();\n      replacementStack.pop();\n    } else if (typeof obj === 'object' && obj !== null) {\n      stack.push(obj);\n      canonicalizedObj = {};\n      replacementStack.push(canonicalizedObj);\n      var sortedKeys = [],\n          key;\n      for (key in obj) {\n        sortedKeys.push(key);\n      }\n      sortedKeys.sort();\n      for (i = 0; i < sortedKeys.length; i += 1) {\n        key = sortedKeys[i];\n        canonicalizedObj[key] = canonicalize(obj[key], stack, replacementStack);\n      }\n      stack.pop();\n      replacementStack.pop();\n    } else {\n      canonicalizedObj = obj;\n    }\n    return canonicalizedObj;\n  }\n\n  function buildValues(components, newString, oldString, useLongestToken) {\n    var componentPos = 0,\n        componentLen = components.length,\n        newPos = 0,\n        oldPos = 0;\n\n    for (; componentPos < componentLen; componentPos++) {\n      var component = components[componentPos];\n      if (!component.removed) {\n        if (!component.added && useLongestToken) {\n          var value = newString.slice(newPos, newPos + component.count);\n          value = map(value, function(value, i) {\n            var oldValue = oldString[oldPos + i];\n            return oldValue.length > value.length ? oldValue : value;\n          });\n\n          component.value = value.join('');\n        } else {\n          component.value = newString.slice(newPos, newPos + component.count).join('');\n        }\n        newPos += component.count;\n\n        // Common case\n        if (!component.added) {\n          oldPos += component.count;\n        }\n      } else {\n        component.value = oldString.slice(oldPos, oldPos + component.count).join('');\n        oldPos += component.count;\n\n        // Reverse add and remove so removes are output first to match common convention\n        // The diffing algorithm is tied to add then remove output and this is the simplest\n        // route to get the desired output with minimal overhead.\n        if (componentPos && components[componentPos - 1].added) {\n          var tmp = components[componentPos - 1];\n          components[componentPos - 1] = components[componentPos];\n          components[componentPos] = tmp;\n        }\n      }\n    }\n\n    return components;\n  }\n\n  function Diff(ignoreWhitespace) {\n    this.ignoreWhitespace = ignoreWhitespace;\n  }\n  Diff.prototype = {\n    diff: function(oldString, newString, callback) {\n      var self = this;\n\n      function done(value) {\n        if (callback) {\n          setTimeout(function() { callback(undefined, value); }, 0);\n          return true;\n        } else {\n          return value;\n        }\n      }\n\n      // Handle the identity case (this is due to unrolling editLength == 0\n      if (newString === oldString) {\n        return done([{ value: newString }]);\n      }\n      if (!newString) {\n        return done([{ value: oldString, removed: true }]);\n      }\n      if (!oldString) {\n        return done([{ value: newString, added: true }]);\n      }\n\n      newString = this.tokenize(newString);\n      oldString = this.tokenize(oldString);\n\n      var newLen = newString.length, oldLen = oldString.length;\n      var editLength = 1;\n      var maxEditLength = newLen + oldLen;\n      var bestPath = [{ newPos: -1, components: [] }];\n\n      // Seed editLength = 0, i.e. the content starts with the same values\n      var oldPos = this.extractCommon(bestPath[0], newString, oldString, 0);\n      if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n        // Identity per the equality and tokenizer\n        return done([{value: newString.join('')}]);\n      }\n\n      // Main worker method. checks all permutations of a given edit length for acceptance.\n      function execEditLength() {\n        for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n          var basePath;\n          var addPath = bestPath[diagonalPath - 1],\n              removePath = bestPath[diagonalPath + 1],\n              oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n          if (addPath) {\n            // No one else is going to attempt to use this value, clear it\n            bestPath[diagonalPath - 1] = undefined;\n          }\n\n          var canAdd = addPath && addPath.newPos + 1 < newLen,\n              canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\n          if (!canAdd && !canRemove) {\n            // If this path is a terminal then prune\n            bestPath[diagonalPath] = undefined;\n            continue;\n          }\n\n          // Select the diagonal that we want to branch from. We select the prior\n          // path whose position in the new string is the farthest from the origin\n          // and does not pass the bounds of the diff graph\n          if (!canAdd || (canRemove && addPath.newPos < removePath.newPos)) {\n            basePath = clonePath(removePath);\n            self.pushComponent(basePath.components, undefined, true);\n          } else {\n            basePath = addPath;   // No need to clone, we've pulled it from the list\n            basePath.newPos++;\n            self.pushComponent(basePath.components, true, undefined);\n          }\n\n          oldPos = self.extractCommon(basePath, newString, oldString, diagonalPath);\n\n          // If we have hit the end of both strings, then we are done\n          if (basePath.newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n            return done(buildValues(basePath.components, newString, oldString, self.useLongestToken));\n          } else {\n            // Otherwise track this path as a potential candidate and continue.\n            bestPath[diagonalPath] = basePath;\n          }\n        }\n\n        editLength++;\n      }\n\n      // Performs the length of edit iteration. Is a bit fugly as this has to support the\n      // sync and async mode which is never fun. Loops over execEditLength until a value\n      // is produced.\n      if (callback) {\n        (function exec() {\n          setTimeout(function() {\n            // This should not happen, but we want to be safe.\n            /*istanbul ignore next */\n            if (editLength > maxEditLength) {\n              return callback();\n            }\n\n            if (!execEditLength()) {\n              exec();\n            }\n          }, 0);\n        }());\n      } else {\n        while (editLength <= maxEditLength) {\n          var ret = execEditLength();\n          if (ret) {\n            return ret;\n          }\n        }\n      }\n    },\n\n    pushComponent: function(components, added, removed) {\n      var last = components[components.length - 1];\n      if (last && last.added === added && last.removed === removed) {\n        // We need to clone here as the component clone operation is just\n        // as shallow array clone\n        components[components.length - 1] = {count: last.count + 1, added: added, removed: removed };\n      } else {\n        components.push({count: 1, added: added, removed: removed });\n      }\n    },\n    extractCommon: function(basePath, newString, oldString, diagonalPath) {\n      var newLen = newString.length,\n          oldLen = oldString.length,\n          newPos = basePath.newPos,\n          oldPos = newPos - diagonalPath,\n\n          commonCount = 0;\n      while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newString[newPos + 1], oldString[oldPos + 1])) {\n        newPos++;\n        oldPos++;\n        commonCount++;\n      }\n\n      if (commonCount) {\n        basePath.components.push({count: commonCount});\n      }\n\n      basePath.newPos = newPos;\n      return oldPos;\n    },\n\n    equals: function(left, right) {\n      var reWhitespace = /\\S/;\n      return left === right || (this.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right));\n    },\n    tokenize: function(value) {\n      return value.split('');\n    }\n  };\n\n  var CharDiff = new Diff();\n\n  var WordDiff = new Diff(true);\n  var WordWithSpaceDiff = new Diff();\n  WordDiff.tokenize = WordWithSpaceDiff.tokenize = function(value) {\n    return removeEmpty(value.split(/(\\s+|\\b)/));\n  };\n\n  var CssDiff = new Diff(true);\n  CssDiff.tokenize = function(value) {\n    return removeEmpty(value.split(/([{}:;,]|\\s+)/));\n  };\n\n  var LineDiff = new Diff();\n\n  var TrimmedLineDiff = new Diff();\n  TrimmedLineDiff.ignoreTrim = true;\n\n  LineDiff.tokenize = TrimmedLineDiff.tokenize = function(value) {\n    var retLines = [],\n        lines = value.split(/^/m);\n    for (var i = 0; i < lines.length; i++) {\n      var line = lines[i],\n          lastLine = lines[i - 1],\n          lastLineLastChar = lastLine && lastLine[lastLine.length - 1];\n\n      // Merge lines that may contain windows new lines\n      if (line === '\\n' && lastLineLastChar === '\\r') {\n          retLines[retLines.length - 1] = retLines[retLines.length - 1].slice(0, -1) + '\\r\\n';\n      } else {\n        if (this.ignoreTrim) {\n          line = line.trim();\n          // add a newline unless this is the last line.\n          if (i < lines.length - 1) {\n            line += '\\n';\n          }\n        }\n        retLines.push(line);\n      }\n    }\n\n    return retLines;\n  };\n\n  var PatchDiff = new Diff();\n  PatchDiff.tokenize = function(value) {\n    var ret = [],\n        linesAndNewlines = value.split(/(\\n|\\r\\n)/);\n\n    // Ignore the final empty token that occurs if the string ends with a new line\n    if (!linesAndNewlines[linesAndNewlines.length - 1]) {\n      linesAndNewlines.pop();\n    }\n\n    // Merge the content and line separators into single tokens\n    for (var i = 0; i < linesAndNewlines.length; i++) {\n      var line = linesAndNewlines[i];\n\n      if (i % 2) {\n        ret[ret.length - 1] += line;\n      } else {\n        ret.push(line);\n      }\n    }\n    return ret;\n  };\n\n  var SentenceDiff = new Diff();\n  SentenceDiff.tokenize = function(value) {\n    return removeEmpty(value.split(/(\\S.+?[.!?])(?=\\s+|$)/));\n  };\n\n  var JsonDiff = new Diff();\n  // Discriminate between two lines of pretty-printed, serialized JSON where one of them has a\n  // dangling comma and the other doesn't. Turns out including the dangling comma yields the nicest output:\n  JsonDiff.useLongestToken = true;\n  JsonDiff.tokenize = LineDiff.tokenize;\n  JsonDiff.equals = function(left, right) {\n    return LineDiff.equals(left.replace(/,([\\r\\n])/g, '$1'), right.replace(/,([\\r\\n])/g, '$1'));\n  };\n\n  var JsDiff = {\n    Diff: Diff,\n\n    diffChars: function(oldStr, newStr, callback) { return CharDiff.diff(oldStr, newStr, callback); },\n    diffWords: function(oldStr, newStr, callback) { return WordDiff.diff(oldStr, newStr, callback); },\n    diffWordsWithSpace: function(oldStr, newStr, callback) { return WordWithSpaceDiff.diff(oldStr, newStr, callback); },\n    diffLines: function(oldStr, newStr, callback) { return LineDiff.diff(oldStr, newStr, callback); },\n    diffTrimmedLines: function(oldStr, newStr, callback) { return TrimmedLineDiff.diff(oldStr, newStr, callback); },\n\n    diffSentences: function(oldStr, newStr, callback) { return SentenceDiff.diff(oldStr, newStr, callback); },\n\n    diffCss: function(oldStr, newStr, callback) { return CssDiff.diff(oldStr, newStr, callback); },\n    diffJson: function(oldObj, newObj, callback) {\n      return JsonDiff.diff(\n        typeof oldObj === 'string' ? oldObj : JSON.stringify(canonicalize(oldObj), undefined, '  '),\n        typeof newObj === 'string' ? newObj : JSON.stringify(canonicalize(newObj), undefined, '  '),\n        callback\n      );\n    },\n\n    createTwoFilesPatch: function(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader) {\n      var ret = [];\n\n      if (oldFileName == newFileName) {\n        ret.push('Index: ' + oldFileName);\n      }\n      ret.push('===================================================================');\n      ret.push('--- ' + oldFileName + (typeof oldHeader === 'undefined' ? '' : '\\t' + oldHeader));\n      ret.push('+++ ' + newFileName + (typeof newHeader === 'undefined' ? '' : '\\t' + newHeader));\n\n      var diff = PatchDiff.diff(oldStr, newStr);\n      diff.push({value: '', lines: []});   // Append an empty value to make cleanup easier\n\n      // Formats a given set of lines for printing as context lines in a patch\n      function contextLines(lines) {\n        return map(lines, function(entry) { return ' ' + entry; });\n      }\n\n      // Outputs the no newline at end of file warning if needed\n      function eofNL(curRange, i, current) {\n        var last = diff[diff.length - 2],\n            isLast = i === diff.length - 2,\n            isLastOfType = i === diff.length - 3 && current.added !== last.added;\n\n        // Figure out if this is the last line for the given file and missing NL\n        if (!(/\\n$/.test(current.value)) && (isLast || isLastOfType)) {\n          curRange.push('\\\\ No newline at end of file');\n        }\n      }\n\n      var oldRangeStart = 0, newRangeStart = 0, curRange = [],\n          oldLine = 1, newLine = 1;\n      for (var i = 0; i < diff.length; i++) {\n        var current = diff[i],\n            lines = current.lines || current.value.replace(/\\n$/, '').split('\\n');\n        current.lines = lines;\n\n        if (current.added || current.removed) {\n          // If we have previous context, start with that\n          if (!oldRangeStart) {\n            var prev = diff[i - 1];\n            oldRangeStart = oldLine;\n            newRangeStart = newLine;\n\n            if (prev) {\n              curRange = contextLines(prev.lines.slice(-4));\n              oldRangeStart -= curRange.length;\n              newRangeStart -= curRange.length;\n            }\n          }\n\n          // Output our changes\n          curRange.push.apply(curRange, map(lines, function(entry) {\n            return (current.added ? '+' : '-') + entry;\n          }));\n          eofNL(curRange, i, current);\n\n          // Track the updated file position\n          if (current.added) {\n            newLine += lines.length;\n          } else {\n            oldLine += lines.length;\n          }\n        } else {\n          // Identical context lines. Track line changes\n          if (oldRangeStart) {\n            // Close out any changes that have been output (or join overlapping)\n            if (lines.length <= 8 && i < diff.length - 2) {\n              // Overlapping\n              curRange.push.apply(curRange, contextLines(lines));\n            } else {\n              // end the range and output\n              var contextSize = Math.min(lines.length, 4);\n              ret.push(\n                  '@@ -' + oldRangeStart + ',' + (oldLine - oldRangeStart + contextSize)\n                  + ' +' + newRangeStart + ',' + (newLine - newRangeStart + contextSize)\n                  + ' @@');\n              ret.push.apply(ret, curRange);\n              ret.push.apply(ret, contextLines(lines.slice(0, contextSize)));\n              if (lines.length <= 4) {\n                eofNL(ret, i, current);\n              }\n\n              oldRangeStart = 0;\n              newRangeStart = 0;\n              curRange = [];\n            }\n          }\n          oldLine += lines.length;\n          newLine += lines.length;\n        }\n      }\n\n      return ret.join('\\n') + '\\n';\n    },\n\n    createPatch: function(fileName, oldStr, newStr, oldHeader, newHeader) {\n      return JsDiff.createTwoFilesPatch(fileName, fileName, oldStr, newStr, oldHeader, newHeader);\n    },\n\n    applyPatch: function(oldStr, uniDiff) {\n      var diffstr = uniDiff.split('\\n'),\n          hunks = [],\n          i = 0,\n          remEOFNL = false,\n          addEOFNL = false;\n\n      // Skip to the first change hunk\n      while (i < diffstr.length && !(/^@@/.test(diffstr[i]))) {\n        i++;\n      }\n\n      // Parse the unified diff\n      for (; i < diffstr.length; i++) {\n        if (diffstr[i][0] === '@') {\n          var chnukHeader = diffstr[i].split(/@@ -(\\d+),(\\d+) \\+(\\d+),(\\d+) @@/);\n          hunks.unshift({\n            start: chnukHeader[3],\n            oldlength: +chnukHeader[2],\n            removed: [],\n            newlength: chnukHeader[4],\n            added: []\n          });\n        } else if (diffstr[i][0] === '+') {\n          hunks[0].added.push(diffstr[i].substr(1));\n        } else if (diffstr[i][0] === '-') {\n          hunks[0].removed.push(diffstr[i].substr(1));\n        } else if (diffstr[i][0] === ' ') {\n          hunks[0].added.push(diffstr[i].substr(1));\n          hunks[0].removed.push(diffstr[i].substr(1));\n        } else if (diffstr[i][0] === '\\\\') {\n          if (diffstr[i - 1][0] === '+') {\n            remEOFNL = true;\n          } else if (diffstr[i - 1][0] === '-') {\n            addEOFNL = true;\n          }\n        }\n      }\n\n      // Apply the diff to the input\n      var lines = oldStr.split('\\n');\n      for (i = hunks.length - 1; i >= 0; i--) {\n        var hunk = hunks[i];\n        // Sanity check the input string. Bail if we don't match.\n        for (var j = 0; j < hunk.oldlength; j++) {\n          if (lines[hunk.start - 1 + j] !== hunk.removed[j]) {\n            return false;\n          }\n        }\n        Array.prototype.splice.apply(lines, [hunk.start - 1, hunk.oldlength].concat(hunk.added));\n      }\n\n      // Handle EOFNL insertion/removal\n      if (remEOFNL) {\n        while (!lines[lines.length - 1]) {\n          lines.pop();\n        }\n      } else if (addEOFNL) {\n        lines.push('');\n      }\n      return lines.join('\\n');\n    },\n\n    convertChangesToXML: function(changes) {\n      var ret = [];\n      for (var i = 0; i < changes.length; i++) {\n        var change = changes[i];\n        if (change.added) {\n          ret.push('<ins>');\n        } else if (change.removed) {\n          ret.push('<del>');\n        }\n\n        ret.push(escapeHTML(change.value));\n\n        if (change.added) {\n          ret.push('</ins>');\n        } else if (change.removed) {\n          ret.push('</del>');\n        }\n      }\n      return ret.join('');\n    },\n\n    // See: http://code.google.com/p/google-diff-match-patch/wiki/API\n    convertChangesToDMP: function(changes) {\n      var ret = [],\n          change,\n          operation;\n      for (var i = 0; i < changes.length; i++) {\n        change = changes[i];\n        if (change.added) {\n          operation = 1;\n        } else if (change.removed) {\n          operation = -1;\n        } else {\n          operation = 0;\n        }\n\n        ret.push([operation, change.value]);\n      }\n      return ret;\n    },\n\n    canonicalize: canonicalize\n  };\n\n  /*istanbul ignore next */\n  /*global module */\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = JsDiff;\n  } else if (typeof define === 'function' && define.amd) {\n    /*global define */\n    define([], function() { return JsDiff; });\n  } else if (typeof global.JsDiff === 'undefined') {\n    global.JsDiff = JsDiff;\n  }\n}(this));\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"supports-color\":{\"package.json\":function(require,exports){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// ../npm/node_modules/supports-color/package.json                                                                   //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nexports.name = \"supports-color\";\nexports.version = \"1.2.0\";\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/practicalmeteor:mocha/node_modules/supports-color/index.js                                    //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n'use strict';\nvar argv = process.argv;\n\nmodule.exports = (function () {\n\tif (argv.indexOf('--no-color') !== -1 ||\n\t\targv.indexOf('--no-colors') !== -1 ||\n\t\targv.indexOf('--color=false') !== -1) {\n\t\treturn false;\n\t}\n\n\tif (argv.indexOf('--color') !== -1 ||\n\t\targv.indexOf('--colors') !== -1 ||\n\t\targv.indexOf('--color=true') !== -1 ||\n\t\targv.indexOf('--color=always') !== -1) {\n\t\treturn true;\n\t}\n\n\tif (process.stdout && !process.stdout.isTTY) {\n\t\treturn false;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\treturn true;\n\t}\n\n\tif ('COLORTERM' in process.env) {\n\t\treturn true;\n\t}\n\n\tif (process.env.TERM === 'dumb') {\n\t\treturn false;\n\t}\n\n\tif (/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(process.env.TERM)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n})();\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"escape-string-regexp\":{\"package.json\":function(require,exports){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// ../npm/node_modules/escape-string-regexp/package.json                                                             //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nexports.name = \"escape-string-regexp\";\nexports.version = \"1.0.2\";\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// node_modules/meteor/practicalmeteor:mocha/node_modules/escape-string-regexp/index.js                              //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n'use strict';\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nmodule.exports = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn str.replace(matchOperatorsRe,  '\\\\$&');\n};\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}}},{\"extensions\":[\".js\",\".json\",\".coffee\"]});\nrequire(\"./node_modules/meteor/practicalmeteor:mocha/meteor/src/server/autoupdate.js\");\nvar exports = require(\"./node_modules/meteor/practicalmeteor:mocha/meteor/src/index.js\");\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['practicalmeteor:mocha'] = exports, {\n  runTests: runTests\n});\n\n})();\n","servePath":"/packages/practicalmeteor_mocha.js","sourceMap":{"version":3,"sources":["/packages/practicalmeteor:mocha/meteor/src/server/autoupdate.js","/packages/practicalmeteor:mocha/meteor/src/index.js","node_modules/meteor/practicalmeteor:mocha/meteor/src/lib/MochaRunner.coffee","/packages/practicalmeteor_mocha/meteor/src/lib/MochaRunner.coffee","node_modules/meteor/practicalmeteor:mocha/meteor/src/reporters/BaseReporter.coffee","/packages/practicalmeteor_mocha/meteor/src/reporters/BaseReporter.coffee","node_modules/meteor/practicalmeteor:mocha/meteor/src/reporters/ClientServerBaseReporter.coffee","/packages/practicalmeteor_mocha/meteor/src/reporters/ClientServerBaseReporter.coffee","node_modules/meteor/practicalmeteor:mocha/meteor/src/reporters/ClientServerReporter.coffee","/packages/practicalmeteor_mocha/meteor/src/reporters/ClientServerReporter.coffee","node_modules/meteor/practicalmeteor:mocha/meteor/src/reporters/ConsoleReporter.coffee","/packages/practicalmeteor_mocha/meteor/src/reporters/ConsoleReporter.coffee","node_modules/meteor/practicalmeteor:mocha/meteor/src/reporters/HtmlReporter.coffee","/packages/practicalmeteor_mocha/meteor/src/reporters/HtmlReporter.coffee","node_modules/meteor/practicalmeteor:mocha/meteor/src/reporters/MeteorPublishReporter.coffee","/packages/practicalmeteor_mocha/meteor/src/reporters/MeteorPublishReporter.coffee","node_modules/meteor/practicalmeteor:mocha/meteor/src/reporters/MirrorReporter.coffee","/packages/practicalmeteor_mocha/meteor/src/reporters/MirrorReporter.coffee","node_modules/meteor/practicalmeteor:mocha/meteor/src/reporters/XunitReporter.coffee","/packages/practicalmeteor_mocha/meteor/src/reporters/XunitReporter.coffee","/packages/practicalmeteor:mocha/meteor/src/reporters/html.js","/packages/practicalmeteor:mocha/meteor/src/reporters/index.js","/packages/practicalmeteor:mocha/meteor/src/setup/index.js","/packages/practicalmeteor:mocha/meteor/src/setup/setupMochaClient.js","/packages/practicalmeteor:mocha/lib/ms.js","/packages/practicalmeteor:mocha/lib/utils.js","/packages/practicalmeteor:mocha/lib/browser/progress.js","/packages/practicalmeteor:mocha/lib/reporters/base.js","../npm/node_modules/meteor-node-stubs/package.json","node_modules/meteor/practicalmeteor:mocha/node_modules/meteor-node-stubs/index.js","node_modules/meteor/practicalmeteor:mocha/node_modules/meteor-node-stubs/map.json","../npm/node_modules/underscore/package.json","node_modules/meteor/practicalmeteor:mocha/node_modules/underscore/underscore.js","node_modules/meteor/practicalmeteor:mocha/node_modules/mocha/lib/test.js","node_modules/meteor/practicalmeteor:mocha/node_modules/mocha/lib/runnable.js","node_modules/meteor/practicalmeteor:mocha/node_modules/mocha/lib/pending.js","node_modules/meteor/practicalmeteor:mocha/node_modules/mocha/lib/ms.js","node_modules/meteor/practicalmeteor:mocha/node_modules/mocha/lib/utils.js","node_modules/meteor/practicalmeteor:mocha/node_modules/mocha/lib/suite.js","node_modules/meteor/practicalmeteor:mocha/node_modules/mocha/lib/hook.js","../npm/node_modules/debug/package.json","node_modules/meteor/practicalmeteor:mocha/node_modules/debug/node.js","node_modules/meteor/practicalmeteor:mocha/node_modules/debug/debug.js","../npm/node_modules/ms/package.json","node_modules/meteor/practicalmeteor:mocha/node_modules/ms/index.js","../npm/node_modules/glob/package.json","node_modules/meteor/practicalmeteor:mocha/node_modules/glob/glob.js","../npm/node_modules/graceful-fs/package.json","node_modules/meteor/practicalmeteor:mocha/node_modules/graceful-fs/graceful-fs.js","node_modules/meteor/practicalmeteor:mocha/node_modules/graceful-fs/polyfills.js","../npm/node_modules/minimatch/package.json","node_modules/meteor/practicalmeteor:mocha/node_modules/minimatch/minimatch.js","../npm/node_modules/lru-cache/package.json","node_modules/meteor/practicalmeteor:mocha/node_modules/lru-cache/lib/lru-cache.js","../npm/node_modules/sigmund/package.json","node_modules/meteor/practicalmeteor:mocha/node_modules/sigmund/sigmund.js","../npm/node_modules/inherits/package.json","node_modules/meteor/practicalmeteor:mocha/node_modules/inherits/inherits.js","../npm/node_modules/diff/package.json","node_modules/meteor/practicalmeteor:mocha/node_modules/diff/diff.js","../npm/node_modules/supports-color/package.json","node_modules/meteor/practicalmeteor:mocha/node_modules/supports-color/index.js","../npm/node_modules/escape-string-regexp/package.json","node_modules/meteor/practicalmeteor:mocha/node_modules/escape-string-regexp/index.js"],"names":[],"mappings":"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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvCA;AACA;AACA;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3gdnupYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7CA;AACA;AACA;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChplqnhtmBA;AACA;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtCA;AACA;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/packages/practicalmeteor_mocha.js","sourcesContent":["import {Autoupdate} from \"meteor/autoupdate\"\nimport {Random} from \"meteor/random\"\n// autoupdate normally won't reload on server-only changes, but when\n// running tests in the browser it's nice to have server changes cause\n// the tests to reload.  Setting the auto update version to a\n// different value when the server restarts accomplishes this.\nAutoupdate.autoupdateVersion = Random.id();\n","import \"./setup\"\nimport MochaRunner  from \"./lib/MochaRunner\"\nimport BaseReporter from \"./reporters/BaseReporter\"\nimport ClientServerBaseReporter from \"./reporters/ClientServerBaseReporter\"\nimport HtmlReporter from \"./reporters/HtmlReporter\"\nimport {hideOtherCSS, hideApp} from 'meteor/tmeasday:test-reporter-helpers';\n\nexport const runTests = () => {\n  hideApp('.mocha-wrapper');\n  hideOtherCSS();\n  MochaRunner.runEverywhere()\n};\n\nlet { before, after, beforeEach, afterEach,\n      describe, xdescribe, it, xit, specify,\n      xspecify, xcontext, context } = global;\n\nexport {MochaRunner}\nexport {BaseReporter, ClientServerBaseReporter, HtmlReporter}\nexport { before, after, beforeEach, afterEach,\ndescribe, xdescribe, it, xit, specify,\nxspecify, xcontext, context };\n","module.exports = require(\"./MochaRunner.coffee.js\");\n","{_}                   = require(\"underscore\")\nTest                  = require(\"mocha/lib/test\")\nSuite                 = require(\"mocha/lib/suite\")\nutils                 = require(\"mocha/lib/utils\")\n{Mongo}               = require(\"meteor/mongo\")\n{Mocha}               = require(\"meteor/practicalmeteor:mocha-core\")\n{EventEmitter}        = require(\"events\")\n{ObjectLogger}        = require(\"meteor/practicalmeteor:loglevel\")\nMeteorPublishReporter = require(\"./../reporters/MeteorPublishReporter\")\nlog = new ObjectLogger('MochaRunner', 'info')\n\nclass MochaRunner extends EventEmitter\n\n  @instance: null\n\n  @get: ->\n    MochaRunner.instance ?= new MochaRunner()\n\n  VERSION: \"2.4.5_6\"\n  serverRunEvents: null\n  publishers: {}\n\n\n  constructor: ->\n    try\n      log.enter 'constructor'\n      @utils = utils;\n      @serverRunEvents = new Mongo.Collection('mochaServerRunEvents')\n      if Meteor.isServer\n        Meteor.methods({\n          \"mocha/runServerTests\": @runServerTests.bind(@)\n        })\n        @publish()\n\n    finally\n      log.return()\n\n\n  publish: ->\n    try\n      log.enter(\"publish\")\n      self = @\n      Meteor.publish 'mochaServerRunEvents', (runId)->\n        try\n          log.enter 'publish.mochaServerRunEvents'\n          check(runId, String);\n          expect(@ready).to.be.a('function')\n          self.publishers[runId] ?= @\n          @ready()\n          # You can't return any other value but a Cursor, otherwise it will throw an exception\n          return undefined\n        catch ex\n          log.error ex.stack if ex.stack?\n          throw new Meteor.Error('unknown-error', (if ex.message? then ex.message else undefined), (if ex.stack? then ex.stack else undefined))\n        finally\n          log.return()\n    finally\n      log.return()\n\n\n  runServerTests: (runId, grep)=>\n    try\n      log.enter(\"runServerTests\", runId)\n      check(runId, String);\n      check(grep, Match.Optional(Match.OneOf(null, String)));\n      expect(runId).to.be.a(\"string\")\n      expect(@publishers[runId], \"publisher\").to.be.an(\"object\")\n      expect(Meteor.isServer).to.be.true\n      mochaRunner = new Mocha()\n      @_addTestsToMochaRunner(mocha.suite, mochaRunner.suite)\n\n      mochaRunner.reporter(MeteorPublishReporter, {\n        grep: @escapeGrep(grep)\n        publisher: @publishers[runId]\n      })\n\n      log.info \"Starting server side tests with run id #{runId}\"\n      mochaRunner.run (failures)->\n        log.warn 'failures:', failures\n\n    finally\n      log.return()\n\n\n  # Recursive function that starts with global suites and adds all sub suites within each global suite\n  _addTestsToMochaRunner: (fromSuite, toSuite)->\n    try\n      log.enter(\"_addTestToMochaRunner\")\n\n      addHooks = (hookName)->\n        for hook in fromSuite[\"_#{hookName}\"]\n          toSuite[hookName](hook.title, hook.fn)\n        log.debug(\"Hook #{hookName} for '#{fromSuite.fullTitle()}' added.\")\n\n      addHooks(\"beforeAll\")\n      addHooks(\"afterAll\")\n      addHooks(\"beforeEach\")\n      addHooks(\"afterEach\")\n\n      for test in fromSuite.tests\n        test = new Test(test.title, test.fn)\n        toSuite.addTest(test)\n        log.debug(\"Tests for '#{fromSuite.fullTitle()}' added.\")\n\n      for suite in fromSuite.suites\n        newSuite = Suite.create(toSuite, suite.title)\n        newSuite.timeout(suite.timeout())\n        log.debug(\"Suite #{newSuite.fullTitle()}  added to '#{fromSuite.fullTitle()}'.\")\n        @_addTestsToMochaRunner(suite, newSuite)\n\n    finally\n      log.return()\n\n\n  runEverywhere: ->\n    try\n      log.enter 'runEverywhere'\n      expect(Meteor.isClient).to.be.true\n\n      @runId = Random.id()\n      @serverRunSubscriptionHandle = Meteor.subscribe 'mochaServerRunEvents', @runId, {\n        onReady: _.bind(@onServerRunSubscriptionReady, @)\n        onError: _.bind(@onServerRunSubscriptionError, @)\n      }\n\n    finally\n      log.return()\n\n\n  setReporter: (@reporter)->\n\n  escapeGrep: (grep = '')->\n    try\n      log.enter(\"escapeGrep\", grep)\n      matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n      grep.replace(matchOperatorsRe,  '\\\\$&')\n      return new RegExp(grep)\n    finally\n      log.return()\n\n\n  onServerRunSubscriptionReady: =>\n    try\n      log.enter 'onServerRunSubscriptionReady'\n      ClientServerReporter = require(\"./../reporters/ClientServerReporter\")\n      { REPORTERS, reporters} = require(\"../reporters\")\n      query = utils.parseQuery(location.search || '');\n\n      Meteor.call \"mocha/runServerTests\", @runId,  query.grep, (err)->\n        log.debug \"tests started\"\n        log.error(err) if err\n\n      Tracker.autorun =>\n        event = @serverRunEvents.findOne({event: \"run mocha\"})\n        if event?.data.reporter? and _.contains(REPORTERS, event.data.reporter)\n          reporter = reporters[event.data.reporter]\n          @setReporter reporter\n\n        if event?.data.runOrder is \"serial\"\n          reporter = new ClientServerReporter(null, {runOrder: \"serial\"})\n        else if event?.data.runOrder is \"parallel\"\n          mocha.reporter(ClientServerReporter)\n          mocha.run(->)\n\n\n\n    finally\n      log.return()\n\n\n  onServerRunSubscriptionError: (meteorError)->\n    try\n      log.enter 'onServerRunSubscriptionError'\n      log.error meteorError\n    finally\n      log.return()\n\n\nmodule.exports = MochaRunner.get()\n","module.exports = require(\"./BaseReporter.coffee.js\");\n","#/**\n# * Initialize a new `Base` reporter.\n# *\n# * All other reporters generally\n# * inherit from this reporter, providing\n# * stats such as test duration, number\n# * of tests passed / failed etc.\n#*\n#* @param {Runner} runner\n#* @api public\n#*/\n\nclass BaseReporter\n\n  constructor: (@runner, @options)->\n    expect(@runner).to.be.an 'object'\n    expect(@options).to.be.an 'object'\n    @stats = { total: @runner.total, suites: 0, tests: 0, passes: 0, pending: 0, failures: 0 }\n    @failures = []\n\n    @runner.stats = @stats\n\n    @runner.on 'start', =>\n      @stats.start = new Date\n\n    @runner.on 'suite', (suite)=>\n      @stats.suites++ if not suite.root\n\n    @runner.on 'test end', (test)=>\n      @stats.tests++\n\n    @runner.on 'pass', (test)=>\n      medium = test.slow() / 2\n      if test.duration > test.slow()\n        test.speed = 'slow'\n      else if test.duration > medium\n        test.speed = 'medium'\n      else\n        test.speed = 'fast'\n      @stats.passes++\n\n    @runner.on 'fail', (test, err)=>\n      @stats.failures++;\n      test.err = err\n      @failures.push(test)\n\n    @runner.on 'end', =>\n      @stats.end = new Date\n      @stats.duration = @stats.end - @stats.start\n\n    @runner.on 'pending', =>\n      @stats.pending++\n\n\nmodule.exports = BaseReporter\n","module.exports = require(\"./ClientServerBaseReporter.coffee.js\");\n","MochaRunner = require(\"../lib/MochaRunner\")\n#/**\n# * All other reporters generally\n# * inherit from this reporter, providing\n# * stats such as test duration, number\n# * of tests passed / failed etc.\n#*\n#* @param {Runner} clientRunner\n#* @param {Runner} serverRunner\n#* @api public\n#*/\n\nclass ClientServerBaseReporter\n\n\n  constructor: (@clientRunner, @serverRunner, @options)->\n    expect(@clientRunner).to.be.an 'object'\n    expect(@serverRunner).to.be.an 'object'\n    expect(@options).to.be.an 'object'\n\n    @clientStats = {total: @clientRunner.total, suites: 0, tests: 0, passes: 0, pending: 0, failures: 0}\n    @serverStats = {total: @serverRunner.total, suites: 0, tests: 0, passes: 0, pending: 0, failures: 0}\n    @stats = {total: @serverRunner.total + @clientRunner.total, suites: 0, tests: 0, passes: 0, pending: 0, failures: 0}\n    @failures = []\n\n    @clientRunner.stats = @clientStats\n    @serverRunner.stats = @serverStats\n\n    @registerRunnerEvents(\"server\")\n    @registerRunnerEvents(\"client\")\n\n    # Exposes global variables to indicate when tests are done. For example spacejam use this global vars\n    MochaRunner.on \"end all\", =>\n      window.TEST_STATUS = {FAILURES: @stats.failures, DONE: true}\n      window.DONE = true\n      window.FAILURES = @stats.failures\n\n  registerRunnerEvents: (where)->\n\n    @[\"#{where}Runner\"].on 'start', =>\n      start = new Date()\n      @[where+\"Stats\"].start = start\n      # The start time will be the first of the runners that started running\n      @stats.start ?= start\n      ###\n        The total and other stats of the server runner are sent with the 'start' event,\n        so we need to update the total of the stats.\n        Also when running in 'serial' mode (server test first and then client tests),\n        clientRunner.total is undefined because client starts running after server tests end.\n      ###\n      @clientStats.total = @clientRunner.total\n      @serverStats.total = @serverRunner.total\n      @stats.total = @clientStats.total + @serverStats.total\n\n\n    @[\"#{where}Runner\"].on 'suite', (suite)=>\n      if not suite.root\n        @stats.suites++\n        @[where+\"Stats\"].suites++\n\n    @[\"#{where}Runner\"].on 'test end', (test)=>\n      @stats.tests++\n\n    @[\"#{where}Runner\"].on 'pass', (test)=>\n      medium = test.slow() / 2\n\n      if test.duration > test.slow()\n        test.speed = 'slow'\n      else if test.duration > medium\n        test.speed = 'medium'\n      else\n        test.speed = 'fast'\n\n      @[where+\"Stats\"].passes++\n      @stats.passes++\n\n    @[\"#{where}Runner\"].on 'fail', (test, err)=>\n      test.err ?= err\n      @failures.push(test)\n\n      @stats.failures++;\n      @[where+\"Stats\"].failures++;\n\n\n    @[\"#{where}Runner\"].on 'end', =>\n      end = new Date()\n\n      @stats.end = end\n      @[where+\"Stats\"].end = end\n\n      @stats.duration = @stats.end - @stats.start\n      @[where+\"Stats\"].duration = @[where+\"Stats\"].end - @[where+\"Stats\"].start\n\n    @[\"#{where}Runner\"].on 'pending', =>\n      @stats.pending++\n      @[where+\"Stats\"].pending++\n\n\nmodule.exports = ClientServerBaseReporter\n","module.exports = require(\"./ClientServerReporter.coffee.js\");\n","{_}             = require(\"underscore\")\nMochaRunner     = require(\"./../lib/MochaRunner\")\nMirrorReporter  = require('./MirrorReporter')\n{ObjectLogger}  = require(\"meteor/practicalmeteor:loglevel\")\n{EventEmitter}  = require(\"events\")\n\nlog = new ObjectLogger('ClientServerReporter', 'info')\n\nclass ClientServerReporter\n\n\n  constructor: (@clientRunner, @options = {})->\n    try\n      log.enter('constructor')\n      @serverRunnerProxy = new EventEmitter()\n\n      if @options.runOrder is \"serial\"\n        @clientRunner = new EventEmitter()\n        @runTestsSerially(@clientRunner, @serverRunnerProxy)\n\n      if not MochaRunner.reporter\n        log.info(\"Missing reporter to run tests. Use MochaRunner.setReporter(reporter) to set one.\")\n        return\n\n      @reporter = new MochaRunner.reporter(@clientRunner, @serverRunnerProxy, @options)\n\n      # Exposes global states of tests\n      @clientRunner.on \"start\", ->\n        window.mochaIsRunning = true\n\n      @clientRunner.on \"end\", =>\n        window.mochaIsRunning = false\n        window.mochaIsDone = true\n\n        MochaRunner.emit(\"end client\")\n        @clientTestsEnded = true\n        if @serverTestsEnded\n          MochaRunner.emit(\"end all\")\n\n      @serverRunnerProxy.on 'end', =>\n        @serverTestsEnded = true\n        MochaRunner.emit(\"end server\")\n        if @clientTestsEnded\n          MochaRunner.emit(\"end all\")\n\n      MochaRunner.serverRunEvents.find().observe({\n        added: _.bind(@onServerRunnerEvent, @)\n      })\n\n    finally\n      log.return()\n\n\n  runTestsSerially: (clientRunner, serverRunnerProxy)=>\n    try\n      log.enter(\"runTestsSerially\",)\n      serverRunnerProxy.on \"end\", =>\n        mocha.reporter(MirrorReporter, {\n          clientRunner: clientRunner\n        })\n        mocha.run(->)\n\n    finally\n      log.return()\n\n\n  onServerRunnerEvent: (doc)->\n    try\n      log.enter('onServerRunnerEvent')\n      expect(doc).to.be.an('object')\n      expect(doc.event).to.be.a('string')\n      if doc.event is \"run mocha\"\n        return\n      expect(doc.data).to.be.an('object')\n\n      # Required by the standard mocha reporters\n      doc.data.fullTitle = -> return doc.data._fullTitle\n      doc.data.slow = -> return doc.data._slow\n      doc.data.err?.toString = -> \"Error: \" + @message\n\n      if doc.data.parent\n        doc.data.parent.fullTitle = -> return doc.data.parent._fullTitle\n        doc.data.parent.slow = -> return doc.data.parent._slow\n\n\n      if doc.event is 'start'\n        @serverRunnerProxy.stats = doc.data\n        @serverRunnerProxy.total = doc.data.total\n\n      @serverRunnerProxy.emit(doc.event, doc.data, doc.data.err)\n\n    catch ex\n      log.error ex\n    finally\n      log.return()\n\n\nmodule.exports = ClientServerReporter\n","module.exports = require(\"./ConsoleReporter.coffee.js\");\n","MochaRunner               = require(\"../lib/MochaRunner\")\n{ ObjectLogger }          = require(\"meteor/practicalmeteor:loglevel\")\nClientServerBaseReporter  = require(\"./ClientServerBaseReporter\")\n\nlog = new ObjectLogger('ConsoleReporter', 'info')\n\n\nclass ConsoleReporter extends  ClientServerBaseReporter\n\n\n  constructor: (@clientRunner, @serverRunner, @options)->\n    try\n      log.enter('constructor')\n      super(@clientRunner, @serverRunner, @options)\n      MochaRunner.on \"end all\", => @finishAndPrintTestsSummary()\n\n    finally\n      log.return()\n\n  ###\n    Overwriting from ClientServerBaseReporter\n  ###\n  registerRunnerEvents: (where)->\n    try\n      log.enter(\"registerRunnerEvents\")\n      # Call super.registerRunnerEvents to register events from ClientServerBaseReporter first\n      super(where)\n\n      @[\"#{where}Runner\"].on \"start\", => @printReporterHeader(where)\n      @[\"#{where}Runner\"].on 'test end', (test)=> @printTest(test, where)\n\n      # Log for errors with hooks\n      @[\"#{where}Runner\"].on \"fail\", (hook)=> @printTest(hook, where) if hook.type is 'hook'\n\n    finally\n      log.return()\n\n\n  printReporterHeader: (where)=>\n    try\n      log.enter(\"printReporterHeader\", where)\n      return if @options.runOrder isnt 'serial'\n      # i.e client = Client\n      where = where[0].toUpperCase() + where.substr(1)\n      console.log(\"\\n--------------------------------------------------\")\n      console.log(\"------------------ #{where} tests ------------------\")\n      console.log(\"--------------------------------------------------\\n\")\n    finally\n      log.return()\n\n\n  printTest: (test, where)->\n    try\n      log.enter(\"prinTest\", test)\n      state = test.state or (if test.pending then \"pending\")\n\n      # Since the test are running in parallel we don't need\n      # to specify where they are client or   server tests.\n      if @options.runOrder is 'serial'\n        where = \"\"\n      else\n        # Get first chart 's' or 'c' for client/server\n        where = where[0].toUpperCase() + \": \"\n\n      console.log(\"#{where}#{test.fullTitle()} : #{state}\")\n\n      if test.state is \"failed\"\n        console.log(\"  \" + (test.err.stack || test.err))\n\n      console.log(\"\")\n    finally\n      log.return()\n\n\n  finishAndPrintTestsSummary: ()=>\n    try\n      log.enter(\"finishAndPrintTestsSummary\")\n      return if not @clientStats?.total? or not @serverStats?.total?\n\n      console.log(\"\\n--------------------------------------------------\")\n      console.log(\"---------------------RESULTS----------------------\")\n      console.log(\"PASSED:\", @stats.passes)\n      console.log(\"FAILED:\", @stats.failures)\n      console.log(\"SKIPPED:\", @stats.pending)\n      console.log(\"TOTAL:\", @stats.total)\n      console.log(\"--------------------------------------------------\")\n      console.log(\"--------------------------------------------------\\n\")\n    finally\n      log.return()\n\n\nmodule.exports = ConsoleReporter\n\n","module.exports = require(\"./HtmlReporter.coffee.js\");\n","{ObjectLogger}            = require(\"meteor/practicalmeteor:loglevel\")\nMochaHtmlReporter         = require(\"./html\")\nClientServerBaseReporter  = require(\"./ClientServerBaseReporter\")\nMochaRunner = require(\"../lib/MochaRunner\")\n\nlog = new ObjectLogger('HtmlReporter', 'info')\n\nclass HtmlReporter extends ClientServerBaseReporter\n\n  constructor: (@clientRunner, @serverRunner, @options = {})->\n    try\n      log.enter('constructor')\n      @addReporterHtml()\n\n      @reporter = new MochaHtmlReporter(@clientRunner)\n      @serverReporter = new MochaHtmlReporter(@serverRunner, {\n        elementIdPrefix: 'server-'\n      })\n      super(@clientRunner, @serverRunner, @options)\n    finally\n      log.return()\n\n  ###\n    Adds the html required by the mocha HTML reporter to the body of the html\n    document. We modified the mocha HTML reporter to be able to display 2 reporters\n    at the same time, one for client tests and one for server tests.\n    TODO: Create a single meteor reactive reporter.\n  ###\n  addReporterHtml: ()=>\n    try\n      log.enter(\"addReporterHtml\")\n      div = document.createElement('div')\n      div.className = 'mocha-wrapper'\n\n      div.innerHTML = '<div class=\"content\">\n        <div class=\"test-wrapper\">\n          <h1 class=\"title\">Client tests</h1>\n\n          <div id=\"mocha\" class=\"mocha\"></div>\n        </div>\n\n        <div class=\"divider\"></div>\n\n        <div class=\"test-wrapper\">\n          <h1 class=\"title\">Server tests</h1>\n\n          <div id=\"server-mocha\" class=\"mocha\"></div>\n        </div>\n      </div>'\n\n      document.body.appendChild(div)\n    finally\n      log.return()\n\n\n\nmodule.exports = HtmlReporter\n","module.exports = require(\"./MeteorPublishReporter.coffee.js\");\n","{_}            = require(\"underscore\")\nBaseReporter   = require(\"./BaseReporter\")\n{ObjectLogger} = require(\"meteor/practicalmeteor:loglevel\")\n\nlog = new ObjectLogger('MeteorPublishReporter', 'info')\n\nclass MeteorPublishReporter extends BaseReporter\n\n  @publisher: null \n\n  constructor: (runner, options)->\n    try\n      log.enter 'constructor', arguments\n      expect(options.reporterOptions, 'options.reporterOptions').to.be.an('object')\n\n      # Update runner tests\n      runner.grep(options.reporterOptions.grep)\n\n      super(runner, options)\n\n#      @publisher = practical.mocha.MeteorPublishReporter.publisher\n      @publisher = options.reporterOptions.publisher\n      expect(@publisher, '@publisher').to.be.an('object')\n      expect(@publisher.ready, '@publisher.ready').to.be.a('function')\n      expect(@publisher.added, '@publisher.added').to.be.a('function')\n      expect(@publisher.onStop, '@publisher.onStop').to.be.a('function')\n\n\n      @publisher.onStop =>\n        @stopped = true\n      @stopped = false\n      @sequence = 0\n\n      # Make sure we always run within a Fiber\n      @added = Meteor.bindEnvironment(@added, null, @)\n\n      {REPORTERS, HTML_REPORTER} = require(\"./index\")\n      mochaReporter = process.env.MOCHA_REPORTER || HTML_REPORTER\n      if mochaReporter and not _.contains(REPORTERS, mochaReporter)\n        log.info \"Can't find '#{mochaReporter}' reporter. Using '#{HTML_REPORTER}' instead.\"\n        mochaReporter = HTML_REPORTER\n# \n#      # Specify how to run tests 'serial' or 'parallel'\n#      # Running in 'serial' will start server tests first and then client tests\n      @added 'run mocha', { reporter: mochaReporter,   runOrder: process.env.MOCHA_RUN_ORDER || 'parallel' }\n\n      @runner.on 'start', =>\n        try\n          log.enter 'onStart', arguments\n#          @added 'start', {total: @stats.total}\n          @added 'start', @stats\n        finally\n          log.return()\n\n      @runner.on 'suite', (suite)=>\n        try\n          log.enter 'onSuite', arguments\n#          log.info \"suite:\", suite.title\n#          @added 'suite', {title: suite.title, _fullTitle: suite.fullTitle(), root: suite.root}\n\n          @added 'suite', @cleanSuite(suite)\n        finally\n          log.return()\n\n      @runner.on 'suite end', (suite)=>\n        try\n          log.enter 'onSuiteEnd', arguments\n          @added 'suite end', @cleanSuite(suite)\n        finally\n          log.return()\n\n      @runner.on 'test end', (test)=>\n        try\n          log.enter 'onTestEnd', arguments\n          @added 'test end', @cleanTest(test)\n        finally\n          log.return()\n\n      @runner.on 'pass', (test)=>\n        try\n          log.enter 'onPass', arguments\n          @added 'pass', @cleanTest(test)\n        finally\n          log.return()\n\n      @runner.on 'fail', (test, error)=>\n        try\n          log.enter 'onFail', arguments\n          @added 'fail', @cleanTest(test)\n        finally\n          log.return()\n\n      @runner.on 'end', =>\n        try\n          log.enter 'onEnd', arguments\n          @added 'end', @stats\n        finally\n          log.return()\n\n      @runner.on 'pending', (test)=>\n        try\n          log.enter 'onPending', arguments\n          log.debug \"test\", test\n          @added 'pending', @cleanTest(test)\n        finally\n          log.return()\n    finally\n      log.return()\n\n\n  added: (event, data)=>\n    try\n      log.enter 'added', arguments\n#      log.info event, data\n      return if @stopped is true\n      @sequence++\n      doc =\n        _id: \"#{@sequence}\"\n        event: event\n        data: data\n      @publisher.added('mochaServerRunEvents', doc._id, doc)\n    catch ex\n      log.error \"Can't send report data to client.\"\n      log.error \"Error:\", (ex.stack || ex.message)\n      log.error \"Document:\", doc\n    finally\n      log.return()\n\n\n  ###*\n  # Return a plain-object representation of `test`\n  # free of cyclic properties etc.\n  #\n  # @param {Object} test\n  # @return {Object}\n  # @api private\n  ###\n  cleanTest: (test)->\n    try\n      log.enter(\"cleanTest\", arguments)\n\n      properties = [\"title\", \"type\", \"state\",\"speed\", \"pending\",\n        \"duration\", \"async\", \"sync\", \"_timeout\", \"_slow\", \"body\"]\n      return  _.extend(_.pick(test, properties),{\n        _fullTitle: test.fullTitle()\n        parent: @cleanSuite(test.parent)\n        # So we can show the server side test code in the reporter. This property is null ff the test or suite is pending\n        fn: test.fn?.toString()\n        err: @errorJSON(test.err)\n        isServer: true\n      })\n    catch ex\n      log.error(ex)\n\n    finally\n      log.return()\n\n\n  cleanSuite: (suite)->\n    try\n      log.enter(\"cleanSuite\", arguments)\n      return _.extend(_.pick(suite, [\"title\", \"root\", \"pending\"]),{\n        _fullTitle: suite.fullTitle()\n        isServer: true\n      })\n    catch ex\n      log.error(ex)\n    finally\n      log.return()\n\n  ###*\n  # Transform `error` into a JSON object.\n  # @param {Error} err\n  # @return {Object}\n  ###\n\n  errorJSON: (err) =>\n    return if not err\n    ###\n      Only picking the defaults properties define by ECMAScript to avoid problems\n      with custom error that may have properties that can't be stringify such as functions.\n      See https://goo.gl/bsZh3B and https://goo.gl/AFp6KB\n    ###\n    return _.pick(err, [\"name\", \"message\", \"stack\"])\n\n\n\nmodule.exports = MeteorPublishReporter\n","module.exports = require(\"./MirrorReporter.coffee.js\");\n","{ObjectLogger}  = require(\"meteor/practicalmeteor:loglevel\")\nlog = new ObjectLogger('MirrorReporter', 'info')\n\nclass MirrorReporter\n\n  constructor:(@mochaReporter, options)->\n\n    clientRunner = options.reporterOptions?.clientRunner\n    expect(clientRunner, \"clientRunner\").to.be.ok\n\n    # The in order to calculate the progress\n    clientRunner.total = @mochaReporter.total\n\n    @mochaReporter.on 'start', =>\n      try\n        log.enter 'onStart', arguments\n        clientRunner.emit.call(clientRunner, 'start')\n      finally\n        log.return()\n\n    @mochaReporter.on 'suite', (suite)=>\n      try\n        log.enter 'onSuite', arguments\n        clientRunner.emit.call(clientRunner, 'suite',suite)\n      finally\n        log.return()\n\n    @mochaReporter.on 'suite end', (suite)=>\n      try\n        log.enter 'onSuiteEnd', arguments\n        clientRunner.emit.call(clientRunner, 'suite end',suite)\n      finally\n        log.return()\n\n    @mochaReporter.on 'test end', (test)=>\n      try\n        log.enter 'onTestEnd', arguments\n        clientRunner.emit.call(clientRunner, 'test end', test)\n      finally\n        log.return()\n\n    @mochaReporter.on 'pass', (test)=>\n      try\n        log.enter 'onPass', arguments\n        clientRunner.emit.call(clientRunner, 'pass', test)\n      finally\n        log.return()\n\n    @mochaReporter.on 'fail', (test, error)=>\n      try\n        log.enter 'onFail', arguments\n        clientRunner.emit.call(clientRunner, 'fail', test, error)\n      finally\n        log.return()\n\n    @mochaReporter.on 'end', =>\n      try\n        log.enter 'onEnd', arguments\n        clientRunner.emit.call(clientRunner, 'end')\n      finally\n        log.return()\n\n    @mochaReporter.on 'pending', (test)=>\n      try\n        log.enter 'onPending', arguments\n        clientRunner.emit.call(clientRunner, 'pending', test)\n\n      finally\n        log.return()\n\n\nmodule.exports = MirrorReporter\n","module.exports = require(\"./XunitReporter.coffee.js\");\n","MochaRunner     = require(\"../lib/MochaRunner\")\nConsoleReporter     = require(\"./ConsoleReporter\")\n\nclass XUnitReporter extends ConsoleReporter\n\n  @VERSION: \"0.1.0\"\n  xUnitPrefix: \"##_meteor_magic##xunit: \"\n\n  constructor:(@clientRunner, @serverRunner, @options)->\n\n    @clientTests = []\n    @serverTests = []\n\n    # ConsoleReporter exposes global variables that indicates when the tests has finished,\n    # so we register the event to print the test suite before ConsoleReporter register its event\n    MochaRunner.on \"end all\", => @printTestSuite()\n\n    super(@clientRunner, @serverRunner, @options)\n\n\n  ###\n    Overwrite from ConsoleReporter\n  ###\n  registerRunnerEvents:(where)->\n\n    super(where)\n\n    @[where + \"Runner\"].on 'pending', (test) =>\n      @[where+\"Tests\"].push test\n\n    @[where + \"Runner\"].on 'pass', (test) =>\n      @[where+\"Tests\"].push test\n\n    @[where + \"Runner\"].on 'fail', (test) =>\n      @[where+\"Tests\"].push test\n\n\n  printTestSuite: ->\n\n    testSuite = {\n      name: 'Mocha Tests'\n      tests: @stats.total\n      failures: @stats.failures\n      errors: @stats.failures\n      timestamp: (new Date).toUTCString()\n      time: @stats.duration/ 1000 or 0\n      skipped: @stats.pending\n    }\n\n    @write @createTag('testsuite', testSuite, false)\n\n    @clientTests.forEach (test) =>\n      @printTestCase test, \"Client\"\n\n    @serverTests.forEach (test) =>\n      @printTestCase test, \"Server\"\n\n    @write '</testsuite>'\n\n\n  ###*\n  # HTML tag helper.\n  #\n  # @param name\n  # @param attrs\n  # @param close\n  # @param content\n  # @return {string}\n  ###\n  createTag: (name, attrs = {}, close, content) ->\n    end = if close then '/>' else '>'\n    pairs = []\n    tag = undefined\n\n    for key of attrs\n      if Object.prototype.hasOwnProperty.call(attrs, key)\n        pairs.push key + '=\"' + @escape(attrs[key]) + '\"'\n\n    tag = '<' + name + (if pairs.length then ' ' + pairs.join(' ') else '') + end\n\n    if content\n      tag += content + '</' + name + end\n\n    return tag\n\n  ###*\n  # Return cdata escaped CDATA `str`.\n  ###\n\n  cdata: (str) ->\n    '<![CDATA[' + @escape(str) + ']]>'\n\n  ###*\n  # Override done to close the stream (if it's a file).\n  #\n  # @param failures\n  # @param {Function} fn\n  ###\n\n  done:(failures, fn) ->\n      fn failures\n\n  ###*\n  # Write out the given line.\n  #\n  # @param {string} line\n  ###\n\n  write:(line) ->\n    console.log @xUnitPrefix + line\n\n  ###*\n  # Output tag for the given `test.`\n  #\n  # @param {Test} test\n  ###\n\n  printTestCase:(test, where) ->\n    attrs =\n      classname: \"#{where} #{test.parent.fullTitle()}\"\n      name: test.title\n      time: test.duration / 1000 or 0\n\n    if test.state == 'failed'\n      err = test.err\n      stack = @escapeStack(err.stack)\n      @write @createTag('testcase', attrs, false, @createTag('failure', {}, false, @cdata(@escape(err.message) + '\\n' + stack)))\n    else if test.pending\n      @write @createTag('testcase', attrs, false, @createTag('skipped', {}, true))\n    else\n      @write @createTag('testcase', attrs, true)\n    return\n\n\n  ###*\n  # Escape special characters in the given string of html.\n  #\n  # @api private\n  # @param  {string} html\n  # @return {string}\n  ###\n\n  escape: (html) ->\n    String(html)\n      .replace(/&/g, '&amp;')\n      .replace(/\"/g, '&quot;')\n      .replace(/</g, '&lt;')\n      .replace />/g, '&gt;'\n\n\n  ###*\n  # For each line add the @xUnitPrefix and escape special characters in the given string of html.\n  #\n  # @api private\n  # @param  {string} stack\n  # @return {string}\n  ###\n  escapeStack: (stack = \"\")->\n\n    return stack.split(\"\\n\")\n      .map( (s) => @xUnitPrefix + @escape(s))\n      .join(\"\\n\")\n\n\nmodule.exports = XUnitReporter","/* eslint-env browser */\n\n/**\n * Module dependencies.\n */\nvar Base = require('../../../lib/reporters/base');\nvar utils = require('../../../lib/utils');\nvar Progress = require('../../../lib/browser/progress');\nvar escapeRe = require('escape-string-regexp');\nvar escape = utils.escape;\n/**\n * Save timer references to avoid Sinon interfering (see GH-237).\n */\n\n/* eslint-disable no-unused-vars, no-native-reassign */\nvar Date = global.Date;\nvar setTimeout = global.setTimeout;\nvar setInterval = global.setInterval;\nvar clearTimeout = global.clearTimeout;\nvar clearInterval = global.clearInterval;\n/* eslint-enable no-unused-vars, no-native-reassign */\n\n/**\n * Expose `HTML`.\n */\n\nexports = module.exports = HTML;\n\n/**\n * Initialize a new `HTML` reporter.\n *\n * @param {Runner} runner\n * @api public\n */\n\nfunction HTML(runner, options) {\n  Base.call(this, runner);\n  options = options || {};\n  options.elementIdPrefix = options.elementIdPrefix || \"\";\n\n  /**\n   * Stats template.\n   */\n  var statsTemplate = '<ul id=\"'+options.elementIdPrefix+'mocha-stats\"' +\n    ' class=\"mocha-stats\">'\n    + '<li class=\"progress\"><canvas width=\"40\" height=\"40\"></canvas></li>'\n    + '<li class=\"passes\"><a href=\"#\">passes:</a> <em>0</em></li>'\n    + '<li class=\"failures\"><a href=\"#\">failures:</a> <em>0</em></li>'\n    + '<li class=\"duration\">duration: <em>0</em>s</li>'\n    + '</ul>';\n\n\n  var self = this\n    , stats = this.stats\n    , stat = fragment(statsTemplate)\n    , items = stat.getElementsByTagName('li')\n    , passes = items[1].getElementsByTagName('em')[0]\n    , passesLink = items[1].getElementsByTagName('a')[0]\n    , failures = items[2].getElementsByTagName('em')[0]\n    , failuresLink = items[2].getElementsByTagName('a')[0]\n    , duration = items[3].getElementsByTagName('em')[0]\n    , canvas = stat.getElementsByTagName('canvas')[0]\n    , report = fragment('<ul id=\"'+options.elementIdPrefix+'mocha-report\"' +\n      ' class=\"mocha-report\"></ul>')\n    , stack = [report]\n    , progress\n    , ctx\n    , root = document.getElementById(options.elementIdPrefix+'mocha');\n\n  if (canvas.getContext) {\n    var ratio = window.devicePixelRatio || 1;\n    canvas.style.width = canvas.width;\n    canvas.style.height = canvas.height;\n    canvas.width *= ratio;\n    canvas.height *= ratio;\n    ctx = canvas.getContext('2d');\n    ctx.scale(ratio, ratio);\n    progress = new Progress();\n  }\n\n  if (!root) {\n    return error(options.elementIdPrefix+'mocha div missing, add it to your document');\n  }\n\n  // pass toggle\n  on(passesLink, 'click', function() {\n    unhide();\n    var name = (/pass/).test(report.className) ? '' : ' pass';\n    report.className = report.className.replace(/fail|pass/g, '') + name;\n    if (report.className.trim()) {\n      hideSuitesWithout('test pass');\n    }\n  });\n\n  // failure toggle\n  on(failuresLink, 'click', function() {\n    unhide();\n    var name = (/fail/).test(report.className) ? '' : ' fail';\n    report.className = report.className.replace(/fail|pass/g, '') + name;\n    if (report.className.trim()) {\n      hideSuitesWithout('test fail');\n    }\n  });\n\n  root.appendChild(stat);\n  root.appendChild(report);\n\n  if (progress) {\n    progress.size(40);\n  }\n\n  runner.on('suite', function(suite) {\n    if (suite.root) {\n      return;\n    }\n\n    // suite\n    var url = self.suiteURL(suite);\n    var el = fragment('<li class=\"suite\"><h1><a href=\"%s\">%s</a></h1></li>', url, escape(suite.title));\n\n    // container\n    stack[0].appendChild(el);\n    stack.unshift(document.createElement('ul'));\n    el.appendChild(stack[0]);\n  });\n\n  runner.on('suite end', function(suite) {\n    if (suite.root) {\n      return;\n    }\n    stack.shift();\n  });\n\n  runner.on('fail', function(test) {\n    test.body = test.body || test.fn.toString();\n    // For type = 'test' its possible that the test failed due to multiple\n    // done() calls. So report the issue here.\n    if (test.type === 'hook') {\n      runner.emit('test end', test);\n    }\n  });\n\n  runner.on('test end', function(test) {\n    // TODO: add to stats\n    var percent = stats.tests / this.total * 100 | 0;\n    if (progress) {\n      progress.update(percent).draw(ctx);\n    }\n\n    // update stats\n    var ms = new Date() - stats.start;\n    text(passes, stats.passes);\n    text(failures, stats.failures);\n    text(duration, (ms / 1000).toFixed(2));\n\n    // test\n    var el;\n    if (test.state === 'passed') {\n      var url = self.testURL(test);\n      el = fragment('<li class=\"test pass %e\"><h2>%e<span class=\"duration\">%ems</span> <a href=\"%s\" class=\"replay\">‣</a></h2></li>', test.speed, test.title, test.duration, url);\n    } else if (test.pending) {\n      el = fragment('<li class=\"test pass pending\"><h2>%e</h2></li>', test.title);\n    } else {\n      el = fragment('<li class=\"test fail\"><h2>%e <a href=\"%e\" class=\"replay\">‣</a></h2></li>', test.title, self.testURL(test));\n      var stackString; // Note: Includes leading newline\n      var message = test.err.toString();\n\n      // <=IE7 stringifies to [Object Error]. Since it can be overloaded, we\n      // check for the result of the stringifying.\n      if (message === '[object Error]') {\n        message = test.err.message;\n      }\n\n      if (test.err.stack) {\n        var indexOfMessage = test.err.stack.indexOf(test.err.message);\n        if (indexOfMessage === -1) {\n          stackString = test.err.stack;\n        } else {\n          stackString = test.err.stack.substr(test.err.message.length + indexOfMessage);\n        }\n      } else if (test.err.sourceURL && test.err.line !== undefined) {\n        // Safari doesn't give you a stack. Let's at least provide a source line.\n        stackString = '\\n(' + test.err.sourceURL + ':' + test.err.line + ')';\n      }\n\n      stackString = stackString || '';\n\n      if (test.err.htmlMessage && stackString) {\n        el.appendChild(fragment('<div class=\"html-error\">%s\\n<pre class=\"error\">%e</pre></div>', test.err.htmlMessage, stackString));\n      } else if (test.err.htmlMessage) {\n        el.appendChild(fragment('<div class=\"html-error\">%s</div>', test.err.htmlMessage));\n      } else {\n        el.appendChild(fragment('<pre class=\"error\">%e%e</pre>', message, stackString));\n      }\n    }\n\n    // toggle code\n    // TODO: defer\n    if (!test.pending) {\n      var h2 = el.getElementsByTagName('h2')[0];\n\n      on(h2, 'click', function() {\n        pre.style.display = pre.style.display === 'none' ? 'block' : 'none';\n      });\n\n      var pre = fragment('<pre><code>%e</code></pre>', utils.clean(test.body));\n      el.appendChild(pre);\n      pre.style.display = 'none';\n    }\n\n    // Don't call .appendChild if #mocha-report was already .shift()'ed off the stack.\n    if (stack[0]) {\n      stack[0].appendChild(el);\n    }\n  });\n}\n\n/**\n * Makes a URL, preserving querystring (\"search\") parameters.\n *\n * @param {string} s\n * @return {string} A new URL.\n */\nfunction makeUrl(s) {\n  var search = window.location.search;\n\n  // Remove previous grep query parameter if present\n  if (search) {\n    search = search.replace(/[?&]grep=[^&\\s]*/g, '').replace(/^&/, '?');\n  }\n\n  return window.location.pathname + (search ? search + '&' : '?') + 'grep=' + encodeURIComponent(escapeRe(s));\n}\n\n/**\n * Provide suite URL.\n *\n * @param {Object} [suite]\n */\nHTML.prototype.suiteURL = function(suite) {\n  return makeUrl(suite.fullTitle());\n};\n\n/**\n * Provide test URL.\n *\n * @param {Object} [test]\n */\nHTML.prototype.testURL = function(test) {\n  return makeUrl(test.fullTitle());\n};\n\n/**\n * Display error `msg`.\n *\n * @param {string} msg\n */\nfunction error(msg) {\n  document.body.appendChild(fragment('<div class=\"mocha-error\">%s</div>', msg));\n}\n\n/**\n * Return a DOM fragment from `html`.\n *\n * @param {string} html\n */\nfunction fragment(html) {\n  var args = arguments;\n  var div = document.createElement('div');\n  var i = 1;\n\n  div.innerHTML = html.replace(/%([se])/g, function(_, type) {\n    switch (type) {\n      case 's': return String(args[i++]);\n      case 'e': return escape(args[i++]);\n      // no default\n    }\n  });\n\n  return div.firstChild;\n}\n\n/**\n * Check for suites that do not have elements\n * with `classname`, and hide them.\n *\n * @param {text} classname\n */\nfunction hideSuitesWithout(classname) {\n  var suites = document.getElementsByClassName('suite');\n  for (var i = 0; i < suites.length; i++) {\n    var els = suites[i].getElementsByClassName(classname);\n    if (!els.length) {\n      suites[i].className += ' hidden';\n    }\n  }\n}\n\n/**\n * Unhide .hidden suites.\n */\nfunction unhide() {\n  var els = document.getElementsByClassName('suite hidden');\n  for (var i = 0; i < els.length; ++i) {\n    els[i].className = els[i].className.replace('suite hidden', 'suite');\n  }\n}\n\n/**\n * Set an element's text contents.\n *\n * @param {HTMLElement} el\n * @param {string} contents\n */\nfunction text(el, contents) {\n  if (el.textContent) {\n    el.textContent = contents;\n  } else {\n    el.innerText = contents;\n  }\n}\n\n/**\n * Listen on `event` with callback `fn`.\n */\nfunction on(el, event, fn) {\n  if (el.addEventListener) {\n    el.addEventListener(event, fn, false);\n  } else {\n    el.attachEvent('on' + event, fn);\n  }\n}\n","import ConsoleReporter from \"./ConsoleReporter\"\nimport XunitReporter from \"./XunitReporter\"\nimport  HtmlReporter from \"./HtmlReporter\"\n\n\nexport const HTML_REPORTER = 'html';\nexport const CONSOLE_REPORTER = 'console';\nexport const XUNIT_REPORTER = 'xunit';\nexport const REPORTERS = [HTML_REPORTER, CONSOLE_REPORTER, XUNIT_REPORTER];\nlet reporters = { };\nreporters[HTML_REPORTER] = HtmlReporter;\nreporters[CONSOLE_REPORTER] = ConsoleReporter;\nreporters[XUNIT_REPORTER] = XunitReporter;\nexport { reporters }\n","import { mochaInstance } from \"meteor/practicalmeteor:mocha-core\"\nimport setupMochaClient from \"./setupMochaClient\"\n\nif(Meteor.isClient){\n  setupMochaClient()\n}\nif (Meteor.isServer){\n  global.mocha = mochaInstance;\n}","import {meteorInstall} from \"meteor/modules\"\n\n// Here we are creating stubs packages to be availabe on the client side.\n// This must be called before require('mocha')\n// See an example from https://goo.gl/us9YVR\n\nexport default ()=>{\n\n  process.browser = true;\n  \n  require(\"meteor-node-stubs\");\n\n  meteorInstall({\n    node_modules: {\n      \"tty.js\": function (r, e, module) {\n        module.exports = { isatty: ()=>{ return false}}\n      }\n    }\n  });\n\n  meteorInstall({\n    node_modules: {\n      \"constants.js\": function (r, e, module) {\n        module.exports = {\n          test: {'test':'test'}\n        }\n      }\n    }\n  });\n\n\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @api public\n * @param {string|number} val\n * @param {Object} options\n * @return {string|number}\n */\nmodule.exports = function(val, options) {\n  options = options || {};\n  if (typeof val === 'string') {\n    return parse(val);\n  }\n  // https://github.com/mochajs/mocha/pull/1035\n  return options['long'] ? longFormat(val) : shortFormat(val);\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @api private\n * @param {string} str\n * @return {number}\n */\nfunction parse(str) {\n  var match = (/^((?:\\d+)?\\.?\\d+) *(ms|seconds?|s|minutes?|m|hours?|h|days?|d|years?|y)?$/i).exec(str);\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 's':\n      return n * s;\n    case 'ms':\n      return n;\n    default:\n      // No default case\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @api private\n * @param {number} ms\n * @return {string}\n */\nfunction shortFormat(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @api private\n * @param {number} ms\n * @return {string}\n */\nfunction longFormat(ms) {\n  return plural(ms, d, 'day')\n    || plural(ms, h, 'hour')\n    || plural(ms, m, 'minute')\n    || plural(ms, s, 'second')\n    || ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n *\n * @api private\n * @param {number} ms\n * @param {number} n\n * @param {string} name\n */\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","/* eslint-env browser */\n\n/**\n * Module dependencies.\n */\n\nvar basename = require('path').basename;\nvar debug = require('debug')('mocha:watch');\nvar exists = require('fs').existsSync || require('path').existsSync;\nvar glob = require('glob');\nvar join = require('path').join;\nvar readdirSync = require('fs').readdirSync;\nvar statSync = require('fs').statSync;\nvar watchFile = require('fs').watchFile;\n\n/**\n * Ignored directories.\n */\n\nvar ignore = ['node_modules', '.git'];\n\nexports.inherits = require('util').inherits;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @api private\n * @param  {string} html\n * @return {string}\n */\nexports.escape = function(html) {\n  return String(html)\n    .replace(/&/g, '&amp;')\n    .replace(/\"/g, '&quot;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;');\n};\n\n/**\n * Array#forEach (<=IE8)\n *\n * @api private\n * @param {Array} arr\n * @param {Function} fn\n * @param {Object} scope\n */\nexports.forEach = function(arr, fn, scope) {\n  for (var i = 0, l = arr.length; i < l; i++) {\n    fn.call(scope, arr[i], i);\n  }\n};\n\n/**\n * Test if the given obj is type of string.\n *\n * @api private\n * @param {Object} obj\n * @return {boolean}\n */\nexports.isString = function(obj) {\n  return typeof obj === 'string';\n};\n\n/**\n * Array#map (<=IE8)\n *\n * @api private\n * @param {Array} arr\n * @param {Function} fn\n * @param {Object} scope\n * @return {Array}\n */\nexports.map = function(arr, fn, scope) {\n  var result = [];\n  for (var i = 0, l = arr.length; i < l; i++) {\n    result.push(fn.call(scope, arr[i], i, arr));\n  }\n  return result;\n};\n\n/**\n * Array#indexOf (<=IE8)\n *\n * @api private\n * @param {Array} arr\n * @param {Object} obj to find index of\n * @param {number} start\n * @return {number}\n */\nexports.indexOf = function(arr, obj, start) {\n  for (var i = start || 0, l = arr.length; i < l; i++) {\n    if (arr[i] === obj) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n/**\n * Array#reduce (<=IE8)\n *\n * @api private\n * @param {Array} arr\n * @param {Function} fn\n * @param {Object} val Initial value.\n * @return {*}\n */\nexports.reduce = function(arr, fn, val) {\n  var rval = val;\n\n  for (var i = 0, l = arr.length; i < l; i++) {\n    rval = fn(rval, arr[i], i, arr);\n  }\n\n  return rval;\n};\n\n/**\n * Array#filter (<=IE8)\n *\n * @api private\n * @param {Array} arr\n * @param {Function} fn\n * @return {Array}\n */\nexports.filter = function(arr, fn) {\n  var ret = [];\n\n  for (var i = 0, l = arr.length; i < l; i++) {\n    var val = arr[i];\n    if (fn(val, i, arr)) {\n      ret.push(val);\n    }\n  }\n\n  return ret;\n};\n\n/**\n * Object.keys (<=IE8)\n *\n * @api private\n * @param {Object} obj\n * @return {Array} keys\n */\nexports.keys = typeof Object.keys === 'function' ? Object.keys : function(obj) {\n  var keys = [];\n  var has = Object.prototype.hasOwnProperty; // for `window` on <=IE8\n\n  for (var key in obj) {\n    if (has.call(obj, key)) {\n      keys.push(key);\n    }\n  }\n\n  return keys;\n};\n\n/**\n * Watch the given `files` for changes\n * and invoke `fn(file)` on modification.\n *\n * @api private\n * @param {Array} files\n * @param {Function} fn\n */\nexports.watch = function(files, fn) {\n  var options = { interval: 100 };\n  files.forEach(function(file) {\n    debug('file %s', file);\n    watchFile(file, options, function(curr, prev) {\n      if (prev.mtime < curr.mtime) {\n        fn(file);\n      }\n    });\n  });\n};\n\n/**\n * Array.isArray (<=IE8)\n *\n * @api private\n * @param {Object} obj\n * @return {Boolean}\n */\nvar isArray = typeof Array.isArray === 'function' ? Array.isArray : function(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]';\n};\n\nexports.isArray = isArray;\n\n/**\n * Buffer.prototype.toJSON polyfill.\n *\n * @type {Function}\n */\nif (typeof Buffer !== 'undefined' && Buffer.prototype) {\n  Buffer.prototype.toJSON = Buffer.prototype.toJSON || function() {\n    return Array.prototype.slice.call(this, 0);\n  };\n}\n\n/**\n * Ignored files.\n *\n * @api private\n * @param {string} path\n * @return {boolean}\n */\nfunction ignored(path) {\n  return !~ignore.indexOf(path);\n}\n\n/**\n * Lookup files in the given `dir`.\n *\n * @api private\n * @param {string} dir\n * @param {string[]} [ext=['.js']]\n * @param {Array} [ret=[]]\n * @return {Array}\n */\nexports.files = function(dir, ext, ret) {\n  ret = ret || [];\n  ext = ext || ['js'];\n\n  var re = new RegExp('\\\\.(' + ext.join('|') + ')$');\n\n  readdirSync(dir)\n    .filter(ignored)\n    .forEach(function(path) {\n      path = join(dir, path);\n      if (statSync(path).isDirectory()) {\n        exports.files(path, ext, ret);\n      } else if (path.match(re)) {\n        ret.push(path);\n      }\n    });\n\n  return ret;\n};\n\n/**\n * Compute a slug from the given `str`.\n *\n * @api private\n * @param {string} str\n * @return {string}\n */\nexports.slug = function(str) {\n  return str\n    .toLowerCase()\n    .replace(/ +/g, '-')\n    .replace(/[^-\\w]/g, '');\n};\n\n/**\n * Strip the function definition from `str`, and re-indent for pre whitespace.\n *\n * @param {string} str\n * @return {string}\n */\nexports.clean = function(str) {\n  str = str\n    .replace(/\\r\\n?|[\\n\\u2028\\u2029]/g, '\\n').replace(/^\\uFEFF/, '')\n    .replace(/^function *\\(.*\\)\\s*\\{|\\(.*\\) *=> *\\{?/, '')\n    .replace(/\\s+\\}$/, '');\n\n  var spaces = str.match(/^\\n?( *)/)[1].length;\n  var tabs = str.match(/^\\n?(\\t*)/)[1].length;\n  var re = new RegExp('^\\n?' + (tabs ? '\\t' : ' ') + '{' + (tabs ? tabs : spaces) + '}', 'gm');\n\n  str = str.replace(re, '');\n\n  return exports.trim(str);\n};\n\n/**\n * Trim the given `str`.\n *\n * @api private\n * @param {string} str\n * @return {string}\n */\nexports.trim = function(str) {\n  return str.replace(/^\\s+|\\s+$/g, '');\n};\n\n/**\n * Parse the given `qs`.\n *\n * @api private\n * @param {string} qs\n * @return {Object}\n */\nexports.parseQuery = function(qs) {\n  return exports.reduce(qs.replace('?', '').split('&'), function(obj, pair) {\n    var i = pair.indexOf('=');\n    var key = pair.slice(0, i);\n    var val = pair.slice(++i);\n\n    obj[key] = decodeURIComponent(val);\n    return obj;\n  }, {});\n};\n\n/**\n * Highlight the given string of `js`.\n *\n * @api private\n * @param {string} js\n * @return {string}\n */\nfunction highlight(js) {\n  return js\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\\/\\/(.*)/gm, '<span class=\"comment\">//$1</span>')\n    .replace(/('.*?')/gm, '<span class=\"string\">$1</span>')\n    .replace(/(\\d+\\.\\d+)/gm, '<span class=\"number\">$1</span>')\n    .replace(/(\\d+)/gm, '<span class=\"number\">$1</span>')\n    .replace(/\\bnew[ \\t]+(\\w+)/gm, '<span class=\"keyword\">new</span> <span class=\"init\">$1</span>')\n    .replace(/\\b(function|new|throw|return|var|if|else)\\b/gm, '<span class=\"keyword\">$1</span>');\n}\n\n/**\n * Highlight the contents of tag `name`.\n *\n * @api private\n * @param {string} name\n */\nexports.highlightTags = function(name) {\n  var code = document.getElementById('mocha').getElementsByTagName(name);\n  for (var i = 0, len = code.length; i < len; ++i) {\n    code[i].innerHTML = highlight(code[i].innerHTML);\n  }\n};\n\n/**\n * If a value could have properties, and has none, this function is called,\n * which returns a string representation of the empty value.\n *\n * Functions w/ no properties return `'[Function]'`\n * Arrays w/ length === 0 return `'[]'`\n * Objects w/ no properties return `'{}'`\n * All else: return result of `value.toString()`\n *\n * @api private\n * @param {*} value The value to inspect.\n * @param {string} [type] The type of the value, if known.\n * @returns {string}\n */\nfunction emptyRepresentation(value, type) {\n  type = type || exports.type(value);\n\n  switch (type) {\n    case 'function':\n      return '[Function]';\n    case 'object':\n      return '{}';\n    case 'array':\n      return '[]';\n    default:\n      return value.toString();\n  }\n}\n\n/**\n * Takes some variable and asks `Object.prototype.toString()` what it thinks it\n * is.\n *\n * @api private\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\n * @param {*} value The value to test.\n * @returns {string}\n * @example\n * type({}) // 'object'\n * type([]) // 'array'\n * type(1) // 'number'\n * type(false) // 'boolean'\n * type(Infinity) // 'number'\n * type(null) // 'null'\n * type(new Date()) // 'date'\n * type(/foo/) // 'regexp'\n * type('type') // 'string'\n * type(global) // 'global'\n */\nexports.type = function type(value) {\n  if (value === undefined) {\n    return 'undefined';\n  } else if (value === null) {\n    return 'null';\n  } else if (typeof Buffer !== 'undefined' && Buffer.isBuffer(value)) {\n    return 'buffer';\n  }\n  return Object.prototype.toString.call(value)\n    .replace(/^\\[.+\\s(.+?)\\]$/, '$1')\n    .toLowerCase();\n};\n\n/**\n * Stringify `value`. Different behavior depending on type of value:\n *\n * - If `value` is undefined or null, return `'[undefined]'` or `'[null]'`, respectively.\n * - If `value` is not an object, function or array, return result of `value.toString()` wrapped in double-quotes.\n * - If `value` is an *empty* object, function, or array, return result of function\n *   {@link emptyRepresentation}.\n * - If `value` has properties, call {@link exports.canonicalize} on it, then return result of\n *   JSON.stringify().\n *\n * @api private\n * @see exports.type\n * @param {*} value\n * @return {string}\n */\nexports.stringify = function(value) {\n  var type = exports.type(value);\n\n  if (!~exports.indexOf(['object', 'array', 'function'], type)) {\n    if (type !== 'buffer') {\n      return jsonStringify(value);\n    }\n    var json = value.toJSON();\n    // Based on the toJSON result\n    return jsonStringify(json.data && json.type ? json.data : json, 2)\n      .replace(/,(\\n|$)/g, '$1');\n  }\n\n  for (var prop in value) {\n    if (Object.prototype.hasOwnProperty.call(value, prop)) {\n      return jsonStringify(exports.canonicalize(value), 2).replace(/,(\\n|$)/g, '$1');\n    }\n  }\n\n  return emptyRepresentation(value, type);\n};\n\n/**\n * like JSON.stringify but more sense.\n *\n * @api private\n * @param {Object}  object\n * @param {number=} spaces\n * @param {number=} depth\n * @returns {*}\n */\nfunction jsonStringify(object, spaces, depth) {\n  if (typeof spaces === 'undefined') {\n    // primitive types\n    return _stringify(object);\n  }\n\n  depth = depth || 1;\n  var space = spaces * depth;\n  var str = isArray(object) ? '[' : '{';\n  var end = isArray(object) ? ']' : '}';\n  var length = object.length || exports.keys(object).length;\n  // `.repeat()` polyfill\n  function repeat(s, n) {\n    return new Array(n).join(s);\n  }\n\n  function _stringify(val) {\n    switch (exports.type(val)) {\n      case 'null':\n      case 'undefined':\n        val = '[' + val + ']';\n        break;\n      case 'array':\n      case 'object':\n        val = jsonStringify(val, spaces, depth + 1);\n        break;\n      case 'boolean':\n      case 'regexp':\n      case 'number':\n        val = val === 0 && (1 / val) === -Infinity // `-0`\n          ? '-0'\n          : val.toString();\n        break;\n      case 'date':\n        var sDate = isNaN(val.getTime())        // Invalid date\n          ? val.toString()\n          : val.toISOString();\n        val = '[Date: ' + sDate + ']';\n        break;\n      case 'buffer':\n        var json = val.toJSON();\n        // Based on the toJSON result\n        json = json.data && json.type ? json.data : json;\n        val = '[Buffer: ' + jsonStringify(json, 2, depth + 1) + ']';\n        break;\n      default:\n        val = (val === '[Function]' || val === '[Circular]')\n          ? val\n          : JSON.stringify(val); // string\n    }\n    return val;\n  }\n\n  for (var i in object) {\n    if (!object.hasOwnProperty(i)) {\n      continue; // not my business\n    }\n    --length;\n    str += '\\n ' + repeat(' ', space)\n      + (isArray(object) ? '' : '\"' + i + '\": ') // key\n      + _stringify(object[i])                     // value\n      + (length ? ',' : '');                     // comma\n  }\n\n  return str\n    // [], {}\n    + (str.length !== 1 ? '\\n' + repeat(' ', --space) + end : end);\n}\n\n/**\n * Test if a value is a buffer.\n *\n * @api private\n * @param {*} value The value to test.\n * @return {boolean} True if `value` is a buffer, otherwise false\n */\nexports.isBuffer = function(value) {\n  return typeof Buffer !== 'undefined' && Buffer.isBuffer(value);\n};\n\n/**\n * Return a new Thing that has the keys in sorted order. Recursive.\n *\n * If the Thing...\n * - has already been seen, return string `'[Circular]'`\n * - is `undefined`, return string `'[undefined]'`\n * - is `null`, return value `null`\n * - is some other primitive, return the value\n * - is not a primitive or an `Array`, `Object`, or `Function`, return the value of the Thing's `toString()` method\n * - is a non-empty `Array`, `Object`, or `Function`, return the result of calling this function again.\n * - is an empty `Array`, `Object`, or `Function`, return the result of calling `emptyRepresentation()`\n *\n * @api private\n * @see {@link exports.stringify}\n * @param {*} value Thing to inspect.  May or may not have properties.\n * @param {Array} [stack=[]] Stack of seen values\n * @return {(Object|Array|Function|string|undefined)}\n */\nexports.canonicalize = function(value, stack) {\n  var canonicalizedObj;\n  /* eslint-disable no-unused-vars */\n  var prop;\n  /* eslint-enable no-unused-vars */\n  var type = exports.type(value);\n  function withStack(value, fn) {\n    stack.push(value);\n    fn();\n    stack.pop();\n  }\n\n  stack = stack || [];\n\n  if (exports.indexOf(stack, value) !== -1) {\n    return '[Circular]';\n  }\n\n  switch (type) {\n    case 'undefined':\n    case 'buffer':\n    case 'null':\n      canonicalizedObj = value;\n      break;\n    case 'array':\n      withStack(value, function() {\n        canonicalizedObj = exports.map(value, function(item) {\n          return exports.canonicalize(item, stack);\n        });\n      });\n      break;\n    case 'function':\n      /* eslint-disable guard-for-in */\n      for (prop in value) {\n        canonicalizedObj = {};\n        break;\n      }\n      /* eslint-enable guard-for-in */\n      if (!canonicalizedObj) {\n        canonicalizedObj = emptyRepresentation(value, type);\n        break;\n      }\n    /* falls through */\n    case 'object':\n      canonicalizedObj = canonicalizedObj || {};\n      withStack(value, function() {\n        exports.forEach(exports.keys(value).sort(), function(key) {\n          canonicalizedObj[key] = exports.canonicalize(value[key], stack);\n        });\n      });\n      break;\n    case 'date':\n    case 'number':\n    case 'regexp':\n    case 'boolean':\n      canonicalizedObj = value;\n      break;\n    default:\n      canonicalizedObj = value + '';\n  }\n\n  return canonicalizedObj;\n};\n\n/**\n * Lookup file names at the given `path`.\n *\n * @api public\n * @param {string} path Base path to start searching from.\n * @param {string[]} extensions File extensions to look for.\n * @param {boolean} recursive Whether or not to recurse into subdirectories.\n * @return {string[]} An array of paths.\n */\nexports.lookupFiles = function lookupFiles(path, extensions, recursive) {\n  var files = [];\n  var re = new RegExp('\\\\.(' + extensions.join('|') + ')$');\n\n  if (!exists(path)) {\n    if (exists(path + '.js')) {\n      path += '.js';\n    } else {\n      files = glob.sync(path);\n      if (!files.length) {\n        throw new Error(\"cannot resolve path (or pattern) '\" + path + \"'\");\n      }\n      return files;\n    }\n  }\n\n  try {\n    var stat = statSync(path);\n    if (stat.isFile()) {\n      return path;\n    }\n  } catch (err) {\n    // ignore error\n    return;\n  }\n\n  readdirSync(path).forEach(function(file) {\n    file = join(path, file);\n    try {\n      var stat = statSync(file);\n      if (stat.isDirectory()) {\n        if (recursive) {\n          files = files.concat(lookupFiles(file, extensions, recursive));\n        }\n        return;\n      }\n    } catch (err) {\n      // ignore error\n      return;\n    }\n    if (!stat.isFile() || !re.test(file) || basename(file)[0] === '.') {\n      return;\n    }\n    files.push(file);\n  });\n\n  return files;\n};\n\n/**\n * Generate an undefined error with a message warning the user.\n *\n * @return {Error}\n */\n\nexports.undefinedError = function() {\n  return new Error('Caught undefined error, did you throw without specifying what?');\n};\n\n/**\n * Generate an undefined error if `err` is not defined.\n *\n * @param {Error} err\n * @return {Error}\n */\n\nexports.getError = function(err) {\n  return err || exports.undefinedError();\n};\n\n/**\n * @summary\n * This Filter based on `mocha-clean` module.(see: `github.com/rstacruz/mocha-clean`)\n * @description\n * When invoking this function you get a filter function that get the Error.stack as an input,\n * and return a prettify output.\n * (i.e: strip Mocha and internal node functions from stack trace).\n * @returns {Function}\n */\nexports.stackTraceFilter = function() {\n  // TODO: Replace with `process.browser`\n  var slash = '/';\n  var is = typeof document === 'undefined' ? { node: true } : { browser: true };\n  var cwd = is.node\n      ? process.cwd() + slash\n      : (typeof location === 'undefined' ? window.location : location).href.replace(/\\/[^\\/]*$/, '/');\n\n  function isMochaInternal(line) {\n    return (~line.indexOf('node_modules' + slash + 'mocha' + slash))\n      || (~line.indexOf('components' + slash + 'mochajs' + slash))\n      || (~line.indexOf('components' + slash + 'mocha' + slash))\n      || (~line.indexOf(slash + 'mocha.js'));\n  }\n\n  function isNodeInternal(line) {\n    return (~line.indexOf('(timers.js:'))\n      || (~line.indexOf('(events.js:'))\n      || (~line.indexOf('(node.js:'))\n      || (~line.indexOf('(module.js:'))\n      || (~line.indexOf('GeneratorFunctionPrototype.next (native)'))\n      || false;\n  }\n\n  return function(stack) {\n    stack = stack.split('\\n');\n\n    stack = exports.reduce(stack, function(list, line) {\n      if (isMochaInternal(line)) {\n        return list;\n      }\n\n      if (is.node && isNodeInternal(line)) {\n        return list;\n      }\n\n      // Clean up cwd(absolute)\n      list.push(line.replace(cwd, ''));\n      return list;\n    }, []);\n\n    return stack.join('\\n');\n  };\n};\n","/**\n * Expose `Progress`.\n */\n\nmodule.exports = Progress;\n\n/**\n * Initialize a new `Progress` indicator.\n */\nfunction Progress() {\n  this.percent = 0;\n  this.size(0);\n  this.fontSize(11);\n  this.font('helvetica, arial, sans-serif');\n}\n\n/**\n * Set progress size to `size`.\n *\n * @api public\n * @param {number} size\n * @return {Progress} Progress instance.\n */\nProgress.prototype.size = function(size) {\n  this._size = size;\n  return this;\n};\n\n/**\n * Set text to `text`.\n *\n * @api public\n * @param {string} text\n * @return {Progress} Progress instance.\n */\nProgress.prototype.text = function(text) {\n  this._text = text;\n  return this;\n};\n\n/**\n * Set font size to `size`.\n *\n * @api public\n * @param {number} size\n * @return {Progress} Progress instance.\n */\nProgress.prototype.fontSize = function(size) {\n  this._fontSize = size;\n  return this;\n};\n\n/**\n * Set font to `family`.\n *\n * @param {string} family\n * @return {Progress} Progress instance.\n */\nProgress.prototype.font = function(family) {\n  this._font = family;\n  return this;\n};\n\n/**\n * Update percentage to `n`.\n *\n * @param {number} n\n * @return {Progress} Progress instance.\n */\nProgress.prototype.update = function(n) {\n  this.percent = n;\n  return this;\n};\n\n/**\n * Draw on `ctx`.\n *\n * @param {CanvasRenderingContext2d} ctx\n * @return {Progress} Progress instance.\n */\nProgress.prototype.draw = function(ctx) {\n  try {\n    var percent = Math.min(this.percent, 100);\n    var size = this._size;\n    var half = size / 2;\n    var x = half;\n    var y = half;\n    var rad = half - 1;\n    var fontSize = this._fontSize;\n\n    ctx.font = fontSize + 'px ' + this._font;\n\n    var angle = Math.PI * 2 * (percent / 100);\n    ctx.clearRect(0, 0, size, size);\n\n    // outer circle\n    ctx.strokeStyle = '#9f9f9f';\n    ctx.beginPath();\n    ctx.arc(x, y, rad, 0, angle, false);\n    ctx.stroke();\n\n    // inner circle\n    ctx.strokeStyle = '#eee';\n    ctx.beginPath();\n    ctx.arc(x, y, rad - 1, 0, angle, true);\n    ctx.stroke();\n\n    // text\n    var text = this._text || (percent | 0) + '%';\n    var w = ctx.measureText(text).width;\n\n    ctx.fillText(text, x - w / 2 + 1, y + fontSize / 2 - 1);\n  } catch (err) {\n    // don't fail if we can't render progress\n  }\n  return this;\n};\n","/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar diff = require('diff');\nvar ms = require('../ms');\nvar utils = require('../utils');\nvar supportsColor = process.browser ? null : require('supports-color');\n\n/**\n * Expose `Base`.\n */\n\nexports = module.exports = Base;\n\n/**\n * Save timer references to avoid Sinon interfering.\n * See: https://github.com/mochajs/mocha/issues/237\n */\n\n/* eslint-disable no-unused-vars, no-native-reassign */\nvar Date = global.Date;\nvar setTimeout = global.setTimeout;\nvar setInterval = global.setInterval;\nvar clearTimeout = global.clearTimeout;\nvar clearInterval = global.clearInterval;\n/* eslint-enable no-unused-vars, no-native-reassign */\n\n/**\n * Check if both stdio streams are associated with a tty.\n */\n\nvar isatty = tty.isatty(1) && tty.isatty(2);\n\n/**\n * Enable coloring by default, except in the browser interface.\n */\n\nexports.useColors = !process.browser && (supportsColor || (process.env.MOCHA_COLORS !== undefined));\n\n/**\n * Inline diffs instead of +/-\n */\n\nexports.inlineDiffs = false;\n\n/**\n * Default color map.\n */\n\nexports.colors = {\n  pass: 90,\n  fail: 31,\n  'bright pass': 92,\n  'bright fail': 91,\n  'bright yellow': 93,\n  pending: 36,\n  suite: 0,\n  'error title': 0,\n  'error message': 31,\n  'error stack': 90,\n  checkmark: 32,\n  fast: 90,\n  medium: 33,\n  slow: 31,\n  green: 32,\n  light: 90,\n  'diff gutter': 90,\n  'diff added': 32,\n  'diff removed': 31\n};\n\n/**\n * Default symbol map.\n */\n\nexports.symbols = {\n  ok: '✓',\n  err: '✖',\n  dot: '․'\n};\n\n// With node.js on Windows: use symbols available in terminal default fonts\nif (process.platform === 'win32') {\n  exports.symbols.ok = '\\u221A';\n  exports.symbols.err = '\\u00D7';\n  exports.symbols.dot = '.';\n}\n\n/**\n * Color `str` with the given `type`,\n * allowing colors to be disabled,\n * as well as user-defined color\n * schemes.\n *\n * @param {string} type\n * @param {string} str\n * @return {string}\n * @api private\n */\nvar color = exports.color = function(type, str) {\n  if (!exports.useColors) {\n    return String(str);\n  }\n  return '\\u001b[' + exports.colors[type] + 'm' + str + '\\u001b[0m';\n};\n\n/**\n * Expose term window size, with some defaults for when stderr is not a tty.\n */\n\nexports.window = {\n  width: 75\n};\n\nif (isatty) {\n  exports.window.width = process.stdout.getWindowSize\n      ? process.stdout.getWindowSize(1)[0]\n      : tty.getWindowSize()[1];\n}\n\n/**\n * Expose some basic cursor interactions that are common among reporters.\n */\n\nexports.cursor = {\n  hide: function() {\n    isatty && process.stdout.write('\\u001b[?25l');\n  },\n\n  show: function() {\n    isatty && process.stdout.write('\\u001b[?25h');\n  },\n\n  deleteLine: function() {\n    isatty && process.stdout.write('\\u001b[2K');\n  },\n\n  beginningOfLine: function() {\n    isatty && process.stdout.write('\\u001b[0G');\n  },\n\n  CR: function() {\n    if (isatty) {\n      exports.cursor.deleteLine();\n      exports.cursor.beginningOfLine();\n    } else {\n      process.stdout.write('\\r');\n    }\n  }\n};\n\n/**\n * Outut the given `failures` as a list.\n *\n * @param {Array} failures\n * @api public\n */\n\nexports.list = function(failures) {\n  console.log();\n  failures.forEach(function(test, i) {\n    // format\n    var fmt = color('error title', '  %s) %s:\\n')\n      + color('error message', '     %s')\n      + color('error stack', '\\n%s\\n');\n\n    // msg\n    var msg;\n    var err = test.err;\n    var message;\n    if (err.message) {\n      message = err.message;\n    } else if (typeof err.inspect === 'function') {\n      message = err.inspect() + '';\n    } else {\n      message = '';\n    }\n    var stack = err.stack || message;\n    var index = stack.indexOf(message);\n    var actual = err.actual;\n    var expected = err.expected;\n    var escape = true;\n\n    if (index === -1) {\n      msg = message;\n    } else {\n      index += message.length;\n      msg = stack.slice(0, index);\n      // remove msg from stack\n      stack = stack.slice(index + 1);\n    }\n\n    // uncaught\n    if (err.uncaught) {\n      msg = 'Uncaught ' + msg;\n    }\n    // explicitly show diff\n    if (err.showDiff !== false && sameType(actual, expected) && expected !== undefined) {\n      escape = false;\n      if (!(utils.isString(actual) && utils.isString(expected))) {\n        err.actual = actual = utils.stringify(actual);\n        err.expected = expected = utils.stringify(expected);\n      }\n\n      fmt = color('error title', '  %s) %s:\\n%s') + color('error stack', '\\n%s\\n');\n      var match = message.match(/^([^:]+): expected/);\n      msg = '\\n      ' + color('error message', match ? match[1] : msg);\n\n      if (exports.inlineDiffs) {\n        msg += inlineDiff(err, escape);\n      } else {\n        msg += unifiedDiff(err, escape);\n      }\n    }\n\n    // indent stack trace\n    stack = stack.replace(/^/gm, '  ');\n\n    console.log(fmt, (i + 1), test.fullTitle(), msg, stack);\n  });\n};\n\n/**\n * Initialize a new `Base` reporter.\n *\n * All other reporters generally\n * inherit from this reporter, providing\n * stats such as test duration, number\n * of tests passed / failed etc.\n *\n * @param {Runner} runner\n * @api public\n */\n\nfunction Base(runner) {\n  var stats = this.stats = { suites: 0, tests: 0, passes: 0, pending: 0, failures: 0 };\n  var failures = this.failures = [];\n\n  if (!runner) {\n    return;\n  }\n  this.runner = runner;\n\n  runner.stats = stats;\n\n  runner.on('start', function() {\n    stats.start = new Date();\n  });\n\n  runner.on('suite', function(suite) {\n    stats.suites = stats.suites || 0;\n    suite.root || stats.suites++;\n  });\n\n  runner.on('test end', function() {\n    stats.tests = stats.tests || 0;\n    stats.tests++;\n  });\n\n  runner.on('pass', function(test) {\n    stats.passes = stats.passes || 0;\n\n    if (test.duration > test.slow()) {\n      test.speed = 'slow';\n    } else if (test.duration > test.slow() / 2) {\n      test.speed = 'medium';\n    } else {\n      test.speed = 'fast';\n    }\n\n    stats.passes++;\n  });\n\n  runner.on('fail', function(test, err) {\n    stats.failures = stats.failures || 0;\n    stats.failures++;\n    test.err = err;\n    failures.push(test);\n  });\n\n  runner.on('end', function() {\n    stats.end = new Date();\n    stats.duration = new Date() - stats.start;\n  });\n\n  runner.on('pending', function() {\n    stats.pending++;\n  });\n}\n\n/**\n * Output common epilogue used by many of\n * the bundled reporters.\n *\n * @api public\n */\nBase.prototype.epilogue = function() {\n  var stats = this.stats;\n  var fmt;\n\n  console.log();\n\n  // passes\n  fmt = color('bright pass', ' ')\n    + color('green', ' %d passing')\n    + color('light', ' (%s)');\n\n  console.log(fmt,\n    stats.passes || 0,\n    ms(stats.duration));\n\n  // pending\n  if (stats.pending) {\n    fmt = color('pending', ' ')\n      + color('pending', ' %d pending');\n\n    console.log(fmt, stats.pending);\n  }\n\n  // failures\n  if (stats.failures) {\n    fmt = color('fail', '  %d failing');\n\n    console.log(fmt, stats.failures);\n\n    Base.list(this.failures);\n    console.log();\n  }\n\n  console.log();\n};\n\n/**\n * Pad the given `str` to `len`.\n *\n * @api private\n * @param {string} str\n * @param {string} len\n * @return {string}\n */\nfunction pad(str, len) {\n  str = String(str);\n  return Array(len - str.length + 1).join(' ') + str;\n}\n\n/**\n * Returns an inline diff between 2 strings with coloured ANSI output\n *\n * @api private\n * @param {Error} err with actual/expected\n * @param {boolean} escape\n * @return {string} Diff\n */\nfunction inlineDiff(err, escape) {\n  var msg = errorDiff(err, 'WordsWithSpace', escape);\n\n  // linenos\n  var lines = msg.split('\\n');\n  if (lines.length > 4) {\n    var width = String(lines.length).length;\n    msg = lines.map(function(str, i) {\n      return pad(++i, width) + ' |' + ' ' + str;\n    }).join('\\n');\n  }\n\n  // legend\n  msg = '\\n'\n    + color('diff removed', 'actual')\n    + ' '\n    + color('diff added', 'expected')\n    + '\\n\\n'\n    + msg\n    + '\\n';\n\n  // indent\n  msg = msg.replace(/^/gm, '      ');\n  return msg;\n}\n\n/**\n * Returns a unified diff between two strings.\n *\n * @api private\n * @param {Error} err with actual/expected\n * @param {boolean} escape\n * @return {string} The diff.\n */\nfunction unifiedDiff(err, escape) {\n  var indent = '      ';\n  function cleanUp(line) {\n    if (escape) {\n      line = escapeInvisibles(line);\n    }\n    if (line[0] === '+') {\n      return indent + colorLines('diff added', line);\n    }\n    if (line[0] === '-') {\n      return indent + colorLines('diff removed', line);\n    }\n    if (line.match(/\\@\\@/)) {\n      return null;\n    }\n    if (line.match(/\\\\ No newline/)) {\n      return null;\n    }\n    return indent + line;\n  }\n  function notBlank(line) {\n    return typeof line !== 'undefined' && line !== null;\n  }\n  var msg = diff.createPatch('string', err.actual, err.expected);\n  var lines = msg.split('\\n').splice(4);\n  return '\\n      '\n    + colorLines('diff added', '+ expected') + ' '\n    + colorLines('diff removed', '- actual')\n    + '\\n\\n'\n    + lines.map(cleanUp).filter(notBlank).join('\\n');\n}\n\n/**\n * Return a character diff for `err`.\n *\n * @api private\n * @param {Error} err\n * @param {string} type\n * @param {boolean} escape\n * @return {string}\n */\nfunction errorDiff(err, type, escape) {\n  var actual = escape ? escapeInvisibles(err.actual) : err.actual;\n  var expected = escape ? escapeInvisibles(err.expected) : err.expected;\n  return diff['diff' + type](actual, expected).map(function(str) {\n    if (str.added) {\n      return colorLines('diff added', str.value);\n    }\n    if (str.removed) {\n      return colorLines('diff removed', str.value);\n    }\n    return str.value;\n  }).join('');\n}\n\n/**\n * Returns a string with all invisible characters in plain text\n *\n * @api private\n * @param {string} line\n * @return {string}\n */\nfunction escapeInvisibles(line) {\n  return line.replace(/\\t/g, '<tab>')\n    .replace(/\\r/g, '<CR>')\n    .replace(/\\n/g, '<LF>\\n');\n}\n\n/**\n * Color lines for `str`, using the color `name`.\n *\n * @api private\n * @param {string} name\n * @param {string} str\n * @return {string}\n */\nfunction colorLines(name, str) {\n  return str.split('\\n').map(function(str) {\n    return color(name, str);\n  }).join('\\n');\n}\n\n/**\n * Object#toString reference.\n */\nvar objToString = Object.prototype.toString;\n\n/**\n * Check that a / b have the same type.\n *\n * @api private\n * @param {Object} a\n * @param {Object} b\n * @return {boolean}\n */\nfunction sameType(a, b) {\n  return objToString.call(a) === objToString.call(b);\n}\n","exports.name = \"meteor-node-stubs\";\nexports.version = \"0.2.1\";\nexports.main = \"index.js\";\n","var map = require(\"./map.json\");\nvar meteorAliases = {};\n\nObject.keys(map).forEach(function (id) {\n  if (typeof map[id] === \"string\") {\n    try {\n      exports[id] = meteorAliases[id + \".js\"] =\n        require.resolve(map[id]);\n    } catch (e) {\n      // Resolution can fail at runtime if the stub was not included in the\n      // bundle because nothing depended on it.\n    }\n  } else {\n    exports[id] = map[id];\n    meteorAliases[id + \".js\"] = function(){};\n  }\n});\n\nif (typeof meteorInstall === \"function\") {\n  meteorInstall({\n    // Install the aliases into a node_modules directory one level up from\n    // the root directory, so that they do not clutter the namespace\n    // available to apps and packages.\n    \"..\": {\n      node_modules: meteorAliases\n    }\n  });\n}\n","module.exports = {\n  \"assert\": \"assert/\",\n  \"buffer\": \"buffer/\",\n  \"child_process\": null,\n  \"cluster\": null,\n  \"console\": \"console-browserify\",\n  \"constants\": \"constants-browserify\",\n  \"crypto\": \"crypto-browserify\",\n  \"dgram\": null,\n  \"dns\": null,\n  \"domain\": \"domain-browser\",\n  \"events\": \"events/\",\n  \"fs\": null,\n  \"http\": \"http-browserify\",\n  \"https\": \"https-browserify\",\n  \"module\": null,\n  \"net\": null,\n  \"os\": \"os-browserify/browser.js\",\n  \"path\": \"path-browserify\",\n  \"process\": \"process/browser.js\",\n  \"punycode\": \"punycode/\",\n  \"querystring\": \"querystring-es3/\",\n  \"readline\": null,\n  \"repl\": null,\n  \"stream\": \"stream-browserify\",\n  \"_stream_duplex\": \"readable-stream/duplex.js\",\n  \"_stream_passthrough\": \"readable-stream/passthrough.js\",\n  \"_stream_readable\": \"readable-stream/readable.js\",\n  \"_stream_transform\": \"readable-stream/transform.js\",\n  \"_stream_writable\": \"readable-stream/writable.js\",\n  \"string_decoder\": \"string_decoder/\",\n  \"sys\": \"util/util.js\",\n  \"timers\": \"timers-browserify\",\n  \"tls\": null,\n  \"tty\": \"tty-browserify\",\n  \"url\": \"url/\",\n  \"util\": \"util/util.js\",\n  \"vm\": \"vm-browserify\",\n  \"zlib\": \"browserify-zlib\"\n};\n","exports.name = \"underscore\";\nexports.version = \"1.8.3\";\nexports.main = \"underscore.js\";\n","//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n","/**\n * Module dependencies.\n */\n\nvar Runnable = require('./runnable');\nvar inherits = require('./utils').inherits;\n\n/**\n * Expose `Test`.\n */\n\nmodule.exports = Test;\n\n/**\n * Initialize a new `Test` with the given `title` and callback `fn`.\n *\n * @api private\n * @param {String} title\n * @param {Function} fn\n */\nfunction Test(title, fn) {\n  Runnable.call(this, title, fn);\n  this.pending = !fn;\n  this.type = 'test';\n  this.body = (fn || '').toString();\n}\n\n/**\n * Inherit from `Runnable.prototype`.\n */\ninherits(Test, Runnable);\n\nTest.prototype.clone = function() {\n  var test = new Test(this.title, this.fn);\n  test.timeout(this.timeout());\n  test.slow(this.slow());\n  test.enableTimeouts(this.enableTimeouts());\n  test.retries(this.retries());\n  test.currentRetry(this.currentRetry());\n  test.globals(this.globals());\n  test.parent = this.parent;\n  test.file = this.file;\n  test.ctx = this.ctx;\n  return test;\n};\n","/**\n * Module dependencies.\n */\n\nvar EventEmitter = require('events').EventEmitter;\nvar Pending = require('./pending');\nvar debug = require('debug')('mocha:runnable');\nvar milliseconds = require('./ms');\nvar utils = require('./utils');\nvar inherits = utils.inherits;\n\n/**\n * Save timer references to avoid Sinon interfering (see GH-237).\n */\n\n/* eslint-disable no-unused-vars, no-native-reassign */\nvar Date = global.Date;\nvar setTimeout = global.setTimeout;\nvar setInterval = global.setInterval;\nvar clearTimeout = global.clearTimeout;\nvar clearInterval = global.clearInterval;\n/* eslint-enable no-unused-vars, no-native-reassign */\n\n/**\n * Object#toString().\n */\n\nvar toString = Object.prototype.toString;\n\n/**\n * Expose `Runnable`.\n */\n\nmodule.exports = Runnable;\n\n/**\n * Initialize a new `Runnable` with the given `title` and callback `fn`.\n *\n * @param {String} title\n * @param {Function} fn\n * @api private\n * @param {string} title\n * @param {Function} fn\n */\nfunction Runnable(title, fn) {\n  this.title = title;\n  this.fn = fn;\n  this.async = fn && fn.length;\n  this.sync = !this.async;\n  this._timeout = 2000;\n  this._slow = 75;\n  this._enableTimeouts = true;\n  this.timedOut = false;\n  this._trace = new Error('done() called multiple times');\n  this._retries = -1;\n  this._currentRetry = 0;\n}\n\n/**\n * Inherit from `EventEmitter.prototype`.\n */\ninherits(Runnable, EventEmitter);\n\n/**\n * Set & get timeout `ms`.\n *\n * @api private\n * @param {number|string} ms\n * @return {Runnable|number} ms or Runnable instance.\n */\nRunnable.prototype.timeout = function(ms) {\n  if (!arguments.length) {\n    return this._timeout;\n  }\n  if (ms === 0) {\n    this._enableTimeouts = false;\n  }\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  }\n  debug('timeout %d', ms);\n  this._timeout = ms;\n  if (this.timer) {\n    this.resetTimeout();\n  }\n  return this;\n};\n\n/**\n * Set & get slow `ms`.\n *\n * @api private\n * @param {number|string} ms\n * @return {Runnable|number} ms or Runnable instance.\n */\nRunnable.prototype.slow = function(ms) {\n  if (!arguments.length) {\n    return this._slow;\n  }\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  }\n  debug('timeout %d', ms);\n  this._slow = ms;\n  return this;\n};\n\n/**\n * Set and get whether timeout is `enabled`.\n *\n * @api private\n * @param {boolean} enabled\n * @return {Runnable|boolean} enabled or Runnable instance.\n */\nRunnable.prototype.enableTimeouts = function(enabled) {\n  if (!arguments.length) {\n    return this._enableTimeouts;\n  }\n  debug('enableTimeouts %s', enabled);\n  this._enableTimeouts = enabled;\n  return this;\n};\n\n/**\n * Halt and mark as pending.\n *\n * @api private\n */\nRunnable.prototype.skip = function() {\n  throw new Pending();\n};\n\n/**\n * Set number of retries.\n *\n * @api private\n */\nRunnable.prototype.retries = function(n) {\n  if (!arguments.length) {\n    return this._retries;\n  }\n  this._retries = n;\n};\n\n/**\n * Get current retry\n *\n * @api private\n */\nRunnable.prototype.currentRetry = function(n) {\n  if (!arguments.length) {\n    return this._currentRetry;\n  }\n  this._currentRetry = n;\n};\n\n/**\n * Return the full title generated by recursively concatenating the parent's\n * full title.\n *\n * @api public\n * @return {string}\n */\nRunnable.prototype.fullTitle = function() {\n  return this.parent.fullTitle() + ' ' + this.title;\n};\n\n/**\n * Clear the timeout.\n *\n * @api private\n */\nRunnable.prototype.clearTimeout = function() {\n  clearTimeout(this.timer);\n};\n\n/**\n * Inspect the runnable void of private properties.\n *\n * @api private\n * @return {string}\n */\nRunnable.prototype.inspect = function() {\n  return JSON.stringify(this, function(key, val) {\n    if (key[0] === '_') {\n      return;\n    }\n    if (key === 'parent') {\n      return '#<Suite>';\n    }\n    if (key === 'ctx') {\n      return '#<Context>';\n    }\n    return val;\n  }, 2);\n};\n\n/**\n * Reset the timeout.\n *\n * @api private\n */\nRunnable.prototype.resetTimeout = function() {\n  var self = this;\n  var ms = this.timeout() || 1e9;\n\n  if (!this._enableTimeouts) {\n    return;\n  }\n  this.clearTimeout();\n  this.timer = setTimeout(function() {\n    if (!self._enableTimeouts) {\n      return;\n    }\n    self.callback(new Error('timeout of ' + ms + 'ms exceeded. Ensure the done() callback is being called in this test.'));\n    self.timedOut = true;\n  }, ms);\n};\n\n/**\n * Whitelist a list of globals for this test run.\n *\n * @api private\n * @param {string[]} globals\n */\nRunnable.prototype.globals = function(globals) {\n  if (!arguments.length) {\n    return this._allowedGlobals;\n  }\n  this._allowedGlobals = globals;\n};\n\n/**\n * Run the test and invoke `fn(err)`.\n *\n * @param {Function} fn\n * @api private\n */\nRunnable.prototype.run = function(fn) {\n  var self = this;\n  var start = new Date();\n  var ctx = this.ctx;\n  var finished;\n  var emitted;\n\n  // Sometimes the ctx exists, but it is not runnable\n  if (ctx && ctx.runnable) {\n    ctx.runnable(this);\n  }\n\n  // called multiple times\n  function multiple(err) {\n    if (emitted) {\n      return;\n    }\n    emitted = true;\n    self.emit('error', err || new Error('done() called multiple times; stacktrace may be inaccurate'));\n  }\n\n  // finished\n  function done(err) {\n    var ms = self.timeout();\n    if (self.timedOut) {\n      return;\n    }\n    if (finished) {\n      return multiple(err || self._trace);\n    }\n\n    self.clearTimeout();\n    self.duration = new Date() - start;\n    finished = true;\n    if (!err && self.duration > ms && self._enableTimeouts) {\n      err = new Error('timeout of ' + ms + 'ms exceeded. Ensure the done() callback is being called in this test.');\n    }\n    fn(err);\n  }\n\n  // for .resetTimeout()\n  this.callback = done;\n\n  // explicit async with `done` argument\n  if (this.async) {\n    this.resetTimeout();\n\n    if (this.allowUncaught) {\n      return callFnAsync(this.fn);\n    }\n    try {\n      callFnAsync(this.fn);\n    } catch (err) {\n      done(utils.getError(err));\n    }\n    return;\n  }\n\n  if (this.allowUncaught) {\n    callFn(this.fn);\n    done();\n    return;\n  }\n\n  // sync or promise-returning\n  try {\n    if (this.pending) {\n      done();\n    } else {\n      callFn(this.fn);\n    }\n  } catch (err) {\n    done(utils.getError(err));\n  }\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result\n        .then(function() {\n          done();\n          // Return null so libraries like bluebird do not warn about\n          // subsequently constructed Promises.\n          return null;\n        },\n        function(reason) {\n          done(reason || new Error('Promise rejected with no or falsy reason'));\n        });\n    } else {\n      if (self.asyncOnly) {\n        return done(new Error('--async-only option in use without declaring `done()` or returning a promise'));\n      }\n\n      done();\n    }\n  }\n\n  function callFnAsync(fn) {\n    fn.call(ctx, function(err) {\n      if (err instanceof Error || toString.call(err) === '[object Error]') {\n        return done(err);\n      }\n      if (err) {\n        if (Object.prototype.toString.call(err) === '[object Object]') {\n          return done(new Error('done() invoked with non-Error: '\n            + JSON.stringify(err)));\n        }\n        return done(new Error('done() invoked with non-Error: ' + err));\n      }\n      done();\n    });\n  }\n};\n","\n/**\n * Expose `Pending`.\n */\n\nmodule.exports = Pending;\n\n/**\n * Initialize a new `Pending` error with the given message.\n *\n * @param {string} message\n */\nfunction Pending(message) {\n  this.message = message;\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @api public\n * @param {string|number} val\n * @param {Object} options\n * @return {string|number}\n */\nmodule.exports = function(val, options) {\n  options = options || {};\n  if (typeof val === 'string') {\n    return parse(val);\n  }\n  // https://github.com/mochajs/mocha/pull/1035\n  return options['long'] ? longFormat(val) : shortFormat(val);\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @api private\n * @param {string} str\n * @return {number}\n */\nfunction parse(str) {\n  var match = (/^((?:\\d+)?\\.?\\d+) *(ms|seconds?|s|minutes?|m|hours?|h|days?|d|years?|y)?$/i).exec(str);\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 's':\n      return n * s;\n    case 'ms':\n      return n;\n    default:\n      // No default case\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @api private\n * @param {number} ms\n * @return {string}\n */\nfunction shortFormat(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @api private\n * @param {number} ms\n * @return {string}\n */\nfunction longFormat(ms) {\n  return plural(ms, d, 'day')\n    || plural(ms, h, 'hour')\n    || plural(ms, m, 'minute')\n    || plural(ms, s, 'second')\n    || ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n *\n * @api private\n * @param {number} ms\n * @param {number} n\n * @param {string} name\n */\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","/* eslint-env browser */\n\n/**\n * Module dependencies.\n */\n\nvar basename = require('path').basename;\nvar debug = require('debug')('mocha:watch');\nvar exists = require('fs').existsSync || require('path').existsSync;\nvar glob = require('glob');\nvar join = require('path').join;\nvar readdirSync = require('fs').readdirSync;\nvar statSync = require('fs').statSync;\nvar watchFile = require('fs').watchFile;\n\n/**\n * Ignored directories.\n */\n\nvar ignore = ['node_modules', '.git'];\n\nexports.inherits = require('util').inherits;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @api private\n * @param  {string} html\n * @return {string}\n */\nexports.escape = function(html) {\n  return String(html)\n    .replace(/&/g, '&amp;')\n    .replace(/\"/g, '&quot;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;');\n};\n\n/**\n * Array#forEach (<=IE8)\n *\n * @api private\n * @param {Array} arr\n * @param {Function} fn\n * @param {Object} scope\n */\nexports.forEach = function(arr, fn, scope) {\n  for (var i = 0, l = arr.length; i < l; i++) {\n    fn.call(scope, arr[i], i);\n  }\n};\n\n/**\n * Test if the given obj is type of string.\n *\n * @api private\n * @param {Object} obj\n * @return {boolean}\n */\nexports.isString = function(obj) {\n  return typeof obj === 'string';\n};\n\n/**\n * Array#map (<=IE8)\n *\n * @api private\n * @param {Array} arr\n * @param {Function} fn\n * @param {Object} scope\n * @return {Array}\n */\nexports.map = function(arr, fn, scope) {\n  var result = [];\n  for (var i = 0, l = arr.length; i < l; i++) {\n    result.push(fn.call(scope, arr[i], i, arr));\n  }\n  return result;\n};\n\n/**\n * Array#indexOf (<=IE8)\n *\n * @api private\n * @param {Array} arr\n * @param {Object} obj to find index of\n * @param {number} start\n * @return {number}\n */\nexports.indexOf = function(arr, obj, start) {\n  for (var i = start || 0, l = arr.length; i < l; i++) {\n    if (arr[i] === obj) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n/**\n * Array#reduce (<=IE8)\n *\n * @api private\n * @param {Array} arr\n * @param {Function} fn\n * @param {Object} val Initial value.\n * @return {*}\n */\nexports.reduce = function(arr, fn, val) {\n  var rval = val;\n\n  for (var i = 0, l = arr.length; i < l; i++) {\n    rval = fn(rval, arr[i], i, arr);\n  }\n\n  return rval;\n};\n\n/**\n * Array#filter (<=IE8)\n *\n * @api private\n * @param {Array} arr\n * @param {Function} fn\n * @return {Array}\n */\nexports.filter = function(arr, fn) {\n  var ret = [];\n\n  for (var i = 0, l = arr.length; i < l; i++) {\n    var val = arr[i];\n    if (fn(val, i, arr)) {\n      ret.push(val);\n    }\n  }\n\n  return ret;\n};\n\n/**\n * Object.keys (<=IE8)\n *\n * @api private\n * @param {Object} obj\n * @return {Array} keys\n */\nexports.keys = typeof Object.keys === 'function' ? Object.keys : function(obj) {\n  var keys = [];\n  var has = Object.prototype.hasOwnProperty; // for `window` on <=IE8\n\n  for (var key in obj) {\n    if (has.call(obj, key)) {\n      keys.push(key);\n    }\n  }\n\n  return keys;\n};\n\n/**\n * Watch the given `files` for changes\n * and invoke `fn(file)` on modification.\n *\n * @api private\n * @param {Array} files\n * @param {Function} fn\n */\nexports.watch = function(files, fn) {\n  var options = { interval: 100 };\n  files.forEach(function(file) {\n    debug('file %s', file);\n    watchFile(file, options, function(curr, prev) {\n      if (prev.mtime < curr.mtime) {\n        fn(file);\n      }\n    });\n  });\n};\n\n/**\n * Array.isArray (<=IE8)\n *\n * @api private\n * @param {Object} obj\n * @return {Boolean}\n */\nvar isArray = typeof Array.isArray === 'function' ? Array.isArray : function(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]';\n};\n\nexports.isArray = isArray;\n\n/**\n * Buffer.prototype.toJSON polyfill.\n *\n * @type {Function}\n */\nif (typeof Buffer !== 'undefined' && Buffer.prototype) {\n  Buffer.prototype.toJSON = Buffer.prototype.toJSON || function() {\n    return Array.prototype.slice.call(this, 0);\n  };\n}\n\n/**\n * Ignored files.\n *\n * @api private\n * @param {string} path\n * @return {boolean}\n */\nfunction ignored(path) {\n  return !~ignore.indexOf(path);\n}\n\n/**\n * Lookup files in the given `dir`.\n *\n * @api private\n * @param {string} dir\n * @param {string[]} [ext=['.js']]\n * @param {Array} [ret=[]]\n * @return {Array}\n */\nexports.files = function(dir, ext, ret) {\n  ret = ret || [];\n  ext = ext || ['js'];\n\n  var re = new RegExp('\\\\.(' + ext.join('|') + ')$');\n\n  readdirSync(dir)\n    .filter(ignored)\n    .forEach(function(path) {\n      path = join(dir, path);\n      if (statSync(path).isDirectory()) {\n        exports.files(path, ext, ret);\n      } else if (path.match(re)) {\n        ret.push(path);\n      }\n    });\n\n  return ret;\n};\n\n/**\n * Compute a slug from the given `str`.\n *\n * @api private\n * @param {string} str\n * @return {string}\n */\nexports.slug = function(str) {\n  return str\n    .toLowerCase()\n    .replace(/ +/g, '-')\n    .replace(/[^-\\w]/g, '');\n};\n\n/**\n * Strip the function definition from `str`, and re-indent for pre whitespace.\n *\n * @param {string} str\n * @return {string}\n */\nexports.clean = function(str) {\n  str = str\n    .replace(/\\r\\n?|[\\n\\u2028\\u2029]/g, '\\n').replace(/^\\uFEFF/, '')\n    .replace(/^function *\\(.*\\)\\s*\\{|\\(.*\\) *=> *\\{?/, '')\n    .replace(/\\s+\\}$/, '');\n\n  var spaces = str.match(/^\\n?( *)/)[1].length;\n  var tabs = str.match(/^\\n?(\\t*)/)[1].length;\n  var re = new RegExp('^\\n?' + (tabs ? '\\t' : ' ') + '{' + (tabs ? tabs : spaces) + '}', 'gm');\n\n  str = str.replace(re, '');\n\n  return exports.trim(str);\n};\n\n/**\n * Trim the given `str`.\n *\n * @api private\n * @param {string} str\n * @return {string}\n */\nexports.trim = function(str) {\n  return str.replace(/^\\s+|\\s+$/g, '');\n};\n\n/**\n * Parse the given `qs`.\n *\n * @api private\n * @param {string} qs\n * @return {Object}\n */\nexports.parseQuery = function(qs) {\n  return exports.reduce(qs.replace('?', '').split('&'), function(obj, pair) {\n    var i = pair.indexOf('=');\n    var key = pair.slice(0, i);\n    var val = pair.slice(++i);\n\n    obj[key] = decodeURIComponent(val);\n    return obj;\n  }, {});\n};\n\n/**\n * Highlight the given string of `js`.\n *\n * @api private\n * @param {string} js\n * @return {string}\n */\nfunction highlight(js) {\n  return js\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\\/\\/(.*)/gm, '<span class=\"comment\">//$1</span>')\n    .replace(/('.*?')/gm, '<span class=\"string\">$1</span>')\n    .replace(/(\\d+\\.\\d+)/gm, '<span class=\"number\">$1</span>')\n    .replace(/(\\d+)/gm, '<span class=\"number\">$1</span>')\n    .replace(/\\bnew[ \\t]+(\\w+)/gm, '<span class=\"keyword\">new</span> <span class=\"init\">$1</span>')\n    .replace(/\\b(function|new|throw|return|var|if|else)\\b/gm, '<span class=\"keyword\">$1</span>');\n}\n\n/**\n * Highlight the contents of tag `name`.\n *\n * @api private\n * @param {string} name\n */\nexports.highlightTags = function(name) {\n  var code = document.getElementById('mocha').getElementsByTagName(name);\n  for (var i = 0, len = code.length; i < len; ++i) {\n    code[i].innerHTML = highlight(code[i].innerHTML);\n  }\n};\n\n/**\n * If a value could have properties, and has none, this function is called,\n * which returns a string representation of the empty value.\n *\n * Functions w/ no properties return `'[Function]'`\n * Arrays w/ length === 0 return `'[]'`\n * Objects w/ no properties return `'{}'`\n * All else: return result of `value.toString()`\n *\n * @api private\n * @param {*} value The value to inspect.\n * @param {string} [type] The type of the value, if known.\n * @returns {string}\n */\nfunction emptyRepresentation(value, type) {\n  type = type || exports.type(value);\n\n  switch (type) {\n    case 'function':\n      return '[Function]';\n    case 'object':\n      return '{}';\n    case 'array':\n      return '[]';\n    default:\n      return value.toString();\n  }\n}\n\n/**\n * Takes some variable and asks `Object.prototype.toString()` what it thinks it\n * is.\n *\n * @api private\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\n * @param {*} value The value to test.\n * @returns {string}\n * @example\n * type({}) // 'object'\n * type([]) // 'array'\n * type(1) // 'number'\n * type(false) // 'boolean'\n * type(Infinity) // 'number'\n * type(null) // 'null'\n * type(new Date()) // 'date'\n * type(/foo/) // 'regexp'\n * type('type') // 'string'\n * type(global) // 'global'\n */\nexports.type = function type(value) {\n  if (value === undefined) {\n    return 'undefined';\n  } else if (value === null) {\n    return 'null';\n  } else if (typeof Buffer !== 'undefined' && Buffer.isBuffer(value)) {\n    return 'buffer';\n  }\n  return Object.prototype.toString.call(value)\n    .replace(/^\\[.+\\s(.+?)\\]$/, '$1')\n    .toLowerCase();\n};\n\n/**\n * Stringify `value`. Different behavior depending on type of value:\n *\n * - If `value` is undefined or null, return `'[undefined]'` or `'[null]'`, respectively.\n * - If `value` is not an object, function or array, return result of `value.toString()` wrapped in double-quotes.\n * - If `value` is an *empty* object, function, or array, return result of function\n *   {@link emptyRepresentation}.\n * - If `value` has properties, call {@link exports.canonicalize} on it, then return result of\n *   JSON.stringify().\n *\n * @api private\n * @see exports.type\n * @param {*} value\n * @return {string}\n */\nexports.stringify = function(value) {\n  var type = exports.type(value);\n\n  if (!~exports.indexOf(['object', 'array', 'function'], type)) {\n    if (type !== 'buffer') {\n      return jsonStringify(value);\n    }\n    var json = value.toJSON();\n    // Based on the toJSON result\n    return jsonStringify(json.data && json.type ? json.data : json, 2)\n      .replace(/,(\\n|$)/g, '$1');\n  }\n\n  for (var prop in value) {\n    if (Object.prototype.hasOwnProperty.call(value, prop)) {\n      return jsonStringify(exports.canonicalize(value), 2).replace(/,(\\n|$)/g, '$1');\n    }\n  }\n\n  return emptyRepresentation(value, type);\n};\n\n/**\n * like JSON.stringify but more sense.\n *\n * @api private\n * @param {Object}  object\n * @param {number=} spaces\n * @param {number=} depth\n * @returns {*}\n */\nfunction jsonStringify(object, spaces, depth) {\n  if (typeof spaces === 'undefined') {\n    // primitive types\n    return _stringify(object);\n  }\n\n  depth = depth || 1;\n  var space = spaces * depth;\n  var str = isArray(object) ? '[' : '{';\n  var end = isArray(object) ? ']' : '}';\n  var length = object.length || exports.keys(object).length;\n  // `.repeat()` polyfill\n  function repeat(s, n) {\n    return new Array(n).join(s);\n  }\n\n  function _stringify(val) {\n    switch (exports.type(val)) {\n      case 'null':\n      case 'undefined':\n        val = '[' + val + ']';\n        break;\n      case 'array':\n      case 'object':\n        val = jsonStringify(val, spaces, depth + 1);\n        break;\n      case 'boolean':\n      case 'regexp':\n      case 'number':\n        val = val === 0 && (1 / val) === -Infinity // `-0`\n          ? '-0'\n          : val.toString();\n        break;\n      case 'date':\n        var sDate = isNaN(val.getTime())        // Invalid date\n          ? val.toString()\n          : val.toISOString();\n        val = '[Date: ' + sDate + ']';\n        break;\n      case 'buffer':\n        var json = val.toJSON();\n        // Based on the toJSON result\n        json = json.data && json.type ? json.data : json;\n        val = '[Buffer: ' + jsonStringify(json, 2, depth + 1) + ']';\n        break;\n      default:\n        val = (val === '[Function]' || val === '[Circular]')\n          ? val\n          : JSON.stringify(val); // string\n    }\n    return val;\n  }\n\n  for (var i in object) {\n    if (!object.hasOwnProperty(i)) {\n      continue; // not my business\n    }\n    --length;\n    str += '\\n ' + repeat(' ', space)\n      + (isArray(object) ? '' : '\"' + i + '\": ') // key\n      + _stringify(object[i])                     // value\n      + (length ? ',' : '');                     // comma\n  }\n\n  return str\n    // [], {}\n    + (str.length !== 1 ? '\\n' + repeat(' ', --space) + end : end);\n}\n\n/**\n * Test if a value is a buffer.\n *\n * @api private\n * @param {*} value The value to test.\n * @return {boolean} True if `value` is a buffer, otherwise false\n */\nexports.isBuffer = function(value) {\n  return typeof Buffer !== 'undefined' && Buffer.isBuffer(value);\n};\n\n/**\n * Return a new Thing that has the keys in sorted order. Recursive.\n *\n * If the Thing...\n * - has already been seen, return string `'[Circular]'`\n * - is `undefined`, return string `'[undefined]'`\n * - is `null`, return value `null`\n * - is some other primitive, return the value\n * - is not a primitive or an `Array`, `Object`, or `Function`, return the value of the Thing's `toString()` method\n * - is a non-empty `Array`, `Object`, or `Function`, return the result of calling this function again.\n * - is an empty `Array`, `Object`, or `Function`, return the result of calling `emptyRepresentation()`\n *\n * @api private\n * @see {@link exports.stringify}\n * @param {*} value Thing to inspect.  May or may not have properties.\n * @param {Array} [stack=[]] Stack of seen values\n * @return {(Object|Array|Function|string|undefined)}\n */\nexports.canonicalize = function(value, stack) {\n  var canonicalizedObj;\n  /* eslint-disable no-unused-vars */\n  var prop;\n  /* eslint-enable no-unused-vars */\n  var type = exports.type(value);\n  function withStack(value, fn) {\n    stack.push(value);\n    fn();\n    stack.pop();\n  }\n\n  stack = stack || [];\n\n  if (exports.indexOf(stack, value) !== -1) {\n    return '[Circular]';\n  }\n\n  switch (type) {\n    case 'undefined':\n    case 'buffer':\n    case 'null':\n      canonicalizedObj = value;\n      break;\n    case 'array':\n      withStack(value, function() {\n        canonicalizedObj = exports.map(value, function(item) {\n          return exports.canonicalize(item, stack);\n        });\n      });\n      break;\n    case 'function':\n      /* eslint-disable guard-for-in */\n      for (prop in value) {\n        canonicalizedObj = {};\n        break;\n      }\n      /* eslint-enable guard-for-in */\n      if (!canonicalizedObj) {\n        canonicalizedObj = emptyRepresentation(value, type);\n        break;\n      }\n    /* falls through */\n    case 'object':\n      canonicalizedObj = canonicalizedObj || {};\n      withStack(value, function() {\n        exports.forEach(exports.keys(value).sort(), function(key) {\n          canonicalizedObj[key] = exports.canonicalize(value[key], stack);\n        });\n      });\n      break;\n    case 'date':\n    case 'number':\n    case 'regexp':\n    case 'boolean':\n      canonicalizedObj = value;\n      break;\n    default:\n      canonicalizedObj = value + '';\n  }\n\n  return canonicalizedObj;\n};\n\n/**\n * Lookup file names at the given `path`.\n *\n * @api public\n * @param {string} path Base path to start searching from.\n * @param {string[]} extensions File extensions to look for.\n * @param {boolean} recursive Whether or not to recurse into subdirectories.\n * @return {string[]} An array of paths.\n */\nexports.lookupFiles = function lookupFiles(path, extensions, recursive) {\n  var files = [];\n  var re = new RegExp('\\\\.(' + extensions.join('|') + ')$');\n\n  if (!exists(path)) {\n    if (exists(path + '.js')) {\n      path += '.js';\n    } else {\n      files = glob.sync(path);\n      if (!files.length) {\n        throw new Error(\"cannot resolve path (or pattern) '\" + path + \"'\");\n      }\n      return files;\n    }\n  }\n\n  try {\n    var stat = statSync(path);\n    if (stat.isFile()) {\n      return path;\n    }\n  } catch (err) {\n    // ignore error\n    return;\n  }\n\n  readdirSync(path).forEach(function(file) {\n    file = join(path, file);\n    try {\n      var stat = statSync(file);\n      if (stat.isDirectory()) {\n        if (recursive) {\n          files = files.concat(lookupFiles(file, extensions, recursive));\n        }\n        return;\n      }\n    } catch (err) {\n      // ignore error\n      return;\n    }\n    if (!stat.isFile() || !re.test(file) || basename(file)[0] === '.') {\n      return;\n    }\n    files.push(file);\n  });\n\n  return files;\n};\n\n/**\n * Generate an undefined error with a message warning the user.\n *\n * @return {Error}\n */\n\nexports.undefinedError = function() {\n  return new Error('Caught undefined error, did you throw without specifying what?');\n};\n\n/**\n * Generate an undefined error if `err` is not defined.\n *\n * @param {Error} err\n * @return {Error}\n */\n\nexports.getError = function(err) {\n  return err || exports.undefinedError();\n};\n\n/**\n * @summary\n * This Filter based on `mocha-clean` module.(see: `github.com/rstacruz/mocha-clean`)\n * @description\n * When invoking this function you get a filter function that get the Error.stack as an input,\n * and return a prettify output.\n * (i.e: strip Mocha and internal node functions from stack trace).\n * @returns {Function}\n */\nexports.stackTraceFilter = function() {\n  // TODO: Replace with `process.browser`\n  var slash = '/';\n  var is = typeof document === 'undefined' ? { node: true } : { browser: true };\n  var cwd = is.node\n      ? process.cwd() + slash\n      : (typeof location === 'undefined' ? window.location : location).href.replace(/\\/[^\\/]*$/, '/');\n\n  function isMochaInternal(line) {\n    return (~line.indexOf('node_modules' + slash + 'mocha' + slash))\n      || (~line.indexOf('components' + slash + 'mochajs' + slash))\n      || (~line.indexOf('components' + slash + 'mocha' + slash))\n      || (~line.indexOf(slash + 'mocha.js'));\n  }\n\n  function isNodeInternal(line) {\n    return (~line.indexOf('(timers.js:'))\n      || (~line.indexOf('(events.js:'))\n      || (~line.indexOf('(node.js:'))\n      || (~line.indexOf('(module.js:'))\n      || (~line.indexOf('GeneratorFunctionPrototype.next (native)'))\n      || false;\n  }\n\n  return function(stack) {\n    stack = stack.split('\\n');\n\n    stack = exports.reduce(stack, function(list, line) {\n      if (isMochaInternal(line)) {\n        return list;\n      }\n\n      if (is.node && isNodeInternal(line)) {\n        return list;\n      }\n\n      // Clean up cwd(absolute)\n      list.push(line.replace(cwd, ''));\n      return list;\n    }, []);\n\n    return stack.join('\\n');\n  };\n};\n","/**\n * Module dependencies.\n */\n\nvar EventEmitter = require('events').EventEmitter;\nvar Hook = require('./hook');\nvar utils = require('./utils');\nvar inherits = utils.inherits;\nvar debug = require('debug')('mocha:suite');\nvar milliseconds = require('./ms');\n\n/**\n * Expose `Suite`.\n */\n\nexports = module.exports = Suite;\n\n/**\n * Create a new `Suite` with the given `title` and parent `Suite`. When a suite\n * with the same title is already present, that suite is returned to provide\n * nicer reporter and more flexible meta-testing.\n *\n * @api public\n * @param {Suite} parent\n * @param {string} title\n * @return {Suite}\n */\nexports.create = function(parent, title) {\n  var suite = new Suite(title, parent.ctx);\n  suite.parent = parent;\n  if (parent.pending) {\n    suite.pending = true;\n  }\n  title = suite.fullTitle();\n  parent.addSuite(suite);\n  return suite;\n};\n\n/**\n * Initialize a new `Suite` with the given `title` and `ctx`.\n *\n * @api private\n * @param {string} title\n * @param {Context} parentContext\n */\nfunction Suite(title, parentContext) {\n  this.title = title;\n  function Context() {}\n  Context.prototype = parentContext;\n  this.ctx = new Context();\n  this.suites = [];\n  this.tests = [];\n  this.pending = false;\n  this._beforeEach = [];\n  this._beforeAll = [];\n  this._afterEach = [];\n  this._afterAll = [];\n  this.root = !title;\n  this._timeout = 2000;\n  this._enableTimeouts = true;\n  this._slow = 75;\n  this._bail = false;\n  this._retries = -1;\n  this.delayed = false;\n}\n\n/**\n * Inherit from `EventEmitter.prototype`.\n */\ninherits(Suite, EventEmitter);\n\n/**\n * Return a clone of this `Suite`.\n *\n * @api private\n * @return {Suite}\n */\nSuite.prototype.clone = function() {\n  var suite = new Suite(this.title);\n  debug('clone');\n  suite.ctx = this.ctx;\n  suite.timeout(this.timeout());\n  suite.retries(this.retries());\n  suite.enableTimeouts(this.enableTimeouts());\n  suite.slow(this.slow());\n  suite.bail(this.bail());\n  return suite;\n};\n\n/**\n * Set timeout `ms` or short-hand such as \"2s\".\n *\n * @api private\n * @param {number|string} ms\n * @return {Suite|number} for chaining\n */\nSuite.prototype.timeout = function(ms) {\n  if (!arguments.length) {\n    return this._timeout;\n  }\n  if (ms.toString() === '0') {\n    this._enableTimeouts = false;\n  }\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  }\n  debug('timeout %d', ms);\n  this._timeout = parseInt(ms, 10);\n  return this;\n};\n\n/**\n * Set number of times to retry a failed test.\n *\n * @api private\n * @param {number|string} n\n * @return {Suite|number} for chaining\n */\nSuite.prototype.retries = function(n) {\n  if (!arguments.length) {\n    return this._retries;\n  }\n  debug('retries %d', n);\n  this._retries = parseInt(n, 10) || 0;\n  return this;\n};\n\n/**\n  * Set timeout to `enabled`.\n  *\n  * @api private\n  * @param {boolean} enabled\n  * @return {Suite|boolean} self or enabled\n  */\nSuite.prototype.enableTimeouts = function(enabled) {\n  if (!arguments.length) {\n    return this._enableTimeouts;\n  }\n  debug('enableTimeouts %s', enabled);\n  this._enableTimeouts = enabled;\n  return this;\n};\n\n/**\n * Set slow `ms` or short-hand such as \"2s\".\n *\n * @api private\n * @param {number|string} ms\n * @return {Suite|number} for chaining\n */\nSuite.prototype.slow = function(ms) {\n  if (!arguments.length) {\n    return this._slow;\n  }\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  }\n  debug('slow %d', ms);\n  this._slow = ms;\n  return this;\n};\n\n/**\n * Sets whether to bail after first error.\n *\n * @api private\n * @param {boolean} bail\n * @return {Suite|number} for chaining\n */\nSuite.prototype.bail = function(bail) {\n  if (!arguments.length) {\n    return this._bail;\n  }\n  debug('bail %s', bail);\n  this._bail = bail;\n  return this;\n};\n\n/**\n * Run `fn(test[, done])` before running tests.\n *\n * @api private\n * @param {string} title\n * @param {Function} fn\n * @return {Suite} for chaining\n */\nSuite.prototype.beforeAll = function(title, fn) {\n  if (this.pending) {\n    return this;\n  }\n  if (typeof title === 'function') {\n    fn = title;\n    title = fn.name;\n  }\n  title = '\"before all\" hook' + (title ? ': ' + title : '');\n\n  var hook = new Hook(title, fn);\n  hook.parent = this;\n  hook.timeout(this.timeout());\n  hook.retries(this.retries());\n  hook.enableTimeouts(this.enableTimeouts());\n  hook.slow(this.slow());\n  hook.ctx = this.ctx;\n  this._beforeAll.push(hook);\n  this.emit('beforeAll', hook);\n  return this;\n};\n\n/**\n * Run `fn(test[, done])` after running tests.\n *\n * @api private\n * @param {string} title\n * @param {Function} fn\n * @return {Suite} for chaining\n */\nSuite.prototype.afterAll = function(title, fn) {\n  if (this.pending) {\n    return this;\n  }\n  if (typeof title === 'function') {\n    fn = title;\n    title = fn.name;\n  }\n  title = '\"after all\" hook' + (title ? ': ' + title : '');\n\n  var hook = new Hook(title, fn);\n  hook.parent = this;\n  hook.timeout(this.timeout());\n  hook.retries(this.retries());\n  hook.enableTimeouts(this.enableTimeouts());\n  hook.slow(this.slow());\n  hook.ctx = this.ctx;\n  this._afterAll.push(hook);\n  this.emit('afterAll', hook);\n  return this;\n};\n\n/**\n * Run `fn(test[, done])` before each test case.\n *\n * @api private\n * @param {string} title\n * @param {Function} fn\n * @return {Suite} for chaining\n */\nSuite.prototype.beforeEach = function(title, fn) {\n  if (this.pending) {\n    return this;\n  }\n  if (typeof title === 'function') {\n    fn = title;\n    title = fn.name;\n  }\n  title = '\"before each\" hook' + (title ? ': ' + title : '');\n\n  var hook = new Hook(title, fn);\n  hook.parent = this;\n  hook.timeout(this.timeout());\n  hook.retries(this.retries());\n  hook.enableTimeouts(this.enableTimeouts());\n  hook.slow(this.slow());\n  hook.ctx = this.ctx;\n  this._beforeEach.push(hook);\n  this.emit('beforeEach', hook);\n  return this;\n};\n\n/**\n * Run `fn(test[, done])` after each test case.\n *\n * @api private\n * @param {string} title\n * @param {Function} fn\n * @return {Suite} for chaining\n */\nSuite.prototype.afterEach = function(title, fn) {\n  if (this.pending) {\n    return this;\n  }\n  if (typeof title === 'function') {\n    fn = title;\n    title = fn.name;\n  }\n  title = '\"after each\" hook' + (title ? ': ' + title : '');\n\n  var hook = new Hook(title, fn);\n  hook.parent = this;\n  hook.timeout(this.timeout());\n  hook.retries(this.retries());\n  hook.enableTimeouts(this.enableTimeouts());\n  hook.slow(this.slow());\n  hook.ctx = this.ctx;\n  this._afterEach.push(hook);\n  this.emit('afterEach', hook);\n  return this;\n};\n\n/**\n * Add a test `suite`.\n *\n * @api private\n * @param {Suite} suite\n * @return {Suite} for chaining\n */\nSuite.prototype.addSuite = function(suite) {\n  suite.parent = this;\n  suite.timeout(this.timeout());\n  suite.retries(this.retries());\n  suite.enableTimeouts(this.enableTimeouts());\n  suite.slow(this.slow());\n  suite.bail(this.bail());\n  this.suites.push(suite);\n  this.emit('suite', suite);\n  return this;\n};\n\n/**\n * Add a `test` to this suite.\n *\n * @api private\n * @param {Test} test\n * @return {Suite} for chaining\n */\nSuite.prototype.addTest = function(test) {\n  test.parent = this;\n  test.timeout(this.timeout());\n  test.retries(this.retries());\n  test.enableTimeouts(this.enableTimeouts());\n  test.slow(this.slow());\n  test.ctx = this.ctx;\n  this.tests.push(test);\n  this.emit('test', test);\n  return this;\n};\n\n/**\n * Return the full title generated by recursively concatenating the parent's\n * full title.\n *\n * @api public\n * @return {string}\n */\nSuite.prototype.fullTitle = function() {\n  if (this.parent) {\n    var full = this.parent.fullTitle();\n    if (full) {\n      return full + ' ' + this.title;\n    }\n  }\n  return this.title;\n};\n\n/**\n * Return the total number of tests.\n *\n * @api public\n * @return {number}\n */\nSuite.prototype.total = function() {\n  return utils.reduce(this.suites, function(sum, suite) {\n    return sum + suite.total();\n  }, 0) + this.tests.length;\n};\n\n/**\n * Iterates through each suite recursively to find all tests. Applies a\n * function in the format `fn(test)`.\n *\n * @api private\n * @param {Function} fn\n * @return {Suite}\n */\nSuite.prototype.eachTest = function(fn) {\n  utils.forEach(this.tests, fn);\n  utils.forEach(this.suites, function(suite) {\n    suite.eachTest(fn);\n  });\n  return this;\n};\n\n/**\n * This will run the root suite if we happen to be running in delayed mode.\n */\nSuite.prototype.run = function run() {\n  if (this.root) {\n    this.emit('run');\n  }\n};\n","/**\n * Module dependencies.\n */\n\nvar Runnable = require('./runnable');\nvar inherits = require('./utils').inherits;\n\n/**\n * Expose `Hook`.\n */\n\nmodule.exports = Hook;\n\n/**\n * Initialize a new `Hook` with the given `title` and callback `fn`.\n *\n * @param {String} title\n * @param {Function} fn\n * @api private\n */\nfunction Hook(title, fn) {\n  Runnable.call(this, title, fn);\n  this.type = 'hook';\n}\n\n/**\n * Inherit from `Runnable.prototype`.\n */\ninherits(Hook, Runnable);\n\n/**\n * Get or set the test `err`.\n *\n * @param {Error} err\n * @return {Error}\n * @api public\n */\nHook.prototype.error = function(err) {\n  if (!arguments.length) {\n    err = this._error;\n    this._error = null;\n    return err;\n  }\n\n  this._error = err;\n};\n","exports.name = \"debug\";\nexports.version = \"2.2.0\";\nexports.main = \"./node.js\";\n","\n/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\nvar stream = 1 === fd ? process.stdout :\n             2 === fd ? process.stderr :\n             createWritableStdioStream(fd);\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  var debugColors = (process.env.DEBUG_COLORS || '').trim().toLowerCase();\n  if (0 === debugColors.length) {\n    return tty.isatty(fd);\n  } else {\n    return '0' !== debugColors\n        && 'no' !== debugColors\n        && 'false' !== debugColors\n        && 'disabled' !== debugColors;\n  }\n}\n\n/**\n * Map %o to `util.inspect()`, since Node doesn't do that out of the box.\n */\n\nvar inspect = (4 === util.inspect.length ?\n  // node <= 0.8.x\n  function (v, colors) {\n    return util.inspect(v, void 0, void 0, colors);\n  } :\n  // node > 0.8.x\n  function (v, colors) {\n    return util.inspect(v, { colors: colors });\n  }\n);\n\nexports.formatters.o = function(v) {\n  return inspect(v, this.useColors)\n    .replace(/\\s*\\n\\s*/g, ' ');\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n  var name = this.namespace;\n\n  if (useColors) {\n    var c = this.color;\n\n    args[0] = '  \\u001b[3' + c + ';1m' + name + ' '\n      + '\\u001b[0m'\n      + args[0] + '\\u001b[3' + c + 'm'\n      + ' +' + exports.humanize(this.diff) + '\\u001b[0m';\n  } else {\n    args[0] = new Date().toUTCString()\n      + ' ' + name + ' ' + args[0];\n  }\n  return args;\n}\n\n/**\n * Invokes `console.error()` with the specified arguments.\n */\n\nfunction log() {\n  return stream.write(util.format.apply(this, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\nfunction createWritableStdioStream (fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap');\n\n  // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n\n      // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    case 'FILE':\n      var fs = require('fs');\n      stream = new fs.SyncWriteStream(fd, { autoClose: false });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = require('net');\n      stream = new net.Socket({\n        fd: fd,\n        readable: false,\n        writable: true\n      });\n\n      // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe';\n\n      // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n\n  // define the `disabled` version\n  function disabled() {\n  }\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n\n    var self = enabled;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n\n    var args = Array.prototype.slice.call(arguments);\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    if ('function' === typeof exports.formatArgs) {\n      args = exports.formatArgs.apply(self, args);\n    }\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n\n  fn.namespace = namespace;\n\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","exports.name = \"ms\";\nexports.version = \"0.7.1\";\nexports.main = \"./index\";\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options){\n  options = options || {};\n  if ('string' == typeof val) return parse(val);\n  return options.long\n    ? long(val)\n    : short(val);\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = '' + str;\n  if (str.length > 10000) return;\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n  if (!match) return;\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction short(ms) {\n  if (ms >= d) return Math.round(ms / d) + 'd';\n  if (ms >= h) return Math.round(ms / h) + 'h';\n  if (ms >= m) return Math.round(ms / m) + 'm';\n  if (ms >= s) return Math.round(ms / s) + 's';\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction long(ms) {\n  return plural(ms, d, 'day')\n    || plural(ms, h, 'hour')\n    || plural(ms, m, 'minute')\n    || plural(ms, s, 'second')\n    || ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) return;\n  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","exports.name = \"glob\";\nexports.version = \"3.2.3\";\nexports.main = \"glob.js\";\n","// Approach:\n//\n// 1. Get the minimatch set\n// 2. For each pattern in the set, PROCESS(pattern)\n// 3. Store matches per-set, then uniq them\n//\n// PROCESS(pattern)\n// Get the first [n] items from pattern that are all strings\n// Join these together.  This is PREFIX.\n//   If there is no more remaining, then stat(PREFIX) and\n//   add to matches if it succeeds.  END.\n// readdir(PREFIX) as ENTRIES\n//   If fails, END\n//   If pattern[n] is GLOBSTAR\n//     // handle the case where the globstar match is empty\n//     // by pruning it out, and testing the resulting pattern\n//     PROCESS(pattern[0..n] + pattern[n+1 .. $])\n//     // handle other cases.\n//     for ENTRY in ENTRIES (not dotfiles)\n//       // attach globstar + tail onto the entry\n//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $])\n//\n//   else // not globstar\n//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)\n//       Test ENTRY against pattern[n]\n//       If fails, continue\n//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])\n//\n// Caveat:\n//   Cache all stats and readdirs results to minimize syscall.  Since all\n//   we ever care about is existence and directory-ness, we can just keep\n//   `true` for files, and [children,...] for directories, or `false` for\n//   things that don't exist.\n\n\n\nmodule.exports = glob\n\nvar fs = require(\"graceful-fs\")\n, minimatch = require(\"minimatch\")\n, Minimatch = minimatch.Minimatch\n, inherits = require(\"inherits\")\n, EE = require(\"events\").EventEmitter\n, path = require(\"path\")\n, isDir = {}\n, assert = require(\"assert\").ok\n\nfunction glob (pattern, options, cb) {\n  if (typeof options === \"function\") cb = options, options = {}\n  if (!options) options = {}\n\n  if (typeof options === \"number\") {\n    deprecated()\n    return\n  }\n\n  var g = new Glob(pattern, options, cb)\n  return g.sync ? g.found : g\n}\n\nglob.fnmatch = deprecated\n\nfunction deprecated () {\n  throw new Error(\"glob's interface has changed. Please see the docs.\")\n}\n\nglob.sync = globSync\nfunction globSync (pattern, options) {\n  if (typeof options === \"number\") {\n    deprecated()\n    return\n  }\n\n  options = options || {}\n  options.sync = true\n  return glob(pattern, options)\n}\n\n\nglob.Glob = Glob\ninherits(Glob, EE)\nfunction Glob (pattern, options, cb) {\n  if (!(this instanceof Glob)) {\n    return new Glob(pattern, options, cb)\n  }\n\n  if (typeof cb === \"function\") {\n    this.on(\"error\", cb)\n    this.on(\"end\", function (matches) {\n      cb(null, matches)\n    })\n  }\n\n  options = options || {}\n\n  this.EOF = {}\n  this._emitQueue = []\n\n  this.maxDepth = options.maxDepth || 1000\n  this.maxLength = options.maxLength || Infinity\n  this.cache = options.cache || {}\n  this.statCache = options.statCache || {}\n\n  this.changedCwd = false\n  var cwd = process.cwd()\n  if (!options.hasOwnProperty(\"cwd\")) this.cwd = cwd\n  else {\n    this.cwd = options.cwd\n    this.changedCwd = path.resolve(options.cwd) !== cwd\n  }\n\n  this.root = options.root || path.resolve(this.cwd, \"/\")\n  this.root = path.resolve(this.root)\n  if (process.platform === \"win32\")\n    this.root = this.root.replace(/\\\\/g, \"/\")\n\n  this.nomount = !!options.nomount\n\n  if (!pattern) {\n    throw new Error(\"must provide pattern\")\n  }\n\n  // base-matching: just use globstar for that.\n  if (options.matchBase && -1 === pattern.indexOf(\"/\")) {\n    if (options.noglobstar) {\n      throw new Error(\"base matching requires globstar\")\n    }\n    pattern = \"**/\" + pattern\n  }\n\n  this.strict = options.strict !== false\n  this.dot = !!options.dot\n  this.mark = !!options.mark\n  this.sync = !!options.sync\n  this.nounique = !!options.nounique\n  this.nonull = !!options.nonull\n  this.nosort = !!options.nosort\n  this.nocase = !!options.nocase\n  this.stat = !!options.stat\n\n  this.debug = !!options.debug || !!options.globDebug\n  if (this.debug)\n    this.log = console.error\n\n  this.silent = !!options.silent\n\n  var mm = this.minimatch = new Minimatch(pattern, options)\n  this.options = mm.options\n  pattern = this.pattern = mm.pattern\n\n  this.error = null\n  this.aborted = false\n\n  // list of all the patterns that ** has resolved do, so\n  // we can avoid visiting multiple times.\n  this._globstars = {}\n\n  EE.call(this)\n\n  // process each pattern in the minimatch set\n  var n = this.minimatch.set.length\n\n  // The matches are stored as {<filename>: true,...} so that\n  // duplicates are automagically pruned.\n  // Later, we do an Object.keys() on these.\n  // Keep them as a list so we can fill in when nonull is set.\n  this.matches = new Array(n)\n\n  this.minimatch.set.forEach(iterator.bind(this))\n  function iterator (pattern, i, set) {\n    this._process(pattern, 0, i, function (er) {\n      if (er) this.emit(\"error\", er)\n      if (-- n <= 0) this._finish()\n    })\n  }\n}\n\nGlob.prototype.log = function () {}\n\nGlob.prototype._finish = function () {\n  assert(this instanceof Glob)\n\n  var nou = this.nounique\n  , all = nou ? [] : {}\n\n  for (var i = 0, l = this.matches.length; i < l; i ++) {\n    var matches = this.matches[i]\n    this.log(\"matches[%d] =\", i, matches)\n    // do like the shell, and spit out the literal glob\n    if (!matches) {\n      if (this.nonull) {\n        var literal = this.minimatch.globSet[i]\n        if (nou) all.push(literal)\n        else all[literal] = true\n      }\n    } else {\n      // had matches\n      var m = Object.keys(matches)\n      if (nou) all.push.apply(all, m)\n      else m.forEach(function (m) {\n        all[m] = true\n      })\n    }\n  }\n\n  if (!nou) all = Object.keys(all)\n\n  if (!this.nosort) {\n    all = all.sort(this.nocase ? alphasorti : alphasort)\n  }\n\n  if (this.mark) {\n    // at *some* point we statted all of these\n    all = all.map(function (m) {\n      var sc = this.cache[m]\n      if (!sc)\n        return m\n      var isDir = (Array.isArray(sc) || sc === 2)\n      if (isDir && m.slice(-1) !== \"/\") {\n        return m + \"/\"\n      }\n      if (!isDir && m.slice(-1) === \"/\") {\n        return m.replace(/\\/+$/, \"\")\n      }\n      return m\n    }, this)\n  }\n\n  this.log(\"emitting end\", all)\n\n  this.EOF = this.found = all\n  this.emitMatch(this.EOF)\n}\n\nfunction alphasorti (a, b) {\n  a = a.toLowerCase()\n  b = b.toLowerCase()\n  return alphasort(a, b)\n}\n\nfunction alphasort (a, b) {\n  return a > b ? 1 : a < b ? -1 : 0\n}\n\nGlob.prototype.abort = function () {\n  this.aborted = true\n  this.emit(\"abort\")\n}\n\nGlob.prototype.pause = function () {\n  if (this.paused) return\n  if (this.sync)\n    this.emit(\"error\", new Error(\"Can't pause/resume sync glob\"))\n  this.paused = true\n  this.emit(\"pause\")\n}\n\nGlob.prototype.resume = function () {\n  if (!this.paused) return\n  if (this.sync)\n    this.emit(\"error\", new Error(\"Can't pause/resume sync glob\"))\n  this.paused = false\n  this.emit(\"resume\")\n  this._processEmitQueue()\n  //process.nextTick(this.emit.bind(this, \"resume\"))\n}\n\nGlob.prototype.emitMatch = function (m) {\n  if (!this.stat || this.statCache[m] || m === this.EOF) {\n    this._emitQueue.push(m)\n    this._processEmitQueue()\n  } else {\n    this._stat(m, function(exists, isDir) {\n      if (exists) {\n        this._emitQueue.push(m)\n        this._processEmitQueue()\n      }\n    })\n  }\n}\n\nGlob.prototype._processEmitQueue = function (m) {\n  while (!this._processingEmitQueue &&\n         !this.paused) {\n    this._processingEmitQueue = true\n    var m = this._emitQueue.shift()\n    if (!m) {\n      this._processingEmitQueue = false\n      break\n    }\n\n    this.log('emit!', m === this.EOF ? \"end\" : \"match\")\n\n    this.emit(m === this.EOF ? \"end\" : \"match\", m)\n    this._processingEmitQueue = false\n  }\n}\n\nGlob.prototype._process = function (pattern, depth, index, cb_) {\n  assert(this instanceof Glob)\n\n  var cb = function cb (er, res) {\n    assert(this instanceof Glob)\n    if (this.paused) {\n      if (!this._processQueue) {\n        this._processQueue = []\n        this.once(\"resume\", function () {\n          var q = this._processQueue\n          this._processQueue = null\n          q.forEach(function (cb) { cb() })\n        })\n      }\n      this._processQueue.push(cb_.bind(this, er, res))\n    } else {\n      cb_.call(this, er, res)\n    }\n  }.bind(this)\n\n  if (this.aborted) return cb()\n\n  if (depth > this.maxDepth) return cb()\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === \"string\") {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // see if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      prefix = pattern.join(\"/\")\n      this._stat(prefix, function (exists, isDir) {\n        // either it's there, or it isn't.\n        // nothing more to do, either way.\n        if (exists) {\n          if (prefix && isAbsolute(prefix) && !this.nomount) {\n            if (prefix.charAt(0) === \"/\") {\n              prefix = path.join(this.root, prefix)\n            } else {\n              prefix = path.resolve(this.root, prefix)\n            }\n          }\n\n          if (process.platform === \"win32\")\n            prefix = prefix.replace(/\\\\/g, \"/\")\n\n          this.matches[index] = this.matches[index] || {}\n          this.matches[index][prefix] = true\n          this.emitMatch(prefix)\n        }\n        return cb()\n      })\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's \"absolute\" like /foo/bar,\n      // or \"relative\" like \"../baz\"\n      prefix = pattern.slice(0, n)\n      prefix = prefix.join(\"/\")\n      break\n  }\n\n  // get the list of entries.\n  var read\n  if (prefix === null) read = \".\"\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join(\"/\"))) {\n    if (!prefix || !isAbsolute(prefix)) {\n      prefix = path.join(\"/\", prefix)\n    }\n    read = prefix = path.resolve(prefix)\n\n    // if (process.platform === \"win32\")\n    //   read = prefix = prefix.replace(/^[a-zA-Z]:|\\\\/g, \"/\")\n\n    this.log('absolute: ', prefix, this.root, pattern, read)\n  } else {\n    read = prefix\n  }\n\n  this.log('readdir(%j)', read, this.cwd, this.root)\n\n  return this._readdir(read, function (er, entries) {\n    if (er) {\n      // not a directory!\n      // this means that, whatever else comes after this, it can never match\n      return cb()\n    }\n\n    // globstar is special\n    if (pattern[n] === minimatch.GLOBSTAR) {\n      // test without the globstar, and with every child both below\n      // and replacing the globstar.\n      var s = [ pattern.slice(0, n).concat(pattern.slice(n + 1)) ]\n      entries.forEach(function (e) {\n        if (e.charAt(0) === \".\" && !this.dot) return\n        // instead of the globstar\n        s.push(pattern.slice(0, n).concat(e).concat(pattern.slice(n + 1)))\n        // below the globstar\n        s.push(pattern.slice(0, n).concat(e).concat(pattern.slice(n)))\n      }, this)\n\n      s = s.filter(function (pattern) {\n        var key = gsKey(pattern)\n        var seen = !this._globstars[key]\n        this._globstars[key] = true\n        return seen\n      }, this)\n\n      if (!s.length)\n        return cb()\n\n      // now asyncForEach over this\n      var l = s.length\n      , errState = null\n      s.forEach(function (gsPattern) {\n        this._process(gsPattern, depth + 1, index, function (er) {\n          if (errState) return\n          if (er) return cb(errState = er)\n          if (--l <= 0) return cb()\n        })\n      }, this)\n\n      return\n    }\n\n    // not a globstar\n    // It will only match dot entries if it starts with a dot, or if\n    // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n    var pn = pattern[n]\n    var rawGlob = pattern[n]._glob\n    , dotOk = this.dot || rawGlob.charAt(0) === \".\"\n\n    entries = entries.filter(function (e) {\n      return (e.charAt(0) !== \".\" || dotOk) &&\n             e.match(pattern[n])\n    })\n\n    // If n === pattern.length - 1, then there's no need for the extra stat\n    // *unless* the user has specified \"mark\" or \"stat\" explicitly.\n    // We know that they exist, since the readdir returned them.\n    if (n === pattern.length - 1 &&\n        !this.mark &&\n        !this.stat) {\n      entries.forEach(function (e) {\n        if (prefix) {\n          if (prefix !== \"/\") e = prefix + \"/\" + e\n          else e = prefix + e\n        }\n        if (e.charAt(0) === \"/\" && !this.nomount) {\n          e = path.join(this.root, e)\n        }\n\n        if (process.platform === \"win32\")\n          e = e.replace(/\\\\/g, \"/\")\n\n        this.matches[index] = this.matches[index] || {}\n        this.matches[index][e] = true\n        this.emitMatch(e)\n      }, this)\n      return cb.call(this)\n    }\n\n\n    // now test all the remaining entries as stand-ins for that part\n    // of the pattern.\n    var l = entries.length\n    , errState = null\n    if (l === 0) return cb() // no matches possible\n    entries.forEach(function (e) {\n      var p = pattern.slice(0, n).concat(e).concat(pattern.slice(n + 1))\n      this._process(p, depth + 1, index, function (er) {\n        if (errState) return\n        if (er) return cb(errState = er)\n        if (--l === 0) return cb.call(this)\n      })\n    }, this)\n  })\n\n}\n\nfunction gsKey (pattern) {\n  return '**' + pattern.map(function (p) {\n    return (p === minimatch.GLOBSTAR) ? '**' : (''+p)\n  }).join('/')\n}\n\nGlob.prototype._stat = function (f, cb) {\n  assert(this instanceof Glob)\n  var abs = f\n  if (f.charAt(0) === \"/\") {\n    abs = path.join(this.root, f)\n  } else if (this.changedCwd) {\n    abs = path.resolve(this.cwd, f)\n  }\n\n  if (f.length > this.maxLength) {\n    var er = new Error(\"Path name too long\")\n    er.code = \"ENAMETOOLONG\"\n    er.path = f\n    return this._afterStat(f, abs, cb, er)\n  }\n\n  this.log('stat', [this.cwd, f, '=', abs])\n\n  if (!this.stat && this.cache.hasOwnProperty(f)) {\n    var exists = this.cache[f]\n    , isDir = exists && (Array.isArray(exists) || exists === 2)\n    if (this.sync) return cb.call(this, !!exists, isDir)\n    return process.nextTick(cb.bind(this, !!exists, isDir))\n  }\n\n  var stat = this.statCache[abs]\n  if (this.sync || stat) {\n    var er\n    try {\n      stat = fs.statSync(abs)\n    } catch (e) {\n      er = e\n    }\n    this._afterStat(f, abs, cb, er, stat)\n  } else {\n    fs.stat(abs, this._afterStat.bind(this, f, abs, cb))\n  }\n}\n\nGlob.prototype._afterStat = function (f, abs, cb, er, stat) {\n  var exists\n  assert(this instanceof Glob)\n\n  if (abs.slice(-1) === \"/\" && stat && !stat.isDirectory()) {\n    this.log(\"should be ENOTDIR, fake it\")\n\n    er = new Error(\"ENOTDIR, not a directory '\" + abs + \"'\")\n    er.path = abs\n    er.code = \"ENOTDIR\"\n    stat = null\n  }\n\n  var emit = !this.statCache[abs]\n  this.statCache[abs] = stat\n\n  if (er || !stat) {\n    exists = false\n  } else {\n    exists = stat.isDirectory() ? 2 : 1\n    if (emit)\n      this.emit('stat', f, stat)\n  }\n  this.cache[f] = this.cache[f] || exists\n  cb.call(this, !!exists, exists === 2)\n}\n\nGlob.prototype._readdir = function (f, cb) {\n  assert(this instanceof Glob)\n  var abs = f\n  if (f.charAt(0) === \"/\") {\n    abs = path.join(this.root, f)\n  } else if (isAbsolute(f)) {\n    abs = f\n  } else if (this.changedCwd) {\n    abs = path.resolve(this.cwd, f)\n  }\n\n  if (f.length > this.maxLength) {\n    var er = new Error(\"Path name too long\")\n    er.code = \"ENAMETOOLONG\"\n    er.path = f\n    return this._afterReaddir(f, abs, cb, er)\n  }\n\n  this.log('readdir', [this.cwd, f, abs])\n  if (this.cache.hasOwnProperty(f)) {\n    var c = this.cache[f]\n    if (Array.isArray(c)) {\n      if (this.sync) return cb.call(this, null, c)\n      return process.nextTick(cb.bind(this, null, c))\n    }\n\n    if (!c || c === 1) {\n      // either ENOENT or ENOTDIR\n      var code = c ? \"ENOTDIR\" : \"ENOENT\"\n      , er = new Error((c ? \"Not a directory\" : \"Not found\") + \": \" + f)\n      er.path = f\n      er.code = code\n      this.log(f, er)\n      if (this.sync) return cb.call(this, er)\n      return process.nextTick(cb.bind(this, er))\n    }\n\n    // at this point, c === 2, meaning it's a dir, but we haven't\n    // had to read it yet, or c === true, meaning it's *something*\n    // but we don't have any idea what.  Need to read it, either way.\n  }\n\n  if (this.sync) {\n    var er, entries\n    try {\n      entries = fs.readdirSync(abs)\n    } catch (e) {\n      er = e\n    }\n    return this._afterReaddir(f, abs, cb, er, entries)\n  }\n\n  fs.readdir(abs, this._afterReaddir.bind(this, f, abs, cb))\n}\n\nGlob.prototype._afterReaddir = function (f, abs, cb, er, entries) {\n  assert(this instanceof Glob)\n  if (entries && !er) {\n    this.cache[f] = entries\n    // if we haven't asked to stat everything for suresies, then just\n    // assume that everything in there exists, so we can avoid\n    // having to stat it a second time.  This also gets us one step\n    // further into ELOOP territory.\n    if (!this.mark && !this.stat) {\n      entries.forEach(function (e) {\n        if (f === \"/\") e = f + e\n        else e = f + \"/\" + e\n        this.cache[e] = true\n      }, this)\n    }\n\n    return cb.call(this, er, entries)\n  }\n\n  // now handle errors, and cache the information\n  if (er) switch (er.code) {\n    case \"ENOTDIR\": // totally normal. means it *does* exist.\n      this.cache[f] = 1\n      return cb.call(this, er)\n    case \"ENOENT\": // not terribly unusual\n    case \"ELOOP\":\n    case \"ENAMETOOLONG\":\n    case \"UNKNOWN\":\n      this.cache[f] = false\n      return cb.call(this, er)\n    default: // some unusual error.  Treat as failure.\n      this.cache[f] = false\n      if (this.strict) this.emit(\"error\", er)\n      if (!this.silent) console.error(\"glob error\", er)\n      return cb.call(this, er)\n  }\n}\n\nvar isAbsolute = process.platform === \"win32\" ? absWin : absUnix\n\nfunction absWin (p) {\n  if (absUnix(p)) return true\n  // pull off the device/UNC bit from a windows path.\n  // from node's lib/path.js\n  var splitDeviceRe =\n      /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/\n    , result = splitDeviceRe.exec(p)\n    , device = result[1] || ''\n    , isUnc = device && device.charAt(1) !== ':'\n    , isAbsolute = !!result[2] || isUnc // UNC paths are always absolute\n\n  return isAbsolute\n}\n\nfunction absUnix (p) {\n  return p.charAt(0) === \"/\" || p === \"\"\n}\n","exports.name = \"graceful-fs\";\nexports.version = \"2.0.3\";\nexports.main = \"graceful-fs.js\";\n","// Monkey-patching the fs module.\n// It's ugly, but there is simply no other way to do this.\nvar fs = module.exports = require('fs')\n\nvar assert = require('assert')\n\n// fix up some busted stuff, mostly on windows and old nodes\nrequire('./polyfills.js')\n\n// The EMFILE enqueuing stuff\n\nvar util = require('util')\n\nfunction noop () {}\n\nvar debug = noop\nif (util.debuglog)\n  debug = util.debuglog('gfs')\nelse if (/\\bgfs\\b/i.test(process.env.NODE_DEBUG || ''))\n  debug = function() {\n    var m = util.format.apply(util, arguments)\n    m = 'GFS: ' + m.split(/\\n/).join('\\nGFS: ')\n    console.error(m)\n  }\n\nif (/\\bgfs\\b/i.test(process.env.NODE_DEBUG || '')) {\n  process.on('exit', function() {\n    debug('fds', fds)\n    debug(queue)\n    assert.equal(queue.length, 0)\n  })\n}\n\n\nvar originalOpen = fs.open\nfs.open = open\n\nfunction open(path, flags, mode, cb) {\n  if (typeof mode === \"function\") cb = mode, mode = null\n  if (typeof cb !== \"function\") cb = noop\n  new OpenReq(path, flags, mode, cb)\n}\n\nfunction OpenReq(path, flags, mode, cb) {\n  this.path = path\n  this.flags = flags\n  this.mode = mode\n  this.cb = cb\n  Req.call(this)\n}\n\nutil.inherits(OpenReq, Req)\n\nOpenReq.prototype.process = function() {\n  originalOpen.call(fs, this.path, this.flags, this.mode, this.done)\n}\n\nvar fds = {}\nOpenReq.prototype.done = function(er, fd) {\n  debug('open done', er, fd)\n  if (fd)\n    fds['fd' + fd] = this.path\n  Req.prototype.done.call(this, er, fd)\n}\n\n\nvar originalReaddir = fs.readdir\nfs.readdir = readdir\n\nfunction readdir(path, cb) {\n  if (typeof cb !== \"function\") cb = noop\n  new ReaddirReq(path, cb)\n}\n\nfunction ReaddirReq(path, cb) {\n  this.path = path\n  this.cb = cb\n  Req.call(this)\n}\n\nutil.inherits(ReaddirReq, Req)\n\nReaddirReq.prototype.process = function() {\n  originalReaddir.call(fs, this.path, this.done)\n}\n\nReaddirReq.prototype.done = function(er, files) {\n  if (files && files.sort)\n    files = files.sort()\n  Req.prototype.done.call(this, er, files)\n  onclose()\n}\n\n\nvar originalClose = fs.close\nfs.close = close\n\nfunction close (fd, cb) {\n  debug('close', fd)\n  if (typeof cb !== \"function\") cb = noop\n  delete fds['fd' + fd]\n  originalClose.call(fs, fd, function(er) {\n    onclose()\n    cb(er)\n  })\n}\n\n\nvar originalCloseSync = fs.closeSync\nfs.closeSync = closeSync\n\nfunction closeSync (fd) {\n  try {\n    return originalCloseSync(fd)\n  } finally {\n    onclose()\n  }\n}\n\n\n// Req class\nfunction Req () {\n  // start processing\n  this.done = this.done.bind(this)\n  this.failures = 0\n  this.process()\n}\n\nReq.prototype.done = function (er, result) {\n  var tryAgain = false\n  if (er) {\n    var code = er.code\n    var tryAgain = code === \"EMFILE\"\n    if (process.platform === \"win32\")\n      tryAgain = tryAgain || code === \"OK\"\n  }\n\n  if (tryAgain) {\n    this.failures ++\n    enqueue(this)\n  } else {\n    var cb = this.cb\n    cb(er, result)\n  }\n}\n\nvar queue = []\n\nfunction enqueue(req) {\n  queue.push(req)\n  debug('enqueue %d %s', queue.length, req.constructor.name, req)\n}\n\nfunction onclose() {\n  var req = queue.shift()\n  if (req) {\n    debug('process', req.constructor.name, req)\n    req.process()\n  }\n}\n","var fs = require('fs')\nvar constants = require('constants')\n\nvar origCwd = process.cwd\nvar cwd = null\nprocess.cwd = function() {\n  if (!cwd)\n    cwd = origCwd.call(process)\n  return cwd\n}\nvar chdir = process.chdir\nprocess.chdir = function(d) {\n  cwd = null\n  chdir.call(process, d)\n}\n\n// (re-)implement some things that are known busted or missing.\n\n// lchmod, broken prior to 0.6.2\n// back-port the fix here.\nif (constants.hasOwnProperty('O_SYMLINK') &&\n    process.version.match(/^v0\\.6\\.[0-2]|^v0\\.5\\./)) {\n  fs.lchmod = function (path, mode, callback) {\n    callback = callback || noop\n    fs.open( path\n           , constants.O_WRONLY | constants.O_SYMLINK\n           , mode\n           , function (err, fd) {\n      if (err) {\n        callback(err)\n        return\n      }\n      // prefer to return the chmod error, if one occurs,\n      // but still try to close, and report closing errors if they occur.\n      fs.fchmod(fd, mode, function (err) {\n        fs.close(fd, function(err2) {\n          callback(err || err2)\n        })\n      })\n    })\n  }\n\n  fs.lchmodSync = function (path, mode) {\n    var fd = fs.openSync(path, constants.O_WRONLY | constants.O_SYMLINK, mode)\n\n    // prefer to return the chmod error, if one occurs,\n    // but still try to close, and report closing errors if they occur.\n    var err, err2\n    try {\n      var ret = fs.fchmodSync(fd, mode)\n    } catch (er) {\n      err = er\n    }\n    try {\n      fs.closeSync(fd)\n    } catch (er) {\n      err2 = er\n    }\n    if (err || err2) throw (err || err2)\n    return ret\n  }\n}\n\n\n// lutimes implementation, or no-op\nif (!fs.lutimes) {\n  if (constants.hasOwnProperty(\"O_SYMLINK\")) {\n    fs.lutimes = function (path, at, mt, cb) {\n      fs.open(path, constants.O_SYMLINK, function (er, fd) {\n        cb = cb || noop\n        if (er) return cb(er)\n        fs.futimes(fd, at, mt, function (er) {\n          fs.close(fd, function (er2) {\n            return cb(er || er2)\n          })\n        })\n      })\n    }\n\n    fs.lutimesSync = function (path, at, mt) {\n      var fd = fs.openSync(path, constants.O_SYMLINK)\n        , err\n        , err2\n        , ret\n\n      try {\n        var ret = fs.futimesSync(fd, at, mt)\n      } catch (er) {\n        err = er\n      }\n      try {\n        fs.closeSync(fd)\n      } catch (er) {\n        err2 = er\n      }\n      if (err || err2) throw (err || err2)\n      return ret\n    }\n\n  } else if (fs.utimensat && constants.hasOwnProperty(\"AT_SYMLINK_NOFOLLOW\")) {\n    // maybe utimensat will be bound soonish?\n    fs.lutimes = function (path, at, mt, cb) {\n      fs.utimensat(path, at, mt, constants.AT_SYMLINK_NOFOLLOW, cb)\n    }\n\n    fs.lutimesSync = function (path, at, mt) {\n      return fs.utimensatSync(path, at, mt, constants.AT_SYMLINK_NOFOLLOW)\n    }\n\n  } else {\n    fs.lutimes = function (_a, _b, _c, cb) { process.nextTick(cb) }\n    fs.lutimesSync = function () {}\n  }\n}\n\n\n// https://github.com/isaacs/node-graceful-fs/issues/4\n// Chown should not fail on einval or eperm if non-root.\n\nfs.chown = chownFix(fs.chown)\nfs.fchown = chownFix(fs.fchown)\nfs.lchown = chownFix(fs.lchown)\n\nfs.chownSync = chownFixSync(fs.chownSync)\nfs.fchownSync = chownFixSync(fs.fchownSync)\nfs.lchownSync = chownFixSync(fs.lchownSync)\n\nfunction chownFix (orig) {\n  if (!orig) return orig\n  return function (target, uid, gid, cb) {\n    return orig.call(fs, target, uid, gid, function (er, res) {\n      if (chownErOk(er)) er = null\n      cb(er, res)\n    })\n  }\n}\n\nfunction chownFixSync (orig) {\n  if (!orig) return orig\n  return function (target, uid, gid) {\n    try {\n      return orig.call(fs, target, uid, gid)\n    } catch (er) {\n      if (!chownErOk(er)) throw er\n    }\n  }\n}\n\nfunction chownErOk (er) {\n  // if there's no getuid, or if getuid() is something other than 0,\n  // and the error is EINVAL or EPERM, then just ignore it.\n  // This specific case is a silent failure in cp, install, tar,\n  // and most other unix tools that manage permissions.\n  // When running as root, or if other types of errors are encountered,\n  // then it's strict.\n  if (!er || (!process.getuid || process.getuid() !== 0)\n      && (er.code === \"EINVAL\" || er.code === \"EPERM\")) return true\n}\n\n\n// if lchmod/lchown do not exist, then make them no-ops\nif (!fs.lchmod) {\n  fs.lchmod = function (path, mode, cb) {\n    process.nextTick(cb)\n  }\n  fs.lchmodSync = function () {}\n}\nif (!fs.lchown) {\n  fs.lchown = function (path, uid, gid, cb) {\n    process.nextTick(cb)\n  }\n  fs.lchownSync = function () {}\n}\n\n\n\n// on Windows, A/V software can lock the directory, causing this\n// to fail with an EACCES or EPERM if the directory contains newly\n// created files.  Try again on failure, for up to 1 second.\nif (process.platform === \"win32\") {\n  var rename_ = fs.rename\n  fs.rename = function rename (from, to, cb) {\n    var start = Date.now()\n    rename_(from, to, function CB (er) {\n      if (er\n          && (er.code === \"EACCES\" || er.code === \"EPERM\")\n          && Date.now() - start < 1000) {\n        return rename_(from, to, CB)\n      }\n      cb(er)\n    })\n  }\n}\n\n\n// if read() returns EAGAIN, then just try it again.\nvar read = fs.read\nfs.read = function (fd, buffer, offset, length, position, callback_) {\n  var callback\n  if (callback_ && typeof callback_ === 'function') {\n    var eagCounter = 0\n    callback = function (er, _, __) {\n      if (er && er.code === 'EAGAIN' && eagCounter < 10) {\n        eagCounter ++\n        return read.call(fs, fd, buffer, offset, length, position, callback)\n      }\n      callback_.apply(this, arguments)\n    }\n  }\n  return read.call(fs, fd, buffer, offset, length, position, callback)\n}\n\nvar readSync = fs.readSync\nfs.readSync = function (fd, buffer, offset, length, position) {\n  var eagCounter = 0\n  while (true) {\n    try {\n      return readSync.call(fs, fd, buffer, offset, length, position)\n    } catch (er) {\n      if (er.code === 'EAGAIN' && eagCounter < 10) {\n        eagCounter ++\n        continue\n      }\n      throw er\n    }\n  }\n}\n\n","exports.name = \"minimatch\";\nexports.version = \"0.2.14\";\nexports.main = \"minimatch.js\";\n",";(function (require, exports, module, platform) {\n\nif (module) module.exports = minimatch\nelse exports.minimatch = minimatch\n\nif (!require) {\n  require = function (id) {\n    switch (id) {\n      case \"sigmund\": return function sigmund (obj) {\n        return JSON.stringify(obj)\n      }\n      case \"path\": return { basename: function (f) {\n        f = f.split(/[\\/\\\\]/)\n        var e = f.pop()\n        if (!e) e = f.pop()\n        return e\n      }}\n      case \"lru-cache\": return function LRUCache () {\n        // not quite an LRU, but still space-limited.\n        var cache = {}\n        var cnt = 0\n        this.set = function (k, v) {\n          cnt ++\n          if (cnt >= 100) cache = {}\n          cache[k] = v\n        }\n        this.get = function (k) { return cache[k] }\n      }\n    }\n  }\n}\n\nminimatch.Minimatch = Minimatch\n\nvar LRU = require(\"lru-cache\")\n  , cache = minimatch.cache = new LRU({max: 100})\n  , GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\n  , sigmund = require(\"sigmund\")\n\nvar path = require(\"path\")\n  // any single thing other than /\n  // don't need to escape / when using new RegExp()\n  , qmark = \"[^/]\"\n\n  // * => any number of characters\n  , star = qmark + \"*?\"\n\n  // ** when dots are allowed.  Anything goes, except .. and .\n  // not (^ or / followed by one or two dots followed by $ or /),\n  // followed by anything, any number of times.\n  , twoStarDot = \"(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?\"\n\n  // not a ^ or / followed by a dot,\n  // followed by anything, any number of times.\n  , twoStarNoDot = \"(?:(?!(?:\\\\\\/|^)\\\\.).)*?\"\n\n  // characters that need to be escaped in RegExp.\n  , reSpecials = charSet(\"().*{}+?[]^$\\\\!\")\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split(\"\").reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  a = a || {}\n  b = b || {}\n  var t = {}\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return minimatch\n\n  var orig = minimatch\n\n  var m = function minimatch (p, pattern, options) {\n    return orig.minimatch(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return Minimatch\n  return minimatch.defaults(def).Minimatch\n}\n\n\nfunction minimatch (p, pattern, options) {\n  if (typeof pattern !== \"string\") {\n    throw new TypeError(\"glob pattern string required\")\n  }\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === \"#\") {\n    return false\n  }\n\n  // \"\" only matches \"\"\n  if (pattern.trim() === \"\") return p === \"\"\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options, cache)\n  }\n\n  if (typeof pattern !== \"string\") {\n    throw new TypeError(\"glob pattern string required\")\n  }\n\n  if (!options) options = {}\n  pattern = pattern.trim()\n\n  // windows: need to use /, not \\\n  // On other platforms, \\ is a valid (albeit bad) filename char.\n  if (platform === \"win32\") {\n    pattern = pattern.split(\"\\\\\").join(\"/\")\n  }\n\n  // lru storage.\n  // these things aren't particularly big, but walking down the string\n  // and turning it into a regexp can get pretty costly.\n  var cacheKey = pattern + \"\\n\" + sigmund(options)\n  var cached = minimatch.cache.get(cacheKey)\n  if (cached) return cached\n  minimatch.cache.set(cacheKey, this)\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function() {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  // don't do it more than once.\n  if (this._made) return\n\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === \"#\") {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = console.error\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return -1 === s.indexOf(false)\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n    , negate = false\n    , options = this.options\n    , negateOffset = 0\n\n  if (options.nonegate) return\n\n  for ( var i = 0, l = pattern.length\n      ; i < l && pattern.charAt(i) === \"!\"\n      ; i ++) {\n    negate = !negate\n    negateOffset ++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return new Minimatch(pattern, options).braceExpand()\n}\n\nMinimatch.prototype.braceExpand = braceExpand\nfunction braceExpand (pattern, options) {\n  options = options || this.options\n  pattern = typeof pattern === \"undefined\"\n    ? this.pattern : pattern\n\n  if (typeof pattern === \"undefined\") {\n    throw new Error(\"undefined pattern\")\n  }\n\n  if (options.nobrace ||\n      !pattern.match(/\\{.*\\}/)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  var escaping = false\n\n  // examples and comments refer to this crazy pattern:\n  // a{b,c{d,e},{f,g}h}x{y,z}\n  // expected:\n  // abxy\n  // abxz\n  // acdxy\n  // acdxz\n  // acexy\n  // acexz\n  // afhxy\n  // afhxz\n  // aghxy\n  // aghxz\n\n  // everything before the first \\{ is just a prefix.\n  // So, we pluck that off, and work with the rest,\n  // and then prepend it to everything we find.\n  if (pattern.charAt(0) !== \"{\") {\n    this.debug(pattern)\n    var prefix = null\n    for (var i = 0, l = pattern.length; i < l; i ++) {\n      var c = pattern.charAt(i)\n      this.debug(i, c)\n      if (c === \"\\\\\") {\n        escaping = !escaping\n      } else if (c === \"{\" && !escaping) {\n        prefix = pattern.substr(0, i)\n        break\n      }\n    }\n\n    // actually no sets, all { were escaped.\n    if (prefix === null) {\n      this.debug(\"no sets\")\n      return [pattern]\n    }\n\n   var tail = braceExpand.call(this, pattern.substr(i), options)\n    return tail.map(function (t) {\n      return prefix + t\n    })\n  }\n\n  // now we have something like:\n  // {b,c{d,e},{f,g}h}x{y,z}\n  // walk through the set, expanding each part, until\n  // the set ends.  then, we'll expand the suffix.\n  // If the set only has a single member, then'll put the {} back\n\n  // first, handle numeric sets, since they're easier\n  var numset = pattern.match(/^\\{(-?[0-9]+)\\.\\.(-?[0-9]+)\\}/)\n  if (numset) {\n    this.debug(\"numset\", numset[1], numset[2])\n    var suf = braceExpand.call(this, pattern.substr(numset[0].length), options)\n      , start = +numset[1]\n      , end = +numset[2]\n      , inc = start > end ? -1 : 1\n      , set = []\n    for (var i = start; i != (end + inc); i += inc) {\n      // append all the suffixes\n      for (var ii = 0, ll = suf.length; ii < ll; ii ++) {\n        set.push(i + suf[ii])\n      }\n    }\n    return set\n  }\n\n  // ok, walk through the set\n  // We hope, somewhat optimistically, that there\n  // will be a } at the end.\n  // If the closing brace isn't found, then the pattern is\n  // interpreted as braceExpand(\"\\\\\" + pattern) so that\n  // the leading \\{ will be interpreted literally.\n  var i = 1 // skip the \\{\n    , depth = 1\n    , set = []\n    , member = \"\"\n    , sawEnd = false\n    , escaping = false\n\n  function addMember () {\n    set.push(member)\n    member = \"\"\n  }\n\n  this.debug(\"Entering for\")\n  FOR: for (i = 1, l = pattern.length; i < l; i ++) {\n    var c = pattern.charAt(i)\n    this.debug(\"\", i, c)\n\n    if (escaping) {\n      escaping = false\n      member += \"\\\\\" + c\n    } else {\n      switch (c) {\n        case \"\\\\\":\n          escaping = true\n          continue\n\n        case \"{\":\n          depth ++\n          member += \"{\"\n          continue\n\n        case \"}\":\n          depth --\n          // if this closes the actual set, then we're done\n          if (depth === 0) {\n            addMember()\n            // pluck off the close-brace\n            i ++\n            break FOR\n          } else {\n            member += c\n            continue\n          }\n\n        case \",\":\n          if (depth === 1) {\n            addMember()\n          } else {\n            member += c\n          }\n          continue\n\n        default:\n          member += c\n          continue\n      } // switch\n    } // else\n  } // for\n\n  // now we've either finished the set, and the suffix is\n  // pattern.substr(i), or we have *not* closed the set,\n  // and need to escape the leading brace\n  if (depth !== 0) {\n    this.debug(\"didn't close\", pattern)\n    return braceExpand.call(this, \"\\\\\" + pattern, options)\n  }\n\n  // x{y,z} -> [\"xy\", \"xz\"]\n  this.debug(\"set\", set)\n  this.debug(\"suffix\", pattern.substr(i))\n  var suf = braceExpand.call(this, pattern.substr(i), options)\n  // [\"b\", \"c{d,e}\",\"{f,g}h\"] ->\n  //   [[\"b\"], [\"cd\", \"ce\"], [\"fh\", \"gh\"]]\n  var addBraces = set.length === 1\n  this.debug(\"set pre-expanded\", set)\n  set = set.map(function (p) {\n    return braceExpand.call(this, p, options)\n  }, this)\n  this.debug(\"set expanded\", set)\n\n\n  // [[\"b\"], [\"cd\", \"ce\"], [\"fh\", \"gh\"]] ->\n  //   [\"b\", \"cd\", \"ce\", \"fh\", \"gh\"]\n  set = set.reduce(function (l, r) {\n    return l.concat(r)\n  })\n\n  if (addBraces) {\n    set = set.map(function (s) {\n      return \"{\" + s + \"}\"\n    })\n  }\n\n  // now attach the suffixes.\n  var ret = []\n  for (var i = 0, l = set.length; i < l; i ++) {\n    for (var ii = 0, ll = suf.length; ii < ll; ii ++) {\n      ret.push(set[i] + suf[ii])\n    }\n  }\n  return ret\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nvar SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  var options = this.options\n\n  // shortcuts\n  if (!options.noglobstar && pattern === \"**\") return GLOBSTAR\n  if (pattern === \"\") return \"\"\n\n  var re = \"\"\n    , hasMagic = !!options.nocase\n    , escaping = false\n    // ? => one single character\n    , patternListStack = []\n    , plType\n    , stateChar\n    , inClass = false\n    , reClassStart = -1\n    , classStart = -1\n    // . and .. never match anything that doesn't start with .,\n    // even when options.dot is set.\n    , patternStart = pattern.charAt(0) === \".\" ? \"\" // anything\n      // not (start or / followed by . or .. followed by / or end)\n      : options.dot ? \"(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))\"\n      : \"(?!\\\\.)\"\n    , self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case \"*\":\n          re += star\n          hasMagic = true\n          break\n        case \"?\":\n          re += qmark\n          hasMagic = true\n          break\n        default:\n          re += \"\\\\\"+stateChar\n          break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for ( var i = 0, len = pattern.length, c\n      ; (i < len) && (c = pattern.charAt(i))\n      ; i ++ ) {\n\n    this.debug(\"%s\\t%s %s %j\", pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += \"\\\\\" + c\n      escaping = false\n      continue\n    }\n\n    SWITCH: switch (c) {\n      case \"/\":\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n\n      case \"\\\\\":\n        clearStateChar()\n        escaping = true\n        continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case \"?\":\n      case \"*\":\n      case \"+\":\n      case \"@\":\n      case \"!\":\n        this.debug(\"%s\\t%s %s %j <-- stateChar\", pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === \"!\" && i === classStart + 1) c = \"^\"\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n        continue\n\n      case \"(\":\n        if (inClass) {\n          re += \"(\"\n          continue\n        }\n\n        if (!stateChar) {\n          re += \"\\\\(\"\n          continue\n        }\n\n        plType = stateChar\n        patternListStack.push({ type: plType\n                              , start: i - 1\n                              , reStart: re.length })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === \"!\" ? \"(?:(?!\" : \"(?:\"\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n        continue\n\n      case \")\":\n        if (inClass || !patternListStack.length) {\n          re += \"\\\\)\"\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        re += \")\"\n        plType = patternListStack.pop().type\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        switch (plType) {\n          case \"!\":\n            re += \"[^/]*?)\"\n            break\n          case \"?\":\n          case \"+\":\n          case \"*\": re += plType\n          case \"@\": break // the default anyway\n        }\n        continue\n\n      case \"|\":\n        if (inClass || !patternListStack.length || escaping) {\n          re += \"\\\\|\"\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += \"|\"\n        continue\n\n      // these are mostly the same in regexp and glob\n      case \"[\":\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += \"\\\\\" + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n        continue\n\n      case \"]\":\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += \"\\\\\" + c\n          escaping = false\n          continue\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n        continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n                   && !(c === \"^\" && inClass)) {\n          re += \"\\\\\"\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    var cs = pattern.substr(classStart + 1)\n      , sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + \"\\\\[\" + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  var pl\n  while (pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + 3)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2})*)(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = \"\\\\\"\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + \"|\"\n    })\n\n    this.debug(\"tail=%j\\n   %s\", tail, tail)\n    var t = pl.type === \"*\" ? star\n          : pl.type === \"?\" ? qmark\n          : \"\\\\\" + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart)\n       + t + \"\\\\(\"\n       + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += \"\\\\\\\\\"\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case \".\":\n    case \"[\":\n    case \"(\": addPatternStart = true\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== \"\" && hasMagic) re = \"(?=.)\" + re\n\n  if (addPatternStart) re = patternStart + re\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [ re, hasMagic ]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? \"i\" : \"\"\n    , regExp = new RegExp(\"^\" + re + \"$\", flags)\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) return this.regexp = false\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n      : options.dot ? twoStarDot\n      : twoStarNoDot\n    , flags = options.nocase ? \"i\" : \"\"\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n           : (typeof p === \"string\") ? regExpEscape(p)\n           : p._src\n    }).join(\"\\\\\\/\")\n  }).join(\"|\")\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = \"^(?:\" + re + \")$\"\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = \"^(?!\" + re + \").*$\"\n\n  try {\n    return this.regexp = new RegExp(re, flags)\n  } catch (ex) {\n    return this.regexp = false\n  }\n}\n\nminimatch.match = function (list, pattern, options) {\n  var mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = match\nfunction match (f, partial) {\n  this.debug(\"match\", f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === \"\"\n\n  if (f === \"/\" && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  // On other platforms, \\ is a valid (albeit bad) filename char.\n  if (platform === \"win32\") {\n    f = f.split(\"\\\\\").join(\"/\")\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, \"split\", f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, \"set\", set)\n\n  var splitFile = path.basename(f.join(\"/\")).split(\"/\")\n\n  for (var i = 0, l = set.length; i < l; i ++) {\n    var pattern = set[i], file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = splitFile\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug(\"matchOne\",\n              { \"this\": this\n              , file: file\n              , pattern: pattern })\n\n  this.debug(\"matchOne\", file.length, pattern.length)\n\n  for ( var fi = 0\n          , pi = 0\n          , fl = file.length\n          , pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi ++, pi ++ ) {\n\n    this.debug(\"matchOne loop\")\n    var p = pattern[pi]\n      , f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n        , pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for ( ; fi < fl; fi ++) {\n          if (file[fi] === \".\" || file[fi] === \"..\" ||\n              (!options.dot && file[fi].charAt(0) === \".\")) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      WHILE: while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while',\n                    file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === \".\" || swallowee === \"..\" ||\n              (!options.dot && swallowee.charAt(0) === \".\")) {\n            this.debug(\"dot detected!\", file, fr, pattern, pr)\n            break WHILE\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr ++\n        }\n      }\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then \n      if (partial) {\n        // ran out of file\n        this.debug(\"\\n>>> no match, partial?\", file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === \"string\") {\n      if (options.nocase) {\n        hit = f.toLowerCase() === p.toLowerCase()\n      } else {\n        hit = f === p\n      }\n      this.debug(\"string match\", p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug(\"pattern match\", p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    var emptyFileEnd = (fi === fl - 1) && (file[fi] === \"\")\n    return emptyFileEnd\n  }\n\n  // should be unreachable.\n  throw new Error(\"wtf?\")\n}\n\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, \"$1\")\n}\n\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\")\n}\n\n})( typeof require === \"function\" ? require : null,\n    this,\n    typeof module === \"object\" ? module : null,\n    typeof process === \"object\" ? process.platform : \"win32\"\n  )\n","exports.name = \"lru-cache\";\nexports.version = \"2.7.3\";\nexports.main = \"lib/lru-cache.js\";\n",";(function () { // closure for web browsers\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = LRUCache\n} else {\n  // just set the global for non-node platforms.\n  this.LRUCache = LRUCache\n}\n\nfunction hOP (obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key)\n}\n\nfunction naiveLength () { return 1 }\n\nvar didTypeWarning = false\nfunction typeCheckKey(key) {\n  if (!didTypeWarning && typeof key !== 'string' && typeof key !== 'number') {\n    didTypeWarning = true\n    console.error(new TypeError(\"LRU: key must be a string or number. Almost certainly a bug! \" + typeof key).stack)\n  }\n}\n\nfunction LRUCache (options) {\n  if (!(this instanceof LRUCache))\n    return new LRUCache(options)\n\n  if (typeof options === 'number')\n    options = { max: options }\n\n  if (!options)\n    options = {}\n\n  this._max = options.max\n  // Kind of weird to have a default max of Infinity, but oh well.\n  if (!this._max || !(typeof this._max === \"number\") || this._max <= 0 )\n    this._max = Infinity\n\n  this._lengthCalculator = options.length || naiveLength\n  if (typeof this._lengthCalculator !== \"function\")\n    this._lengthCalculator = naiveLength\n\n  this._allowStale = options.stale || false\n  this._maxAge = options.maxAge || null\n  this._dispose = options.dispose\n  this.reset()\n}\n\n// resize the cache when the max changes.\nObject.defineProperty(LRUCache.prototype, \"max\",\n  { set : function (mL) {\n      if (!mL || !(typeof mL === \"number\") || mL <= 0 ) mL = Infinity\n      this._max = mL\n      if (this._length > this._max) trim(this)\n    }\n  , get : function () { return this._max }\n  , enumerable : true\n  })\n\n// resize the cache when the lengthCalculator changes.\nObject.defineProperty(LRUCache.prototype, \"lengthCalculator\",\n  { set : function (lC) {\n      if (typeof lC !== \"function\") {\n        this._lengthCalculator = naiveLength\n        this._length = this._itemCount\n        for (var key in this._cache) {\n          this._cache[key].length = 1\n        }\n      } else {\n        this._lengthCalculator = lC\n        this._length = 0\n        for (var key in this._cache) {\n          this._cache[key].length = this._lengthCalculator(this._cache[key].value)\n          this._length += this._cache[key].length\n        }\n      }\n\n      if (this._length > this._max) trim(this)\n    }\n  , get : function () { return this._lengthCalculator }\n  , enumerable : true\n  })\n\nObject.defineProperty(LRUCache.prototype, \"length\",\n  { get : function () { return this._length }\n  , enumerable : true\n  })\n\n\nObject.defineProperty(LRUCache.prototype, \"itemCount\",\n  { get : function () { return this._itemCount }\n  , enumerable : true\n  })\n\nLRUCache.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  var i = 0\n  var itemCount = this._itemCount\n\n  for (var k = this._mru - 1; k >= 0 && i < itemCount; k--) if (this._lruList[k]) {\n    i++\n    var hit = this._lruList[k]\n    if (isStale(this, hit)) {\n      del(this, hit)\n      if (!this._allowStale) hit = undefined\n    }\n    if (hit) {\n      fn.call(thisp, hit.value, hit.key, this)\n    }\n  }\n}\n\nLRUCache.prototype.keys = function () {\n  var keys = new Array(this._itemCount)\n  var i = 0\n  for (var k = this._mru - 1; k >= 0 && i < this._itemCount; k--) if (this._lruList[k]) {\n    var hit = this._lruList[k]\n    keys[i++] = hit.key\n  }\n  return keys\n}\n\nLRUCache.prototype.values = function () {\n  var values = new Array(this._itemCount)\n  var i = 0\n  for (var k = this._mru - 1; k >= 0 && i < this._itemCount; k--) if (this._lruList[k]) {\n    var hit = this._lruList[k]\n    values[i++] = hit.value\n  }\n  return values\n}\n\nLRUCache.prototype.reset = function () {\n  if (this._dispose && this._cache) {\n    for (var k in this._cache) {\n      this._dispose(k, this._cache[k].value)\n    }\n  }\n\n  this._cache = Object.create(null) // hash of items by key\n  this._lruList = Object.create(null) // list of items in order of use recency\n  this._mru = 0 // most recently used\n  this._lru = 0 // least recently used\n  this._length = 0 // number of items in the list\n  this._itemCount = 0\n}\n\nLRUCache.prototype.dump = function () {\n  var arr = []\n  var i = 0\n\n  for (var k = this._mru - 1; k >= 0 && i < this._itemCount; k--) if (this._lruList[k]) {\n    var hit = this._lruList[k]\n    if (!isStale(this, hit)) {\n      //Do not store staled hits\n      ++i\n      arr.push({\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      });\n    }\n  }\n  //arr has the most read first\n  return arr\n}\n\nLRUCache.prototype.dumpLru = function () {\n  return this._lruList\n}\n\nLRUCache.prototype.set = function (key, value, maxAge) {\n  maxAge = maxAge || this._maxAge\n  typeCheckKey(key)\n\n  var now = maxAge ? Date.now() : 0\n  var len = this._lengthCalculator(value)\n\n  if (hOP(this._cache, key)) {\n    if (len > this._max) {\n      del(this, this._cache[key])\n      return false\n    }\n    // dispose of the old one before overwriting\n    if (this._dispose)\n      this._dispose(key, this._cache[key].value)\n\n    this._cache[key].now = now\n    this._cache[key].maxAge = maxAge\n    this._cache[key].value = value\n    this._length += (len - this._cache[key].length)\n    this._cache[key].length = len\n    this.get(key)\n\n    if (this._length > this._max)\n      trim(this)\n\n    return true\n  }\n\n  var hit = new Entry(key, value, this._mru++, len, now, maxAge)\n\n  // oversized objects fall out of cache automatically.\n  if (hit.length > this._max) {\n    if (this._dispose) this._dispose(key, value)\n    return false\n  }\n\n  this._length += hit.length\n  this._lruList[hit.lu] = this._cache[key] = hit\n  this._itemCount ++\n\n  if (this._length > this._max)\n    trim(this)\n\n  return true\n}\n\nLRUCache.prototype.has = function (key) {\n  typeCheckKey(key)\n  if (!hOP(this._cache, key)) return false\n  var hit = this._cache[key]\n  if (isStale(this, hit)) {\n    return false\n  }\n  return true\n}\n\nLRUCache.prototype.get = function (key) {\n  typeCheckKey(key)\n  return get(this, key, true)\n}\n\nLRUCache.prototype.peek = function (key) {\n  typeCheckKey(key)\n  return get(this, key, false)\n}\n\nLRUCache.prototype.pop = function () {\n  var hit = this._lruList[this._lru]\n  del(this, hit)\n  return hit || null\n}\n\nLRUCache.prototype.del = function (key) {\n  typeCheckKey(key)\n  del(this, this._cache[key])\n}\n\nLRUCache.prototype.load = function (arr) {\n  //reset the cache\n  this.reset();\n\n  var now = Date.now()\n  //A previous serialized cache has the most recent items first\n  for (var l = arr.length - 1; l >= 0; l-- ) {\n    var hit = arr[l]\n    typeCheckKey(hit.k)\n    var expiresAt = hit.e || 0\n    if (expiresAt === 0) {\n      //the item was created without expiration in a non aged cache\n      this.set(hit.k, hit.v)\n    } else {\n      var maxAge = expiresAt - now\n      //dont add already expired items\n      if (maxAge > 0) this.set(hit.k, hit.v, maxAge)\n    }\n  }\n}\n\nfunction get (self, key, doUse) {\n  typeCheckKey(key)\n  var hit = self._cache[key]\n  if (hit) {\n    if (isStale(self, hit)) {\n      del(self, hit)\n      if (!self._allowStale) hit = undefined\n    } else {\n      if (doUse) use(self, hit)\n    }\n    if (hit) hit = hit.value\n  }\n  return hit\n}\n\nfunction isStale(self, hit) {\n  if (!hit || (!hit.maxAge && !self._maxAge)) return false\n  var stale = false;\n  var diff = Date.now() - hit.now\n  if (hit.maxAge) {\n    stale = diff > hit.maxAge\n  } else {\n    stale = self._maxAge && (diff > self._maxAge)\n  }\n  return stale;\n}\n\nfunction use (self, hit) {\n  shiftLU(self, hit)\n  hit.lu = self._mru ++\n  self._lruList[hit.lu] = hit\n}\n\nfunction trim (self) {\n  while (self._lru < self._mru && self._length > self._max)\n    del(self, self._lruList[self._lru])\n}\n\nfunction shiftLU (self, hit) {\n  delete self._lruList[ hit.lu ]\n  while (self._lru < self._mru && !self._lruList[self._lru]) self._lru ++\n}\n\nfunction del (self, hit) {\n  if (hit) {\n    if (self._dispose) self._dispose(hit.key, hit.value)\n    self._length -= hit.length\n    self._itemCount --\n    delete self._cache[ hit.key ]\n    shiftLU(self, hit)\n  }\n}\n\n// classy, since V8 prefers predictable objects.\nfunction Entry (key, value, lu, length, now, maxAge) {\n  this.key = key\n  this.value = value\n  this.lu = lu\n  this.length = length\n  this.now = now\n  if (maxAge) this.maxAge = maxAge\n}\n\n})()\n","exports.name = \"sigmund\";\nexports.version = \"1.0.1\";\nexports.main = \"sigmund.js\";\n","module.exports = sigmund\nfunction sigmund (subject, maxSessions) {\n    maxSessions = maxSessions || 10;\n    var notes = [];\n    var analysis = '';\n    var RE = RegExp;\n\n    function psychoAnalyze (subject, session) {\n        if (session > maxSessions) return;\n\n        if (typeof subject === 'function' ||\n            typeof subject === 'undefined') {\n            return;\n        }\n\n        if (typeof subject !== 'object' || !subject ||\n            (subject instanceof RE)) {\n            analysis += subject;\n            return;\n        }\n\n        if (notes.indexOf(subject) !== -1 || session === maxSessions) return;\n\n        notes.push(subject);\n        analysis += '{';\n        Object.keys(subject).forEach(function (issue, _, __) {\n            // pseudo-private values.  skip those.\n            if (issue.charAt(0) === '_') return;\n            var to = typeof subject[issue];\n            if (to === 'function' || to === 'undefined') return;\n            analysis += issue;\n            psychoAnalyze(subject[issue], session + 1);\n        });\n    }\n    psychoAnalyze(subject, 0);\n    return analysis;\n}\n\n// vim: set softtabstop=4 shiftwidth=4:\n","exports.name = \"inherits\";\nexports.version = \"2.0.1\";\nexports.main = \"./inherits.js\";\n","module.exports = require('util').inherits\n","exports.name = \"diff\";\nexports.version = \"1.4.0\";\nexports.main = \"./diff\";\n","/* See LICENSE file for terms of use */\n\n/*\n * Text diff implementation.\n *\n * This library supports the following APIS:\n * JsDiff.diffChars: Character by character diff\n * JsDiff.diffWords: Word (as defined by \\b regex) diff which ignores whitespace\n * JsDiff.diffLines: Line based diff\n *\n * JsDiff.diffCss: Diff targeted at CSS content\n *\n * These methods are based on the implementation proposed in\n * \"An O(ND) Difference Algorithm and its Variations\" (Myers, 1986).\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.4.6927\n */\n(function(global, undefined) {\n  var objectPrototypeToString = Object.prototype.toString;\n\n  /*istanbul ignore next*/\n  function map(arr, mapper, that) {\n    if (Array.prototype.map) {\n      return Array.prototype.map.call(arr, mapper, that);\n    }\n\n    var other = new Array(arr.length);\n\n    for (var i = 0, n = arr.length; i < n; i++) {\n      other[i] = mapper.call(that, arr[i], i, arr);\n    }\n    return other;\n  }\n  function clonePath(path) {\n    return { newPos: path.newPos, components: path.components.slice(0) };\n  }\n  function removeEmpty(array) {\n    var ret = [];\n    for (var i = 0; i < array.length; i++) {\n      if (array[i]) {\n        ret.push(array[i]);\n      }\n    }\n    return ret;\n  }\n  function escapeHTML(s) {\n    var n = s;\n    n = n.replace(/&/g, '&amp;');\n    n = n.replace(/</g, '&lt;');\n    n = n.replace(/>/g, '&gt;');\n    n = n.replace(/\"/g, '&quot;');\n\n    return n;\n  }\n\n  // This function handles the presence of circular references by bailing out when encountering an\n  // object that is already on the \"stack\" of items being processed.\n  function canonicalize(obj, stack, replacementStack) {\n    stack = stack || [];\n    replacementStack = replacementStack || [];\n\n    var i;\n\n    for (i = 0; i < stack.length; i += 1) {\n      if (stack[i] === obj) {\n        return replacementStack[i];\n      }\n    }\n\n    var canonicalizedObj;\n\n    if ('[object Array]' === objectPrototypeToString.call(obj)) {\n      stack.push(obj);\n      canonicalizedObj = new Array(obj.length);\n      replacementStack.push(canonicalizedObj);\n      for (i = 0; i < obj.length; i += 1) {\n        canonicalizedObj[i] = canonicalize(obj[i], stack, replacementStack);\n      }\n      stack.pop();\n      replacementStack.pop();\n    } else if (typeof obj === 'object' && obj !== null) {\n      stack.push(obj);\n      canonicalizedObj = {};\n      replacementStack.push(canonicalizedObj);\n      var sortedKeys = [],\n          key;\n      for (key in obj) {\n        sortedKeys.push(key);\n      }\n      sortedKeys.sort();\n      for (i = 0; i < sortedKeys.length; i += 1) {\n        key = sortedKeys[i];\n        canonicalizedObj[key] = canonicalize(obj[key], stack, replacementStack);\n      }\n      stack.pop();\n      replacementStack.pop();\n    } else {\n      canonicalizedObj = obj;\n    }\n    return canonicalizedObj;\n  }\n\n  function buildValues(components, newString, oldString, useLongestToken) {\n    var componentPos = 0,\n        componentLen = components.length,\n        newPos = 0,\n        oldPos = 0;\n\n    for (; componentPos < componentLen; componentPos++) {\n      var component = components[componentPos];\n      if (!component.removed) {\n        if (!component.added && useLongestToken) {\n          var value = newString.slice(newPos, newPos + component.count);\n          value = map(value, function(value, i) {\n            var oldValue = oldString[oldPos + i];\n            return oldValue.length > value.length ? oldValue : value;\n          });\n\n          component.value = value.join('');\n        } else {\n          component.value = newString.slice(newPos, newPos + component.count).join('');\n        }\n        newPos += component.count;\n\n        // Common case\n        if (!component.added) {\n          oldPos += component.count;\n        }\n      } else {\n        component.value = oldString.slice(oldPos, oldPos + component.count).join('');\n        oldPos += component.count;\n\n        // Reverse add and remove so removes are output first to match common convention\n        // The diffing algorithm is tied to add then remove output and this is the simplest\n        // route to get the desired output with minimal overhead.\n        if (componentPos && components[componentPos - 1].added) {\n          var tmp = components[componentPos - 1];\n          components[componentPos - 1] = components[componentPos];\n          components[componentPos] = tmp;\n        }\n      }\n    }\n\n    return components;\n  }\n\n  function Diff(ignoreWhitespace) {\n    this.ignoreWhitespace = ignoreWhitespace;\n  }\n  Diff.prototype = {\n    diff: function(oldString, newString, callback) {\n      var self = this;\n\n      function done(value) {\n        if (callback) {\n          setTimeout(function() { callback(undefined, value); }, 0);\n          return true;\n        } else {\n          return value;\n        }\n      }\n\n      // Handle the identity case (this is due to unrolling editLength == 0\n      if (newString === oldString) {\n        return done([{ value: newString }]);\n      }\n      if (!newString) {\n        return done([{ value: oldString, removed: true }]);\n      }\n      if (!oldString) {\n        return done([{ value: newString, added: true }]);\n      }\n\n      newString = this.tokenize(newString);\n      oldString = this.tokenize(oldString);\n\n      var newLen = newString.length, oldLen = oldString.length;\n      var editLength = 1;\n      var maxEditLength = newLen + oldLen;\n      var bestPath = [{ newPos: -1, components: [] }];\n\n      // Seed editLength = 0, i.e. the content starts with the same values\n      var oldPos = this.extractCommon(bestPath[0], newString, oldString, 0);\n      if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n        // Identity per the equality and tokenizer\n        return done([{value: newString.join('')}]);\n      }\n\n      // Main worker method. checks all permutations of a given edit length for acceptance.\n      function execEditLength() {\n        for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n          var basePath;\n          var addPath = bestPath[diagonalPath - 1],\n              removePath = bestPath[diagonalPath + 1],\n              oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n          if (addPath) {\n            // No one else is going to attempt to use this value, clear it\n            bestPath[diagonalPath - 1] = undefined;\n          }\n\n          var canAdd = addPath && addPath.newPos + 1 < newLen,\n              canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\n          if (!canAdd && !canRemove) {\n            // If this path is a terminal then prune\n            bestPath[diagonalPath] = undefined;\n            continue;\n          }\n\n          // Select the diagonal that we want to branch from. We select the prior\n          // path whose position in the new string is the farthest from the origin\n          // and does not pass the bounds of the diff graph\n          if (!canAdd || (canRemove && addPath.newPos < removePath.newPos)) {\n            basePath = clonePath(removePath);\n            self.pushComponent(basePath.components, undefined, true);\n          } else {\n            basePath = addPath;   // No need to clone, we've pulled it from the list\n            basePath.newPos++;\n            self.pushComponent(basePath.components, true, undefined);\n          }\n\n          oldPos = self.extractCommon(basePath, newString, oldString, diagonalPath);\n\n          // If we have hit the end of both strings, then we are done\n          if (basePath.newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n            return done(buildValues(basePath.components, newString, oldString, self.useLongestToken));\n          } else {\n            // Otherwise track this path as a potential candidate and continue.\n            bestPath[diagonalPath] = basePath;\n          }\n        }\n\n        editLength++;\n      }\n\n      // Performs the length of edit iteration. Is a bit fugly as this has to support the\n      // sync and async mode which is never fun. Loops over execEditLength until a value\n      // is produced.\n      if (callback) {\n        (function exec() {\n          setTimeout(function() {\n            // This should not happen, but we want to be safe.\n            /*istanbul ignore next */\n            if (editLength > maxEditLength) {\n              return callback();\n            }\n\n            if (!execEditLength()) {\n              exec();\n            }\n          }, 0);\n        }());\n      } else {\n        while (editLength <= maxEditLength) {\n          var ret = execEditLength();\n          if (ret) {\n            return ret;\n          }\n        }\n      }\n    },\n\n    pushComponent: function(components, added, removed) {\n      var last = components[components.length - 1];\n      if (last && last.added === added && last.removed === removed) {\n        // We need to clone here as the component clone operation is just\n        // as shallow array clone\n        components[components.length - 1] = {count: last.count + 1, added: added, removed: removed };\n      } else {\n        components.push({count: 1, added: added, removed: removed });\n      }\n    },\n    extractCommon: function(basePath, newString, oldString, diagonalPath) {\n      var newLen = newString.length,\n          oldLen = oldString.length,\n          newPos = basePath.newPos,\n          oldPos = newPos - diagonalPath,\n\n          commonCount = 0;\n      while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newString[newPos + 1], oldString[oldPos + 1])) {\n        newPos++;\n        oldPos++;\n        commonCount++;\n      }\n\n      if (commonCount) {\n        basePath.components.push({count: commonCount});\n      }\n\n      basePath.newPos = newPos;\n      return oldPos;\n    },\n\n    equals: function(left, right) {\n      var reWhitespace = /\\S/;\n      return left === right || (this.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right));\n    },\n    tokenize: function(value) {\n      return value.split('');\n    }\n  };\n\n  var CharDiff = new Diff();\n\n  var WordDiff = new Diff(true);\n  var WordWithSpaceDiff = new Diff();\n  WordDiff.tokenize = WordWithSpaceDiff.tokenize = function(value) {\n    return removeEmpty(value.split(/(\\s+|\\b)/));\n  };\n\n  var CssDiff = new Diff(true);\n  CssDiff.tokenize = function(value) {\n    return removeEmpty(value.split(/([{}:;,]|\\s+)/));\n  };\n\n  var LineDiff = new Diff();\n\n  var TrimmedLineDiff = new Diff();\n  TrimmedLineDiff.ignoreTrim = true;\n\n  LineDiff.tokenize = TrimmedLineDiff.tokenize = function(value) {\n    var retLines = [],\n        lines = value.split(/^/m);\n    for (var i = 0; i < lines.length; i++) {\n      var line = lines[i],\n          lastLine = lines[i - 1],\n          lastLineLastChar = lastLine && lastLine[lastLine.length - 1];\n\n      // Merge lines that may contain windows new lines\n      if (line === '\\n' && lastLineLastChar === '\\r') {\n          retLines[retLines.length - 1] = retLines[retLines.length - 1].slice(0, -1) + '\\r\\n';\n      } else {\n        if (this.ignoreTrim) {\n          line = line.trim();\n          // add a newline unless this is the last line.\n          if (i < lines.length - 1) {\n            line += '\\n';\n          }\n        }\n        retLines.push(line);\n      }\n    }\n\n    return retLines;\n  };\n\n  var PatchDiff = new Diff();\n  PatchDiff.tokenize = function(value) {\n    var ret = [],\n        linesAndNewlines = value.split(/(\\n|\\r\\n)/);\n\n    // Ignore the final empty token that occurs if the string ends with a new line\n    if (!linesAndNewlines[linesAndNewlines.length - 1]) {\n      linesAndNewlines.pop();\n    }\n\n    // Merge the content and line separators into single tokens\n    for (var i = 0; i < linesAndNewlines.length; i++) {\n      var line = linesAndNewlines[i];\n\n      if (i % 2) {\n        ret[ret.length - 1] += line;\n      } else {\n        ret.push(line);\n      }\n    }\n    return ret;\n  };\n\n  var SentenceDiff = new Diff();\n  SentenceDiff.tokenize = function(value) {\n    return removeEmpty(value.split(/(\\S.+?[.!?])(?=\\s+|$)/));\n  };\n\n  var JsonDiff = new Diff();\n  // Discriminate between two lines of pretty-printed, serialized JSON where one of them has a\n  // dangling comma and the other doesn't. Turns out including the dangling comma yields the nicest output:\n  JsonDiff.useLongestToken = true;\n  JsonDiff.tokenize = LineDiff.tokenize;\n  JsonDiff.equals = function(left, right) {\n    return LineDiff.equals(left.replace(/,([\\r\\n])/g, '$1'), right.replace(/,([\\r\\n])/g, '$1'));\n  };\n\n  var JsDiff = {\n    Diff: Diff,\n\n    diffChars: function(oldStr, newStr, callback) { return CharDiff.diff(oldStr, newStr, callback); },\n    diffWords: function(oldStr, newStr, callback) { return WordDiff.diff(oldStr, newStr, callback); },\n    diffWordsWithSpace: function(oldStr, newStr, callback) { return WordWithSpaceDiff.diff(oldStr, newStr, callback); },\n    diffLines: function(oldStr, newStr, callback) { return LineDiff.diff(oldStr, newStr, callback); },\n    diffTrimmedLines: function(oldStr, newStr, callback) { return TrimmedLineDiff.diff(oldStr, newStr, callback); },\n\n    diffSentences: function(oldStr, newStr, callback) { return SentenceDiff.diff(oldStr, newStr, callback); },\n\n    diffCss: function(oldStr, newStr, callback) { return CssDiff.diff(oldStr, newStr, callback); },\n    diffJson: function(oldObj, newObj, callback) {\n      return JsonDiff.diff(\n        typeof oldObj === 'string' ? oldObj : JSON.stringify(canonicalize(oldObj), undefined, '  '),\n        typeof newObj === 'string' ? newObj : JSON.stringify(canonicalize(newObj), undefined, '  '),\n        callback\n      );\n    },\n\n    createTwoFilesPatch: function(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader) {\n      var ret = [];\n\n      if (oldFileName == newFileName) {\n        ret.push('Index: ' + oldFileName);\n      }\n      ret.push('===================================================================');\n      ret.push('--- ' + oldFileName + (typeof oldHeader === 'undefined' ? '' : '\\t' + oldHeader));\n      ret.push('+++ ' + newFileName + (typeof newHeader === 'undefined' ? '' : '\\t' + newHeader));\n\n      var diff = PatchDiff.diff(oldStr, newStr);\n      diff.push({value: '', lines: []});   // Append an empty value to make cleanup easier\n\n      // Formats a given set of lines for printing as context lines in a patch\n      function contextLines(lines) {\n        return map(lines, function(entry) { return ' ' + entry; });\n      }\n\n      // Outputs the no newline at end of file warning if needed\n      function eofNL(curRange, i, current) {\n        var last = diff[diff.length - 2],\n            isLast = i === diff.length - 2,\n            isLastOfType = i === diff.length - 3 && current.added !== last.added;\n\n        // Figure out if this is the last line for the given file and missing NL\n        if (!(/\\n$/.test(current.value)) && (isLast || isLastOfType)) {\n          curRange.push('\\\\ No newline at end of file');\n        }\n      }\n\n      var oldRangeStart = 0, newRangeStart = 0, curRange = [],\n          oldLine = 1, newLine = 1;\n      for (var i = 0; i < diff.length; i++) {\n        var current = diff[i],\n            lines = current.lines || current.value.replace(/\\n$/, '').split('\\n');\n        current.lines = lines;\n\n        if (current.added || current.removed) {\n          // If we have previous context, start with that\n          if (!oldRangeStart) {\n            var prev = diff[i - 1];\n            oldRangeStart = oldLine;\n            newRangeStart = newLine;\n\n            if (prev) {\n              curRange = contextLines(prev.lines.slice(-4));\n              oldRangeStart -= curRange.length;\n              newRangeStart -= curRange.length;\n            }\n          }\n\n          // Output our changes\n          curRange.push.apply(curRange, map(lines, function(entry) {\n            return (current.added ? '+' : '-') + entry;\n          }));\n          eofNL(curRange, i, current);\n\n          // Track the updated file position\n          if (current.added) {\n            newLine += lines.length;\n          } else {\n            oldLine += lines.length;\n          }\n        } else {\n          // Identical context lines. Track line changes\n          if (oldRangeStart) {\n            // Close out any changes that have been output (or join overlapping)\n            if (lines.length <= 8 && i < diff.length - 2) {\n              // Overlapping\n              curRange.push.apply(curRange, contextLines(lines));\n            } else {\n              // end the range and output\n              var contextSize = Math.min(lines.length, 4);\n              ret.push(\n                  '@@ -' + oldRangeStart + ',' + (oldLine - oldRangeStart + contextSize)\n                  + ' +' + newRangeStart + ',' + (newLine - newRangeStart + contextSize)\n                  + ' @@');\n              ret.push.apply(ret, curRange);\n              ret.push.apply(ret, contextLines(lines.slice(0, contextSize)));\n              if (lines.length <= 4) {\n                eofNL(ret, i, current);\n              }\n\n              oldRangeStart = 0;\n              newRangeStart = 0;\n              curRange = [];\n            }\n          }\n          oldLine += lines.length;\n          newLine += lines.length;\n        }\n      }\n\n      return ret.join('\\n') + '\\n';\n    },\n\n    createPatch: function(fileName, oldStr, newStr, oldHeader, newHeader) {\n      return JsDiff.createTwoFilesPatch(fileName, fileName, oldStr, newStr, oldHeader, newHeader);\n    },\n\n    applyPatch: function(oldStr, uniDiff) {\n      var diffstr = uniDiff.split('\\n'),\n          hunks = [],\n          i = 0,\n          remEOFNL = false,\n          addEOFNL = false;\n\n      // Skip to the first change hunk\n      while (i < diffstr.length && !(/^@@/.test(diffstr[i]))) {\n        i++;\n      }\n\n      // Parse the unified diff\n      for (; i < diffstr.length; i++) {\n        if (diffstr[i][0] === '@') {\n          var chnukHeader = diffstr[i].split(/@@ -(\\d+),(\\d+) \\+(\\d+),(\\d+) @@/);\n          hunks.unshift({\n            start: chnukHeader[3],\n            oldlength: +chnukHeader[2],\n            removed: [],\n            newlength: chnukHeader[4],\n            added: []\n          });\n        } else if (diffstr[i][0] === '+') {\n          hunks[0].added.push(diffstr[i].substr(1));\n        } else if (diffstr[i][0] === '-') {\n          hunks[0].removed.push(diffstr[i].substr(1));\n        } else if (diffstr[i][0] === ' ') {\n          hunks[0].added.push(diffstr[i].substr(1));\n          hunks[0].removed.push(diffstr[i].substr(1));\n        } else if (diffstr[i][0] === '\\\\') {\n          if (diffstr[i - 1][0] === '+') {\n            remEOFNL = true;\n          } else if (diffstr[i - 1][0] === '-') {\n            addEOFNL = true;\n          }\n        }\n      }\n\n      // Apply the diff to the input\n      var lines = oldStr.split('\\n');\n      for (i = hunks.length - 1; i >= 0; i--) {\n        var hunk = hunks[i];\n        // Sanity check the input string. Bail if we don't match.\n        for (var j = 0; j < hunk.oldlength; j++) {\n          if (lines[hunk.start - 1 + j] !== hunk.removed[j]) {\n            return false;\n          }\n        }\n        Array.prototype.splice.apply(lines, [hunk.start - 1, hunk.oldlength].concat(hunk.added));\n      }\n\n      // Handle EOFNL insertion/removal\n      if (remEOFNL) {\n        while (!lines[lines.length - 1]) {\n          lines.pop();\n        }\n      } else if (addEOFNL) {\n        lines.push('');\n      }\n      return lines.join('\\n');\n    },\n\n    convertChangesToXML: function(changes) {\n      var ret = [];\n      for (var i = 0; i < changes.length; i++) {\n        var change = changes[i];\n        if (change.added) {\n          ret.push('<ins>');\n        } else if (change.removed) {\n          ret.push('<del>');\n        }\n\n        ret.push(escapeHTML(change.value));\n\n        if (change.added) {\n          ret.push('</ins>');\n        } else if (change.removed) {\n          ret.push('</del>');\n        }\n      }\n      return ret.join('');\n    },\n\n    // See: http://code.google.com/p/google-diff-match-patch/wiki/API\n    convertChangesToDMP: function(changes) {\n      var ret = [],\n          change,\n          operation;\n      for (var i = 0; i < changes.length; i++) {\n        change = changes[i];\n        if (change.added) {\n          operation = 1;\n        } else if (change.removed) {\n          operation = -1;\n        } else {\n          operation = 0;\n        }\n\n        ret.push([operation, change.value]);\n      }\n      return ret;\n    },\n\n    canonicalize: canonicalize\n  };\n\n  /*istanbul ignore next */\n  /*global module */\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = JsDiff;\n  } else if (typeof define === 'function' && define.amd) {\n    /*global define */\n    define([], function() { return JsDiff; });\n  } else if (typeof global.JsDiff === 'undefined') {\n    global.JsDiff = JsDiff;\n  }\n}(this));\n","exports.name = \"supports-color\";\nexports.version = \"1.2.0\";\n","'use strict';\nvar argv = process.argv;\n\nmodule.exports = (function () {\n\tif (argv.indexOf('--no-color') !== -1 ||\n\t\targv.indexOf('--no-colors') !== -1 ||\n\t\targv.indexOf('--color=false') !== -1) {\n\t\treturn false;\n\t}\n\n\tif (argv.indexOf('--color') !== -1 ||\n\t\targv.indexOf('--colors') !== -1 ||\n\t\targv.indexOf('--color=true') !== -1 ||\n\t\targv.indexOf('--color=always') !== -1) {\n\t\treturn true;\n\t}\n\n\tif (process.stdout && !process.stdout.isTTY) {\n\t\treturn false;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\treturn true;\n\t}\n\n\tif ('COLORTERM' in process.env) {\n\t\treturn true;\n\t}\n\n\tif (process.env.TERM === 'dumb') {\n\t\treturn false;\n\t}\n\n\tif (/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(process.env.TERM)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n})();\n","exports.name = \"escape-string-regexp\";\nexports.version = \"1.0.2\";\n","'use strict';\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nmodule.exports = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn str.replace(matchOperatorsRe,  '\\\\$&');\n};\n"]}}]