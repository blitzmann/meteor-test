[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"components\":{\"todosList\":{\"todosList.html\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/components/todosList/todosList.html                                                                 //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n                                                                                                               // 1\n      if (Meteor.isServer) return;                                                                             // 2\n                                                                                                               // 3\n      var templateUrl = \"/imports/components/todosList/todosList.html\";                                        // 4\n      var template = \"<header> <h1>Todo List ( {{$ctrl.incompleteCount}} )</h1> <label class=\\\"hide-completed\\\"> <input type=\\\"checkbox\\\" ng-model=\\\"$ctrl.hideCompleted\\\"> Hide Completed Tasks </label> <form class=\\\"new-task\\\" ng-submit=\\\"$ctrl.addTask($ctrl.newTask)\\\"> <input ng-model=\\\"$ctrl.newTask\\\" type=\\\"text\\\" name=\\\"text\\\" placeholder=\\\"Type to add new tasks\\\"> </form> </header> <ul> <li ng-repeat=\\\"task in $ctrl.tasks\\\" ng-class=\\\"{'checked': task.checked}\\\"> <button class=\\\"delete\\\" ng-click=\\\"$ctrl.removeTask(task)\\\">&times;</button> <input type=\\\"checkbox\\\" ng-checked=\\\"task.checked\\\" ng-click=\\\"$ctrl.setChecked(task)\\\" class=\\\"toggle-checked\\\"> <span class=\\\"text\\\"> {{task.text}} </span> </li> </ul> \";\n                                                                                                               // 6\n      angular.module('angular-templates')                                                                      // 7\n        .run(['$templateCache', function($templateCache) {                                                     // 8\n          $templateCache.put(templateUrl, template);                                                           // 9\n        }]);                                                                                                   // 10\n                                                                                                               // 11\n      module.exports = {};                                                                                     // 12\n      module.exports.__esModule = true;                                                                        // 13\n      module.exports.default = templateUrl;                                                                    // 14\n                                                                                                               // 15\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"todosList.js\":[\"babel-runtime/helpers/classCallCheck\",\"angular\",\"angular-meteor\",\"../../api/tasks.js\",\"./todosList.html\",function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/components/todosList/todosList.js                                                                   //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nvar _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{\"default\":function(v){_classCallCheck=v}});var angular;module.import('angular',{\"default\":function(v){angular=v}});var angularMeteor;module.import('angular-meteor',{\"default\":function(v){angularMeteor=v}});var Tasks;module.import('../../api/tasks.js',{\"Tasks\":function(v){Tasks=v}});var template;module.import('./todosList.html',{\"default\":function(v){template=v}});\n                                                                                                               // 1\n                                                                                                               // 2\n                                                                                                               // 3\n                                                                                                               //\n                                                                                                               // 5\n                                                                                                               //\nvar TodosListCtrl = function () {                                                                              //\n  function TodosListCtrl($scope) {                                                                             // 8\n    _classCallCheck(this, TodosListCtrl);                                                                      // 8\n                                                                                                               //\n    $scope.viewModel(this);                                                                                    // 9\n                                                                                                               //\n    this.hideCompleted = false;                                                                                // 11\n                                                                                                               //\n    this.helpers({                                                                                             // 13\n      tasks: function () {                                                                                     // 14\n        function tasks() {                                                                                     // 13\n          var selector = {};                                                                                   // 15\n                                                                                                               //\n          // If hide completed is checked, filter tasks                                                        //\n          if (this.getReactively('hideCompleted')) {                                                           // 18\n            selector.checked = {                                                                               // 19\n              $ne: true                                                                                        // 20\n            };                                                                                                 // 19\n          }                                                                                                    // 22\n                                                                                                               //\n          // Show newest tasks at the top                                                                      //\n          return Tasks.find(selector, {                                                                        // 25\n            sort: {                                                                                            // 26\n              createdAt: -1                                                                                    // 27\n            }                                                                                                  // 26\n          });                                                                                                  // 25\n        }                                                                                                      // 30\n                                                                                                               //\n        return tasks;                                                                                          // 13\n      }(),                                                                                                     // 13\n      incompleteCount: function () {                                                                           // 31\n        function incompleteCount() {                                                                           // 13\n          return Tasks.find({                                                                                  // 32\n            checked: {                                                                                         // 33\n              $ne: true                                                                                        // 34\n            }                                                                                                  // 33\n          }).count();                                                                                          // 32\n        }                                                                                                      // 37\n                                                                                                               //\n        return incompleteCount;                                                                                // 13\n      }()                                                                                                      // 13\n    });                                                                                                        // 13\n  }                                                                                                            // 39\n                                                                                                               //\n  TodosListCtrl.prototype.addTask = function () {                                                              //\n    function addTask(newTask) {                                                                                //\n      // Insert a task into the collection                                                                     //\n      Tasks.insert({                                                                                           // 43\n        text: newTask,                                                                                         // 44\n        createdAt: new Date()                                                                                  // 45\n      });                                                                                                      // 43\n                                                                                                               //\n      // Clear form                                                                                            //\n      this.newTask = '';                                                                                       // 49\n    }                                                                                                          // 50\n                                                                                                               //\n    return addTask;                                                                                            //\n  }();                                                                                                         //\n                                                                                                               //\n  TodosListCtrl.prototype.setChecked = function () {                                                           //\n    function setChecked(task) {                                                                                //\n      // Set the checked property to the opposite of its current value                                         //\n      Tasks.update(task._id, {                                                                                 // 54\n        $set: {                                                                                                // 55\n          checked: !task.checked                                                                               // 56\n        }                                                                                                      // 55\n      });                                                                                                      // 54\n    }                                                                                                          // 59\n                                                                                                               //\n    return setChecked;                                                                                         //\n  }();                                                                                                         //\n                                                                                                               //\n  TodosListCtrl.prototype.removeTask = function () {                                                           //\n    function removeTask(task) {                                                                                //\n      Tasks.remove(task._id);                                                                                  // 62\n    }                                                                                                          // 63\n                                                                                                               //\n    return removeTask;                                                                                         //\n  }();                                                                                                         //\n                                                                                                               //\n  return TodosListCtrl;                                                                                        //\n}();                                                                                                           //\n                                                                                                               //\nmodule.export(\"default\",exports.default=(angular.module('todosList', [angularMeteor]).component('todosList', {\n  templateUrl: 'imports/components/todosList/todosList.html',                                                  // 71\n  controller: ['$scope', TodosListCtrl]                                                                        // 72\n})));                                                                                                          // 70\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},\"api\":{\"tasks.js\":[\"meteor/mongo\",function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/tasks.js                                                                                        //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.export({Tasks:function(){return Tasks}});var Mongo;module.import('meteor/mongo',{\"Mongo\":function(v){Mongo=v}});\n                                                                                                               //\nvar Tasks = new Mongo.Collection('tasks');                                                                     // 3\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},\"client\":{\"main.html.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// client/main.html.js                                                                                         //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n                                                                                                               // 1\n            Meteor.startup(function() {                                                                        // 2\n              var attrs = {};                                                                                  // 3\n              for (var prop in attrs) {                                                                        // 4\n                document.body.setAttribute(prop, attrs[prop]);                                                 // 5\n              }                                                                                                // 6\n            });                                                                                                // 7\n                                                                                                               // 8\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.js\":[\"angular\",\"angular-meteor\",\"../imports/components/todosList/todosList\",function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// client/main.js                                                                                              //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nvar angular;module.import('angular',{\"default\":function(v){angular=v}});var angularMeteor;module.import('angular-meteor',{\"default\":function(v){angularMeteor=v}});var todosList;module.import('../imports/components/todosList/todosList',{\"default\":function(v){todosList=v}});\n                                                                                                               // 2\n                                                                                                               // 3\n                                                                                                               //\nangular.module('simple-todos', [angularMeteor, todosList.name, 'accounts.ui']);                                // 5\n                                                                                                               //\nfunction onReady() {                                                                                           // 11\n  angular.bootstrap(document, ['simple-todos']);                                                               // 12\n}                                                                                                              // 13\n                                                                                                               //\nif (Meteor.isCordova) {                                                                                        // 15\n  angular.element(document).on('deviceready', onReady);                                                        // 16\n} else {                                                                                                       // 17\n  angular.element(document).ready(onReady);                                                                    // 18\n}                                                                                                              // 19\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},{\"extensions\":[\".js\",\".json\",\".html\",\".css\"]});\nrequire(\"./client/main.html.js\");\nrequire(\"./client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/imports/components/todosList/todosList.html","/imports/components/todosList/todosList.js","/imports/api/tasks.js","/client/main.html.js","/client/main.js"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oH;;;;;;;;;;;;ACdA,OAAO,OAAP,MAAoB,SAApB;AACA,OAAO,aAAP,MAA0B,gBAA1B;AACA,SAAS,KAAT,QAAsB,oBAAtB;;AAEA,OAAO,QAAP,MAAqB,kBAArB;;IAEM,a;AACJ,yBAAY,MAAZ,EAAoB;AAAA;;AAClB,WAAO,SAAP,CAAiB,IAAjB;;AAEA,SAAK,aAAL,GAAqB,KAArB;;AAEA,SAAK,OAAL,CAAa;AACX,WADW;AAAA,yBACH;AACN,cAAM,WAAW,EAAjB;;;AAGE,cAAI,KAAK,aAAL,CAAmB,eAAnB,CAAJ,EAAyC;AACvC,qBAAS,OAAT,GAAmB;AACjB,mBAAK;AADY,aAAnB;AAGD;;;AAGD,iBAAO,MAAM,IAAN,CAAW,QAAX,EAAqB;AAC5B,kBAAM;AACJ,yBAAW,CAAC;AADR;AADsB,WAArB,CAAP;AAKH;;AAjBU;AAAA;AAkBX,qBAlBW;AAAA,mCAkBO;AACjB,iBAAO,MAAM,IAAN,CAAW;AAChB,qBAAS;AACP,mBAAK;AADE;AADO,WAAX,EAIJ,KAJI,EAAP;AAKD;;AAxBW;AAAA;AAAA,KAAb;AA0BD;;0BAED,O;qBAAQ,O,EAAS;;AAEf,YAAM,MAAN,CAAa;AACX,cAAM,OADK;AAEX,mBAAW,IAAI,IAAJ;AAFA,OAAb;;;AAMA,WAAK,OAAL,GAAe,EAAf;AACD;;;;;0BAED,U;wBAAW,I,EAAM;;AAEf,YAAM,MAAN,CAAa,KAAK,GAAlB,EAAuB;AACrB,cAAM;AACJ,mBAAS,CAAC,KAAK;AADX;AADe,OAAvB;AAKD;;;;;0BAED,U;wBAAW,I,EAAM;AACf,YAAM,MAAN,CAAa,KAAK,GAAlB;AACD;;;;;;;;AAIH,eAAe,QAAQ,MAAR,CAAe,WAAf,EAA4B,CACzC,aADyC,CAA5B,EAGZ,SAHY,CAGF,WAHE,EAGW;AACtB,eAAa,6CADS;AAEtB,cAAY,CAAC,QAAD,EAAW,aAAX;AAFU,CAHX,CAAf,kH;;;;;;;;;;;AClEA,SAAS,KAAT,QAAsB,cAAtB;;AAEA,OAAO,IAAM,QAAQ,IAAI,MAAM,UAAV,CAAqB,OAArB,CAAd,mE;;;;;;;;;;;ACFP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mH;;;;;;;;;;;ACPA,OAAO,OAAP,MAAoB,SAApB;AACA,OAAO,aAAP,MAA0B,gBAA1B;AACA,OAAO,SAAP,MAAsB,2CAAtB;;AAEA,QAAQ,MAAR,CAAe,cAAf,EAA+B,CAC7B,aAD6B,EAE7B,UAAU,IAFmB,EAG7B,aAH6B,CAA/B;;AAMA,SAAS,OAAT,GAAmB;AACjB,UAAQ,SAAR,CAAkB,QAAlB,EAA4B,CAAC,cAAD,CAA5B;AACD;;AAED,IAAI,OAAO,SAAX,EAAsB;AACpB,UAAQ,OAAR,CAAgB,QAAhB,EAA0B,EAA1B,CAA6B,aAA7B,EAA4C,OAA5C;AACD,CAFD,MAEO;AACL,UAAQ,OAAR,CAAgB,QAAhB,EAA0B,KAA1B,CAAgC,OAAhC;AACD,oH","file":"/app.js","sourcesContent":["\n      if (Meteor.isServer) return;\n\n      var templateUrl = \"/imports/components/todosList/todosList.html\";\n      var template = \"<header> <h1>Todo List ( {{$ctrl.incompleteCount}} )</h1> <label class=\\\"hide-completed\\\"> <input type=\\\"checkbox\\\" ng-model=\\\"$ctrl.hideCompleted\\\"> Hide Completed Tasks </label> <form class=\\\"new-task\\\" ng-submit=\\\"$ctrl.addTask($ctrl.newTask)\\\"> <input ng-model=\\\"$ctrl.newTask\\\" type=\\\"text\\\" name=\\\"text\\\" placeholder=\\\"Type to add new tasks\\\"> </form> </header> <ul> <li ng-repeat=\\\"task in $ctrl.tasks\\\" ng-class=\\\"{'checked': task.checked}\\\"> <button class=\\\"delete\\\" ng-click=\\\"$ctrl.removeTask(task)\\\">&times;</button> <input type=\\\"checkbox\\\" ng-checked=\\\"task.checked\\\" ng-click=\\\"$ctrl.setChecked(task)\\\" class=\\\"toggle-checked\\\"> <span class=\\\"text\\\"> {{task.text}} </span> </li> </ul> \";\n\n      angular.module('angular-templates')\n        .run(['$templateCache', function($templateCache) {\n          $templateCache.put(templateUrl, template);\n        }]);\n\n      module.exports = {};\n      module.exports.__esModule = true;\n      module.exports.default = templateUrl;\n    ","import angular from 'angular';\nimport angularMeteor from 'angular-meteor';\nimport { Tasks } from '../../api/tasks.js';\n\nimport template from './todosList.html';\n\nclass TodosListCtrl {\n  constructor($scope) {\n    $scope.viewModel(this);\n\r\n    this.hideCompleted = false;\r\n\r\n    this.helpers({\n      tasks() {\n        const selector = {};\r\n\r\n          // If hide completed is checked, filter tasks\r\n          if (this.getReactively('hideCompleted')) {\r\n            selector.checked = {\r\n              $ne: true\r\n            };\r\n          }\r\n\r\n          // Show newest tasks at the top\r\n          return Tasks.find(selector, {\r\n          sort: {\n            createdAt: -1\n          }\n        });\n      },\r\n      incompleteCount() {\r\n       return Tasks.find({\r\n         checked: {\r\n           $ne: true\r\n         }\r\n       }).count();\r\n     }\r\n    })\n  }\n\n  addTask(newTask) {\n    // Insert a task into the collection\n    Tasks.insert({\n      text: newTask,\n      createdAt: new Date\n    });\n\n    // Clear form\n    this.newTask = '';\n  }\n\n  setChecked(task) {\n    // Set the checked property to the opposite of its current value\n    Tasks.update(task._id, {\n      $set: {\n        checked: !task.checked\n      },\n    });\n  }\n\n  removeTask(task) {\n    Tasks.remove(task._id);\n  }\n\n}\n\nexport default angular.module('todosList', [\n  angularMeteor\n])\n  .component('todosList', {\n    templateUrl: 'imports/components/todosList/todosList.html',\n    controller: ['$scope', TodosListCtrl]\n  });\n","import { Mongo } from 'meteor/mongo';\n\nexport const Tasks = new Mongo.Collection('tasks');\n","\n            Meteor.startup(function() {\n              var attrs = {};\n              for (var prop in attrs) {\n                document.body.setAttribute(prop, attrs[prop]);\n              }\n            });\n          ","import angular from 'angular';\nimport angularMeteor from 'angular-meteor';\nimport todosList from '../imports/components/todosList/todosList';\n\nangular.module('simple-todos', [\n  angularMeteor,\n  todosList.name,\n  'accounts.ui'\n]);\n\nfunction onReady() {\n  angular.bootstrap(document, ['simple-todos']);\n}\n\nif (Meteor.isCordova) {\n  angular.element(document).on('deviceready', onReady);\n} else {\n  angular.element(document).ready(onReady);\n}\n"]}}]