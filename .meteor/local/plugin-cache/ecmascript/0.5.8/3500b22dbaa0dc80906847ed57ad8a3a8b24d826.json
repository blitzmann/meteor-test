{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/practicalmeteor:mocha/test/acceptance/globals.js","filenameRelative":"/packages/practicalmeteor:mocha/test/acceptance/globals.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/practicalmeteor:mocha/test/acceptance/globals.js.map","sourceFileName":"/packages/practicalmeteor:mocha/test/acceptance/globals.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"globals"},"ignored":false,"code":"describe('global leaks', function () {\n  before(function () {\n    // uncomment to test\n    // foo = 'hey';\n    // bar = 'hey';\n  });\n\n  beforeEach(function () {\n    // uncomment to test\n    // foo = 'bar'\n  });\n\n  it('should cause tests to fail', function () {\n    // uncomment to test\n    // foo = 'bar';\n    // bar = 'baz';\n    // baz = 'raz';\n  });\n\n  it('should pass when accepted', function () {\n    global.okGlobalA = 1;\n    global.okGlobalB = 1;\n    global.okGlobalC = 1;\n  });\n\n  it('should pass with wildcard', function () {\n    global.callback123 = 'foo';\n    global.callback345 = 'bar';\n  });\n\n  it('should pass when prefixed \"mocha-\"', function () {\n    // Opera and IE do this for HTML element IDs anyway\n    // but to sure we can assert this in any browser, simulate it.\n    global['mocha-example'] = { nodeType: 1 };\n  });\n\n  afterEach(function () {\n    // uncomment to test\n    // foo = 'bar'\n  });\n});","ast":null,"map":{"version":3,"sources":["/packages/practicalmeteor:mocha/test/acceptance/globals.js"],"names":[],"mappings":"AAAA,SAAS,cAAT,EAAyB,YAAU;AACjC,SAAO,YAAU;;;;AAIhB,GAJD;;AAMA,aAAW,YAAU;;;AAGpB,GAHD;;AAKA,KAAG,4BAAH,EAAiC,YAAU;;;;;AAK1C,GALD;;AAOA,KAAG,2BAAH,EAAgC,YAAU;AACxC,WAAO,SAAP,GAAmB,CAAnB;AACA,WAAO,SAAP,GAAmB,CAAnB;AACA,WAAO,SAAP,GAAmB,CAAnB;AACD,GAJD;;AAMA,KAAG,2BAAH,EAAgC,YAAU;AACxC,WAAO,WAAP,GAAqB,KAArB;AACA,WAAO,WAAP,GAAqB,KAArB;AACD,GAHD;;AAKA,KAAG,oCAAH,EAAyC,YAAU;;;AAGjD,WAAO,eAAP,IAA0B,EAAE,UAAU,CAAZ,EAA1B;AACD,GAJD;;AAMA,YAAU,YAAU;;;AAGnB,GAHD;AAID,CAxCD","file":"/packages/practicalmeteor:mocha/test/acceptance/globals.js.map","sourcesContent":["describe('global leaks', function(){\n  before(function(){\n    // uncomment to test\n    // foo = 'hey';\n    // bar = 'hey';\n  })\n\n  beforeEach(function(){\n    // uncomment to test\n    // foo = 'bar'\n  });\n\n  it('should cause tests to fail', function(){\n    // uncomment to test\n    // foo = 'bar';\n    // bar = 'baz';\n    // baz = 'raz';\n  });\n\n  it('should pass when accepted', function(){\n    global.okGlobalA = 1;\n    global.okGlobalB = 1;\n    global.okGlobalC = 1;\n  })\n\n  it('should pass with wildcard', function(){\n    global.callback123 = 'foo';\n    global.callback345 = 'bar';\n  });\n\n  it('should pass when prefixed \"mocha-\"', function(){\n    // Opera and IE do this for HTML element IDs anyway\n    // but to sure we can assert this in any browser, simulate it.\n    global['mocha-example'] = { nodeType: 1 };\n  });\n\n  afterEach(function(){\n    // uncomment to test\n    // foo = 'bar'\n  });\n});\n"]},"hash":"3500b22dbaa0dc80906847ed57ad8a3a8b24d826"}
