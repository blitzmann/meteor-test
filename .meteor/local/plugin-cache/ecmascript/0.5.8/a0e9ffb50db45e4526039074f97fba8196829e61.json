{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/practicalmeteor:mocha/test/http.meta.js","filenameRelative":"/packages/practicalmeteor:mocha/test/http.meta.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/practicalmeteor:mocha/test/http.meta.js.map","sourceFileName":"/packages/practicalmeteor:mocha/test/http.meta.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"http.meta"},"ignored":false,"code":"var http = require('http');\n\nvar PORT = 8889;\n\nvar server = http.createServer(function (req, res) {\n  var accept = req.headers.accept || '',\n      json = ~accept.indexOf('json');\n\n  switch (req.url) {\n    case '/':\n      res.end('hello');\n      break;\n    case '/users':\n      if (json) {\n        res.end('[\"tobi\",\"loki\",\"jane\"]');\n      } else {\n        res.end('tobi, loki, jane');\n      }\n      break;\n  }\n});\n\nfunction get(url, body, header) {\n  return function (done) {\n    http.get({ path: url, port: PORT, headers: header || {} }, function (res) {\n      var buf = '';\n      res.should.have.property('statusCode', 200);\n      res.setEncoding('utf8');\n      res.on('data', function (chunk) {\n        buf += chunk;\n      });\n      res.on('end', function () {\n        buf.should.equal(body);\n        done();\n      });\n    });\n  };\n}\n\ndescribe('http requests', function () {\n\n  before(function (done) {\n    server.listen(PORT, done);\n  });\n\n  after(function () {\n    server.close();\n  });\n\n  describe('GET /', function () {\n    it('should respond with hello', get('/', 'hello'));\n  });\n\n  describe('GET /users', function () {\n    it('should respond with users', get('/users', 'tobi, loki, jane'));\n\n    it('should respond with users', get('/users', '[\"tobi\",\"loki\",\"jane\"]', { Accept: 'application/json' }));\n  });\n});","ast":null,"map":{"version":3,"sources":["/packages/practicalmeteor:mocha/test/http.meta.js"],"names":[],"mappings":"AAAA,IAAI,OAAO,QAAQ,MAAR,CAAX;;AAEA,IAAI,OAAO,IAAX;;AAEA,IAAI,SAAS,KAAK,YAAL,CAAkB,UAAS,GAAT,EAAc,GAAd,EAAkB;AAC/C,MAAI,SAAS,IAAI,OAAJ,CAAY,MAAZ,IAAsB,EAAnC;AAAA,MACI,OAAO,CAAC,OAAO,OAAP,CAAe,MAAf,CADZ;;AAGA,UAAQ,IAAI,GAAZ;AACE,SAAK,GAAL;AACE,UAAI,GAAJ,CAAQ,OAAR;AACA;AACF,SAAK,QAAL;AACE,UAAI,IAAJ,EAAU;AACR,YAAI,GAAJ,CAAQ,wBAAR;AACD,OAFD,MAEO;AACL,YAAI,GAAJ,CAAQ,kBAAR;AACD;AACD;AAVJ;AAYD,CAhBY,CAAb;;AAmBA,SAAS,GAAT,CAAa,GAAb,EAAkB,IAAlB,EAAwB,MAAxB,EAAgC;AAC9B,SAAO,UAAS,IAAT,EAAc;AACnB,SAAK,GAAL,CAAS,EAAE,MAAM,GAAR,EAAa,MAAM,IAAnB,EAAyB,SAAS,UAAU,EAA5C,EAAT,EAA0D,UAAS,GAAT,EAAa;AACrE,UAAI,MAAM,EAAV;AACA,UAAI,MAAJ,CAAW,IAAX,CAAgB,QAAhB,CAAyB,YAAzB,EAAuC,GAAvC;AACA,UAAI,WAAJ,CAAgB,MAAhB;AACA,UAAI,EAAJ,CAAO,MAAP,EAAe,UAAS,KAAT,EAAe;AAAE,eAAO,KAAP;AAAc,OAA9C;AACA,UAAI,EAAJ,CAAO,KAAP,EAAc,YAAU;AACtB,YAAI,MAAJ,CAAW,KAAX,CAAiB,IAAjB;AACA;AACD,OAHD;AAID,KATD;AAUD,GAXD;AAYD;;AAED,SAAS,eAAT,EAA0B,YAAY;;AAEpC,SAAO,UAAS,IAAT,EAAe;AACpB,WAAO,MAAP,CAAc,IAAd,EAAoB,IAApB;AACD,GAFD;;AAIA,QAAM,YAAW;AACf,WAAO,KAAP;AACD,GAFD;;AAIA,WAAS,OAAT,EAAkB,YAAY;AAC5B,OAAG,2BAAH,EACE,IAAI,GAAJ,EAAS,OAAT,CADF;AAED,GAHD;;AAKA,WAAS,YAAT,EAAuB,YAAU;AAC/B,OAAG,2BAAH,EACE,IAAI,QAAJ,EAAc,kBAAd,CADF;;AAGA,OAAG,2BAAH,EACE,IAAI,QAAJ,EAAc,wBAAd,EAAwC,EAAE,QAAQ,kBAAV,EAAxC,CADF;AAED,GAND;AAOD,CAtBD","file":"/packages/practicalmeteor:mocha/test/http.meta.js.map","sourcesContent":["var http = require('http');\n\nvar PORT = 8889;\n\nvar server = http.createServer(function(req, res){\n  var accept = req.headers.accept || ''\n    , json = ~accept.indexOf('json');\n\n  switch (req.url) {\n    case '/':\n      res.end('hello');\n      break;\n    case '/users':\n      if (json) {\n        res.end('[\"tobi\",\"loki\",\"jane\"]');\n      } else {\n        res.end('tobi, loki, jane');\n      }\n      break;\n  }\n});\n\n\nfunction get(url, body, header) {\n  return function(done){\n    http.get({ path: url, port: PORT, headers: header || {}}, function(res){\n      var buf = '';\n      res.should.have.property('statusCode', 200);\n      res.setEncoding('utf8');\n      res.on('data', function(chunk){ buf += chunk });\n      res.on('end', function(){\n        buf.should.equal(body);\n        done();\n      });\n    })\n  }\n}\n\ndescribe('http requests', function () {\n\n  before(function(done) {\n    server.listen(PORT, done);\n  });\n\n  after(function() {\n    server.close();\n  });\n\n  describe('GET /', function () {\n    it('should respond with hello',\n      get('/', 'hello'))\n  })\n\n  describe('GET /users', function(){\n    it('should respond with users',\n      get('/users', 'tobi, loki, jane'))\n\n    it('should respond with users',\n      get('/users', '[\"tobi\",\"loki\",\"jane\"]', { Accept: 'application/json' }))\n  })\n})\n"]},"hash":"a0e9ffb50db45e4526039074f97fba8196829e61"}
