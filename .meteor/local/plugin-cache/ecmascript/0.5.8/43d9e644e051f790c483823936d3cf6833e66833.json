{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/practicalmeteor:mocha/test/integration/diffs.js","filenameRelative":"/packages/practicalmeteor:mocha/test/integration/diffs.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/practicalmeteor:mocha/test/integration/diffs.js.map","sourceFileName":"/packages/practicalmeteor:mocha/test/integration/diffs.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"diffs"},"ignored":false,"code":"var assert = require('assert');\nvar helpers = require('./helpers');\nvar run = helpers.runMocha;\nvar fs = require('fs');\nvar getDiffs = helpers.getDiffs;\n\nfunction getExpectedOutput() {\n  var output = fs.readFileSync('test/integration/fixtures/diffs/output', 'UTF8');\n\n  // Diffs are delimited in file by \"// DIFF\"\n  return output.split(/\\s*\\/\\/ DIFF/).slice(1).map(function (diff) {\n    return diff.split('\\n').filter(Boolean).join('\\n');\n  });\n}\n\ndescribe('diffs', function () {\n  var diffs, expected;\n  this.timeout(1000);\n\n  before(function (done) {\n    run('diffs/diffs.js', ['-C'], function (err, res) {\n      expected = getExpectedOutput();\n      diffs = getDiffs(res.output);\n      done(err);\n    });\n  });\n\n  ['should display a diff for small strings', 'should display a diff of canonicalized objects', 'should display a diff for medium strings', 'should display a diff for entire object dumps', 'should display a diff for multi-line strings', 'should display a diff for entire object dumps', 'should display a full-comparison with escaped special characters', 'should display a word diff for large strings', 'should work with objects', 'should show value diffs and not be affected by commas', 'should display diff by data and not like an objects'].forEach(function (title, i) {\n    it(title, function () {\n      assert.equal(diffs[i], expected[i]);\n    });\n  });\n});","ast":null,"map":{"version":3,"sources":["/packages/practicalmeteor:mocha/test/integration/diffs.js"],"names":[],"mappings":"AAAA,IAAI,SAAW,QAAQ,QAAR,CAAf;AACA,IAAI,UAAW,QAAQ,WAAR,CAAf;AACA,IAAI,MAAW,QAAQ,QAAvB;AACA,IAAI,KAAW,QAAQ,IAAR,CAAf;AACA,IAAI,WAAW,QAAQ,QAAvB;;AAEA,SAAS,iBAAT,GAA6B;AAC3B,MAAI,SAAS,GAAG,YAAH,CAAgB,wCAAhB,EAA0D,MAA1D,CAAb;;;AAGA,SAAO,OAAO,KAAP,CAAa,cAAb,EAA6B,KAA7B,CAAmC,CAAnC,EAAsC,GAAtC,CAA0C,UAAS,IAAT,EAAe;AAC9D,WAAO,KAAK,KAAL,CAAW,IAAX,EAAiB,MAAjB,CAAwB,OAAxB,EAAiC,IAAjC,CAAsC,IAAtC,CAAP;AACD,GAFM,CAAP;AAGD;;AAED,SAAS,OAAT,EAAkB,YAAW;AAC3B,MAAI,KAAJ,EAAW,QAAX;AACA,OAAK,OAAL,CAAa,IAAb;;AAEA,SAAO,UAAS,IAAT,EAAe;AACpB,QAAI,gBAAJ,EAAsB,CAAC,IAAD,CAAtB,EAA8B,UAAS,GAAT,EAAc,GAAd,EAAmB;AAC/C,iBAAW,mBAAX;AACA,cAAQ,SAAS,IAAI,MAAb,CAAR;AACA,WAAK,GAAL;AACD,KAJD;AAKD,GAND;;AAQA,GACE,yCADF,EAEE,gDAFF,EAGE,0CAHF,EAIE,+CAJF,EAKE,8CALF,EAME,+CANF,EAOE,kEAPF,EAQE,8CARF,EASE,0BATF,EAUE,uDAVF,EAWE,qDAXF,EAYE,OAZF,CAYU,UAAS,KAAT,EAAgB,CAAhB,EAAmB;AAC3B,OAAG,KAAH,EAAU,YAAW;AACnB,aAAO,KAAP,CAAa,MAAM,CAAN,CAAb,EAAuB,SAAS,CAAT,CAAvB;AACD,KAFD;AAGD,GAhBD;AAiBD,CA7BD","file":"/packages/practicalmeteor:mocha/test/integration/diffs.js.map","sourcesContent":["var assert   = require('assert');\nvar helpers  = require('./helpers');\nvar run      = helpers.runMocha;\nvar fs       = require('fs');\nvar getDiffs = helpers.getDiffs;\n\nfunction getExpectedOutput() {\n  var output = fs.readFileSync('test/integration/fixtures/diffs/output', 'UTF8');\n\n  // Diffs are delimited in file by \"// DIFF\"\n  return output.split(/\\s*\\/\\/ DIFF/).slice(1).map(function(diff) {\n    return diff.split('\\n').filter(Boolean).join('\\n');\n  });\n}\n\ndescribe('diffs', function() {\n  var diffs, expected;\n  this.timeout(1000);\n\n  before(function(done) {\n    run('diffs/diffs.js', ['-C'], function(err, res) {\n      expected = getExpectedOutput();\n      diffs = getDiffs(res.output);\n      done(err);\n    });\n  });\n\n  [\n    'should display a diff for small strings',\n    'should display a diff of canonicalized objects',\n    'should display a diff for medium strings',\n    'should display a diff for entire object dumps',\n    'should display a diff for multi-line strings',\n    'should display a diff for entire object dumps',\n    'should display a full-comparison with escaped special characters',\n    'should display a word diff for large strings',\n    'should work with objects',\n    'should show value diffs and not be affected by commas',\n    'should display diff by data and not like an objects'\n  ].forEach(function(title, i) {\n    it(title, function() {\n      assert.equal(diffs[i], expected[i]);\n    });\n  });\n});\n"]},"hash":"43d9e644e051f790c483823936d3cf6833e66833"}
