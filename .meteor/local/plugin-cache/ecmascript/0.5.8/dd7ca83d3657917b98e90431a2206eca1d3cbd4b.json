{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/practicalmeteor:mocha/lib/reporters/json-stream.js","filenameRelative":"/packages/practicalmeteor:mocha/lib/reporters/json-stream.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/practicalmeteor:mocha/lib/reporters/json-stream.js.map","sourceFileName":"/packages/practicalmeteor:mocha/lib/reporters/json-stream.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"json-stream"},"ignored":false,"code":"/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\n\n/**\n * Expose `List`.\n */\n\nexports = module.exports = List;\n\n/**\n * Initialize a new `List` test reporter.\n *\n * @api public\n * @param {Runner} runner\n */\nfunction List(runner) {\n  Base.call(this, runner);\n\n  var self = this;\n  var total = runner.total;\n\n  runner.on('start', function () {\n    console.log(JSON.stringify(['start', { total: total }]));\n  });\n\n  runner.on('pass', function (test) {\n    console.log(JSON.stringify(['pass', clean(test)]));\n  });\n\n  runner.on('fail', function (test, err) {\n    test = clean(test);\n    test.err = err.message;\n    test.stack = err.stack || null;\n    console.log(JSON.stringify(['fail', test]));\n  });\n\n  runner.on('end', function () {\n    process.stdout.write(JSON.stringify(['end', self.stats]));\n  });\n}\n\n/**\n * Return a plain-object representation of `test`\n * free of cyclic properties etc.\n *\n * @api private\n * @param {Object} test\n * @return {Object}\n */\nfunction clean(test) {\n  return {\n    title: test.title,\n    fullTitle: test.fullTitle(),\n    duration: test.duration,\n    currentRetry: test.currentRetry()\n  };\n}","ast":null,"map":{"version":3,"sources":["/packages/practicalmeteor:mocha/lib/reporters/json-stream.js"],"names":[],"mappings":";;;;AAIA,IAAI,OAAO,QAAQ,QAAR,CAAX;;;;;;AAMA,UAAU,OAAO,OAAP,GAAiB,IAA3B;;;;;;;;AAQA,SAAS,IAAT,CAAc,MAAd,EAAsB;AACpB,OAAK,IAAL,CAAU,IAAV,EAAgB,MAAhB;;AAEA,MAAI,OAAO,IAAX;AACA,MAAI,QAAQ,OAAO,KAAnB;;AAEA,SAAO,EAAP,CAAU,OAAV,EAAmB,YAAW;AAC5B,YAAQ,GAAR,CAAY,KAAK,SAAL,CAAe,CAAC,OAAD,EAAU,EAAE,OAAO,KAAT,EAAV,CAAf,CAAZ;AACD,GAFD;;AAIA,SAAO,EAAP,CAAU,MAAV,EAAkB,UAAS,IAAT,EAAe;AAC/B,YAAQ,GAAR,CAAY,KAAK,SAAL,CAAe,CAAC,MAAD,EAAS,MAAM,IAAN,CAAT,CAAf,CAAZ;AACD,GAFD;;AAIA,SAAO,EAAP,CAAU,MAAV,EAAkB,UAAS,IAAT,EAAe,GAAf,EAAoB;AACpC,WAAO,MAAM,IAAN,CAAP;AACA,SAAK,GAAL,GAAW,IAAI,OAAf;AACA,SAAK,KAAL,GAAa,IAAI,KAAJ,IAAa,IAA1B;AACA,YAAQ,GAAR,CAAY,KAAK,SAAL,CAAe,CAAC,MAAD,EAAS,IAAT,CAAf,CAAZ;AACD,GALD;;AAOA,SAAO,EAAP,CAAU,KAAV,EAAiB,YAAW;AAC1B,YAAQ,MAAR,CAAe,KAAf,CAAqB,KAAK,SAAL,CAAe,CAAC,KAAD,EAAQ,KAAK,KAAb,CAAf,CAArB;AACD,GAFD;AAGD;;;;;;;;;;AAUD,SAAS,KAAT,CAAe,IAAf,EAAqB;AACnB,SAAO;AACL,WAAO,KAAK,KADP;AAEL,eAAW,KAAK,SAAL,EAFN;AAGL,cAAU,KAAK,QAHV;AAIL,kBAAc,KAAK,YAAL;AAJT,GAAP;AAMD","file":"/packages/practicalmeteor:mocha/lib/reporters/json-stream.js.map","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\n\n/**\n * Expose `List`.\n */\n\nexports = module.exports = List;\n\n/**\n * Initialize a new `List` test reporter.\n *\n * @api public\n * @param {Runner} runner\n */\nfunction List(runner) {\n  Base.call(this, runner);\n\n  var self = this;\n  var total = runner.total;\n\n  runner.on('start', function() {\n    console.log(JSON.stringify(['start', { total: total }]));\n  });\n\n  runner.on('pass', function(test) {\n    console.log(JSON.stringify(['pass', clean(test)]));\n  });\n\n  runner.on('fail', function(test, err) {\n    test = clean(test);\n    test.err = err.message;\n    test.stack = err.stack || null;\n    console.log(JSON.stringify(['fail', test]));\n  });\n\n  runner.on('end', function() {\n    process.stdout.write(JSON.stringify(['end', self.stats]));\n  });\n}\n\n/**\n * Return a plain-object representation of `test`\n * free of cyclic properties etc.\n *\n * @api private\n * @param {Object} test\n * @return {Object}\n */\nfunction clean(test) {\n  return {\n    title: test.title,\n    fullTitle: test.fullTitle(),\n    duration: test.duration,\n    currentRetry: test.currentRetry()\n  };\n}\n"]},"hash":"dd7ca83d3657917b98e90431a2206eca1d3cbd4b"}
