{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/practicalmeteor:mocha/test/integration/fixtures/retries/nested.js","filenameRelative":"/packages/practicalmeteor:mocha/test/integration/fixtures/retries/nested.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/practicalmeteor:mocha/test/integration/fixtures/retries/nested.js.map","sourceFileName":"/packages/practicalmeteor:mocha/test/integration/fixtures/retries/nested.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"nested"},"ignored":false,"code":"describe('retries', function () {\n  this.retries(3);\n  describe('nested', function () {\n    it('should fail after only 1 retry', function () {\n      this.retries(1);\n      throw new Error('retry error');\n    });\n  });\n});","ast":null,"map":{"version":3,"sources":["/packages/practicalmeteor:mocha/test/integration/fixtures/retries/nested.js"],"names":[],"mappings":"AAAA,SAAS,SAAT,EAAoB,YAAW;AAC7B,OAAK,OAAL,CAAa,CAAb;AACA,WAAS,QAAT,EAAmB,YAAY;AAC7B,OAAG,gCAAH,EAAqC,YAAU;AAC7C,WAAK,OAAL,CAAa,CAAb;AACA,YAAM,IAAI,KAAJ,CAAU,aAAV,CAAN;AACD,KAHD;AAID,GALD;AAMD,CARD","file":"/packages/practicalmeteor:mocha/test/integration/fixtures/retries/nested.js.map","sourcesContent":["describe('retries', function() {\n  this.retries(3);\n  describe('nested', function () {\n    it('should fail after only 1 retry', function(){\n      this.retries(1);\n      throw new Error('retry error');\n    });\n  });\n});\n"]},"hash":"14c2817d601a712f222e00a87a3085fa73d124df"}
