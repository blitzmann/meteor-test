{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/practicalmeteor:mocha/lib/interfaces/exports.js","filenameRelative":"/packages/practicalmeteor:mocha/lib/interfaces/exports.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/practicalmeteor:mocha/lib/interfaces/exports.js.map","sourceFileName":"/packages/practicalmeteor:mocha/lib/interfaces/exports.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"exports"},"ignored":false,"code":"/**\n * Module dependencies.\n */\n\nvar Suite = require('../suite');\nvar Test = require('../test');\n\n/**\n * TDD-style interface:\n *\n *     exports.Array = {\n *       '#indexOf()': {\n *         'should return -1 when the value is not present': function() {\n *\n *         },\n *\n *         'should return the correct index when the value is present': function() {\n *\n *         }\n *       }\n *     };\n *\n * @param {Suite} suite Root suite.\n */\nmodule.exports = function (suite) {\n  var suites = [suite];\n\n  suite.on('require', visit);\n\n  function visit(obj, file) {\n    var suite;\n    for (var key in meteorBabelHelpers.sanitizeForInObject(obj)) {\n      if (typeof obj[key] === 'function') {\n        var fn = obj[key];\n        switch (key) {\n          case 'before':\n            suites[0].beforeAll(fn);\n            break;\n          case 'after':\n            suites[0].afterAll(fn);\n            break;\n          case 'beforeEach':\n            suites[0].beforeEach(fn);\n            break;\n          case 'afterEach':\n            suites[0].afterEach(fn);\n            break;\n          default:\n            var test = new Test(key, fn);\n            test.file = file;\n            suites[0].addTest(test);\n        }\n      } else {\n        suite = Suite.create(suites[0], key);\n        suites.unshift(suite);\n        visit(obj[key], file);\n        suites.shift();\n      }\n    }\n  }\n};","ast":null,"map":{"version":3,"sources":["/packages/practicalmeteor:mocha/lib/interfaces/exports.js"],"names":[],"mappings":";;;;AAIA,IAAI,QAAQ,QAAQ,UAAR,CAAZ;AACA,IAAI,OAAO,QAAQ,SAAR,CAAX;;;;;;;;;;;;;;;;;;;AAmBA,OAAO,OAAP,GAAiB,UAAS,KAAT,EAAgB;AAC/B,MAAI,SAAS,CAAC,KAAD,CAAb;;AAEA,QAAM,EAAN,CAAS,SAAT,EAAoB,KAApB;;AAEA,WAAS,KAAT,CAAe,GAAf,EAAoB,IAApB,EAA0B;AACxB,QAAI,KAAJ;AACA,SAAK,IAAI,GAAT,2CAAgB,GAAhB,GAAqB;AACnB,UAAI,OAAO,IAAI,GAAJ,CAAP,KAAoB,UAAxB,EAAoC;AAClC,YAAI,KAAK,IAAI,GAAJ,CAAT;AACA,gBAAQ,GAAR;AACE,eAAK,QAAL;AACE,mBAAO,CAAP,EAAU,SAAV,CAAoB,EAApB;AACA;AACF,eAAK,OAAL;AACE,mBAAO,CAAP,EAAU,QAAV,CAAmB,EAAnB;AACA;AACF,eAAK,YAAL;AACE,mBAAO,CAAP,EAAU,UAAV,CAAqB,EAArB;AACA;AACF,eAAK,WAAL;AACE,mBAAO,CAAP,EAAU,SAAV,CAAoB,EAApB;AACA;AACF;AACE,gBAAI,OAAO,IAAI,IAAJ,CAAS,GAAT,EAAc,EAAd,CAAX;AACA,iBAAK,IAAL,GAAY,IAAZ;AACA,mBAAO,CAAP,EAAU,OAAV,CAAkB,IAAlB;AAhBJ;AAkBD,OApBD,MAoBO;AACL,gBAAQ,MAAM,MAAN,CAAa,OAAO,CAAP,CAAb,EAAwB,GAAxB,CAAR;AACA,eAAO,OAAP,CAAe,KAAf;AACA,cAAM,IAAI,GAAJ,CAAN,EAAgB,IAAhB;AACA,eAAO,KAAP;AACD;AACF;AACF;AACF,CApCD","file":"/packages/practicalmeteor:mocha/lib/interfaces/exports.js.map","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar Suite = require('../suite');\nvar Test = require('../test');\n\n/**\n * TDD-style interface:\n *\n *     exports.Array = {\n *       '#indexOf()': {\n *         'should return -1 when the value is not present': function() {\n *\n *         },\n *\n *         'should return the correct index when the value is present': function() {\n *\n *         }\n *       }\n *     };\n *\n * @param {Suite} suite Root suite.\n */\nmodule.exports = function(suite) {\n  var suites = [suite];\n\n  suite.on('require', visit);\n\n  function visit(obj, file) {\n    var suite;\n    for (var key in obj) {\n      if (typeof obj[key] === 'function') {\n        var fn = obj[key];\n        switch (key) {\n          case 'before':\n            suites[0].beforeAll(fn);\n            break;\n          case 'after':\n            suites[0].afterAll(fn);\n            break;\n          case 'beforeEach':\n            suites[0].beforeEach(fn);\n            break;\n          case 'afterEach':\n            suites[0].afterEach(fn);\n            break;\n          default:\n            var test = new Test(key, fn);\n            test.file = file;\n            suites[0].addTest(test);\n        }\n      } else {\n        suite = Suite.create(suites[0], key);\n        suites.unshift(suite);\n        visit(obj[key], file);\n        suites.shift();\n      }\n    }\n  }\n};\n"]},"hash":"2c80cf48fb5ca57d38bae4585436da9ebaba6046"}
