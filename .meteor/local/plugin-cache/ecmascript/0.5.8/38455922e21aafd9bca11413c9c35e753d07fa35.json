{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/practicalmeteor:mocha/test/integration/multiple.done.js","filenameRelative":"/packages/practicalmeteor:mocha/test/integration/multiple.done.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/practicalmeteor:mocha/test/integration/multiple.done.js.map","sourceFileName":"/packages/practicalmeteor:mocha/test/integration/multiple.done.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"multiple.done"},"ignored":false,"code":"var assert = require('assert');\nvar run = require('./helpers').runMochaJSON;\nvar args = [];\n\ndescribe('multiple calls to done()', function () {\n  var res;\n  this.timeout(1000);\n\n  describe('from a spec', function () {\n    before(function (done) {\n      run('multiple.done.js', args, function (err, result) {\n        res = result;\n        done(err);\n      });\n    });\n\n    it('results in failures', function () {\n      assert.equal(res.stats.pending, 0);\n      assert.equal(res.stats.passes, 1);\n      assert.equal(res.stats.failures, 1);\n      assert.equal(res.code, 1);\n    });\n\n    it('throws a descriptive error', function () {\n      assert.equal(res.failures[0].err.message, 'done() called multiple times');\n    });\n  });\n\n  describe('with multiple specs', function () {\n    before(function (done) {\n      run('multiple.done.specs.js', args, function (err, result) {\n        res = result;\n        done(err);\n      });\n    });\n\n    it('results in a failure', function () {\n      assert.equal(res.stats.pending, 0);\n      assert.equal(res.stats.passes, 2);\n      assert.equal(res.stats.failures, 1);\n      assert.equal(res.code, 1);\n    });\n\n    it('correctly attributes the error', function () {\n      assert.equal(res.failures[0].fullTitle, 'suite test1');\n      assert.equal(res.failures[0].err.message, 'done() called multiple times');\n    });\n  });\n\n  describe('from a before hook', function () {\n    before(function (done) {\n      run('multiple.done.before.js', args, function (err, result) {\n        res = result;\n        done(err);\n      });\n    });\n\n    it('results in a failure', function () {\n      assert.equal(res.stats.pending, 0);\n      assert.equal(res.stats.passes, 1);\n      assert.equal(res.stats.failures, 1);\n      assert.equal(res.code, 1);\n    });\n\n    it('correctly attributes the error', function () {\n      assert.equal(res.failures[0].fullTitle, 'suite \"before all\" hook');\n      assert.equal(res.failures[0].err.message, 'done() called multiple times');\n    });\n  });\n\n  describe('from a beforeEach hook', function () {\n    before(function (done) {\n      run('multiple.done.beforeEach.js', args, function (err, result) {\n        res = result;\n        done(err);\n      });\n    });\n\n    it('results in a failure', function () {\n      assert.equal(res.stats.pending, 0);\n      assert.equal(res.stats.passes, 2);\n      assert.equal(res.stats.failures, 2);\n      assert.equal(res.code, 2);\n    });\n\n    it('correctly attributes the errors', function () {\n      assert.equal(res.failures.length, 2);\n      res.failures.forEach(function (failure) {\n        assert.equal(failure.fullTitle, 'suite \"before each\" hook');\n        assert.equal(failure.err.message, 'done() called multiple times');\n      });\n    });\n  });\n});","ast":null,"map":{"version":3,"sources":["/packages/practicalmeteor:mocha/test/integration/multiple.done.js"],"names":[],"mappings":"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","file":"/packages/practicalmeteor:mocha/test/integration/multiple.done.js.map","sourcesContent":["var assert = require('assert');\nvar run    = require('./helpers').runMochaJSON;\nvar args   = [];\n\ndescribe('multiple calls to done()', function() {\n  var res;\n  this.timeout(1000);\n\n  describe('from a spec', function() {\n    before(function(done) {\n      run('multiple.done.js', args, function(err, result) {\n        res = result;\n        done(err);\n      });\n    });\n\n    it('results in failures', function() {\n      assert.equal(res.stats.pending, 0);\n      assert.equal(res.stats.passes, 1);\n      assert.equal(res.stats.failures, 1);\n      assert.equal(res.code, 1);\n    });\n\n    it('throws a descriptive error', function() {\n      assert.equal(res.failures[0].err.message,\n        'done() called multiple times');\n    });\n  });\n\n  describe('with multiple specs', function() {\n    before(function(done) {\n      run('multiple.done.specs.js', args, function(err, result) {\n        res = result;\n        done(err);\n      });\n    });\n\n    it('results in a failure', function() {\n      assert.equal(res.stats.pending, 0);\n      assert.equal(res.stats.passes, 2);\n      assert.equal(res.stats.failures, 1);\n      assert.equal(res.code, 1);\n    });\n\n    it('correctly attributes the error', function() {\n      assert.equal(res.failures[0].fullTitle, 'suite test1');\n      assert.equal(res.failures[0].err.message,\n        'done() called multiple times');\n    });\n  });\n\n  describe('from a before hook', function() {\n    before(function(done) {\n      run('multiple.done.before.js', args, function(err, result) {\n        res = result;\n        done(err);\n      });\n    });\n\n    it('results in a failure', function() {\n      assert.equal(res.stats.pending, 0);\n      assert.equal(res.stats.passes, 1);\n      assert.equal(res.stats.failures, 1);\n      assert.equal(res.code, 1);\n    });\n\n    it('correctly attributes the error', function() {\n      assert.equal(res.failures[0].fullTitle, 'suite \"before all\" hook');\n      assert.equal(res.failures[0].err.message,\n        'done() called multiple times');\n    });\n  });\n\n  describe('from a beforeEach hook', function() {\n    before(function(done) {\n      run('multiple.done.beforeEach.js', args, function(err, result) {\n        res = result;\n        done(err);\n      });\n    });\n\n    it('results in a failure', function() {\n      assert.equal(res.stats.pending, 0);\n      assert.equal(res.stats.passes, 2);\n      assert.equal(res.stats.failures, 2);\n      assert.equal(res.code, 2);\n    });\n\n    it('correctly attributes the errors', function() {\n      assert.equal(res.failures.length, 2);\n      res.failures.forEach(function(failure) {\n        assert.equal(failure.fullTitle, 'suite \"before each\" hook');\n        assert.equal(failure.err.message,\n          'done() called multiple times');\n      });\n    });\n  });\n});\n"]},"hash":"38455922e21aafd9bca11413c9c35e753d07fa35"}
