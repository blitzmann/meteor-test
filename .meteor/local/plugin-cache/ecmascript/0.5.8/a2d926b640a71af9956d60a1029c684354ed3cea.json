{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/practicalmeteor:mocha/test/integration/reporters.js","filenameRelative":"/packages/practicalmeteor:mocha/test/integration/reporters.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/practicalmeteor:mocha/test/integration/reporters.js.map","sourceFileName":"/packages/practicalmeteor:mocha/test/integration/reporters.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"reporters"},"ignored":false,"code":"var assert = require('assert');\nvar os = require('os');\nvar fs = require('fs');\nvar crypto = require('crypto');\nvar path = require('path');\nvar run = require('./helpers').runMocha;\n\ndescribe('reporters', function () {\n  this.timeout(3000);\n\n  describe('markdown', function () {\n    var res;\n\n    before(function (done) {\n      run('passing.js', ['--reporter', 'markdown'], function (err, result) {\n        res = result;\n        done(err);\n      });\n    });\n\n    it('does not exceed maximum callstack (issue: 1875)', function () {\n      assert(res.output.indexOf('RangeError') === -1, 'Threw RangeError');\n    });\n\n    it('contains spec src', function () {\n      var src = ['```js', 'assert(true);', '```'].join('\\n');\n\n      assert(res.output.indexOf(src) !== -1, 'No assert found');\n    });\n  });\n\n  describe('xunit', function () {\n    it('prints test cases with --reporter-options output (issue: 1864)', function (done) {\n      var randomStr = crypto.randomBytes(8).toString('hex');\n      var tmpDir = os.tmpDir().replace(new RegExp(path.sep + '$'), '');\n      var tmpFile = tmpDir + path.sep + 'test-issue-1864-' + randomStr + '.xml';\n\n      var args = ['--reporter=xunit', '--reporter-options', 'output=' + tmpFile];\n      var expectedOutput = ['<testcase classname=\"suite\" name=\"test1\" time=\"', '<testcase classname=\"suite\" name=\"test2\" time=\"', '</testsuite>'];\n\n      run('passing.js', args, function (err, result) {\n        if (err) return done(err);\n\n        var xml = fs.readFileSync(tmpFile, 'utf8');\n        fs.unlinkSync(tmpFile);\n\n        expectedOutput.forEach(function (line) {\n          assert(xml.indexOf(line) !== -1, 'XML did not contain ' + line);\n        });\n\n        done(err);\n      });\n    });\n  });\n});","ast":null,"map":{"version":3,"sources":["/packages/practicalmeteor:mocha/test/integration/reporters.js"],"names":[],"mappings":"AAAA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,KAAS,QAAQ,IAAR,CAAb;AACA,IAAI,KAAS,QAAQ,IAAR,CAAb;AACA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,OAAS,QAAQ,MAAR,CAAb;AACA,IAAI,MAAS,QAAQ,WAAR,EAAqB,QAAlC;;AAEA,SAAS,WAAT,EAAsB,YAAW;AAC/B,OAAK,OAAL,CAAa,IAAb;;AAEA,WAAS,UAAT,EAAqB,YAAW;AAC9B,QAAI,GAAJ;;AAEA,WAAO,UAAS,IAAT,EAAe;AACpB,UAAI,YAAJ,EAAkB,CAAC,YAAD,EAAe,UAAf,CAAlB,EAA8C,UAAS,GAAT,EAAc,MAAd,EAAsB;AAClE,cAAM,MAAN;AACA,aAAK,GAAL;AACD,OAHD;AAID,KALD;;AAOA,OAAG,iDAAH,EAAsD,YAAW;AAC/D,aAAO,IAAI,MAAJ,CAAW,OAAX,CAAmB,YAAnB,MAAqC,CAAC,CAA7C,EAAgD,kBAAhD;AACD,KAFD;;AAIA,OAAG,mBAAH,EAAwB,YAAW;AACjC,UAAI,MAAM,CACR,OADQ,EAER,eAFQ,EAGR,KAHQ,EAIR,IAJQ,CAIH,IAJG,CAAV;;AAMA,aAAO,IAAI,MAAJ,CAAW,OAAX,CAAmB,GAAnB,MAA4B,CAAC,CAApC,EAAuC,iBAAvC;AACD,KARD;AASD,GAvBD;;AAyBA,WAAS,OAAT,EAAkB,YAAW;AAC3B,OAAG,gEAAH,EAAqE,UAAS,IAAT,EAAe;AAClF,UAAI,YAAY,OAAO,WAAP,CAAmB,CAAnB,EAAsB,QAAtB,CAA+B,KAA/B,CAAhB;AACA,UAAI,SAAS,GAAG,MAAH,GAAY,OAAZ,CAAoB,IAAI,MAAJ,CAAW,KAAK,GAAL,GAAW,GAAtB,CAApB,EAAgD,EAAhD,CAAb;AACA,UAAI,UAAU,SAAS,KAAK,GAAd,GAAoB,kBAApB,GAAyC,SAAzC,GAAqD,MAAnE;;AAEA,UAAI,OAAO,CAAC,kBAAD,EAAqB,oBAArB,EAA2C,YAAY,OAAvD,CAAX;AACA,UAAI,iBAAiB,CACnB,iDADmB,EAEnB,iDAFmB,EAGnB,cAHmB,CAArB;;AAMA,UAAI,YAAJ,EAAkB,IAAlB,EAAwB,UAAS,GAAT,EAAc,MAAd,EAAsB;AAC5C,YAAI,GAAJ,EAAS,OAAO,KAAK,GAAL,CAAP;;AAET,YAAI,MAAM,GAAG,YAAH,CAAgB,OAAhB,EAAyB,MAAzB,CAAV;AACA,WAAG,UAAH,CAAc,OAAd;;AAEA,uBAAe,OAAf,CAAuB,UAAS,IAAT,EAAe;AACpC,iBAAO,IAAI,OAAJ,CAAY,IAAZ,MAAsB,CAAC,CAA9B,EAAiC,yBAAyB,IAA1D;AACD,SAFD;;AAIA,aAAK,GAAL;AACD,OAXD;AAYD,KAxBD;AAyBD,GA1BD;AA2BD,CAvDD","file":"/packages/practicalmeteor:mocha/test/integration/reporters.js.map","sourcesContent":["var assert = require('assert');\nvar os     = require('os');\nvar fs     = require('fs');\nvar crypto = require('crypto');\nvar path   = require('path');\nvar run    = require('./helpers').runMocha;\n\ndescribe('reporters', function() {\n  this.timeout(3000);\n\n  describe('markdown', function() {\n    var res;\n\n    before(function(done) {\n      run('passing.js', ['--reporter', 'markdown'], function(err, result) {\n        res = result;\n        done(err);\n      });\n    });\n\n    it('does not exceed maximum callstack (issue: 1875)', function() {\n      assert(res.output.indexOf('RangeError') === -1, 'Threw RangeError');\n    });\n\n    it('contains spec src', function() {\n      var src = [\n        '```js',\n        'assert(true);',\n        '```'\n      ].join('\\n');\n\n      assert(res.output.indexOf(src) !== -1, 'No assert found');\n    });\n  });\n\n  describe('xunit', function() {\n    it('prints test cases with --reporter-options output (issue: 1864)', function(done) {\n      var randomStr = crypto.randomBytes(8).toString('hex');\n      var tmpDir = os.tmpDir().replace(new RegExp(path.sep + '$'), '');\n      var tmpFile = tmpDir + path.sep + 'test-issue-1864-' + randomStr + '.xml';\n\n      var args = ['--reporter=xunit', '--reporter-options', 'output=' + tmpFile];\n      var expectedOutput = [\n        '<testcase classname=\"suite\" name=\"test1\" time=\"',\n        '<testcase classname=\"suite\" name=\"test2\" time=\"',\n        '</testsuite>'\n      ];\n\n      run('passing.js', args, function(err, result) {\n        if (err) return done(err);\n\n        var xml = fs.readFileSync(tmpFile, 'utf8');\n        fs.unlinkSync(tmpFile);\n\n        expectedOutput.forEach(function(line) {\n          assert(xml.indexOf(line) !== -1, 'XML did not contain ' + line);\n        });\n\n        done(err);\n      });\n    });\n  });\n});\n"]},"hash":"a2d926b640a71af9956d60a1029c684354ed3cea"}
