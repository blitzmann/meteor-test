{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/practicalmeteor:mocha/lib/interfaces/common.js","filenameRelative":"/packages/practicalmeteor:mocha/lib/interfaces/common.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/practicalmeteor:mocha/lib/interfaces/common.js.map","sourceFileName":"/packages/practicalmeteor:mocha/lib/interfaces/common.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"common"},"ignored":false,"code":"'use strict';\n\n/**\n * Functions common to more than one interface.\n *\n * @param {Suite[]} suites\n * @param {Context} context\n * @return {Object} An object containing common functions.\n */\n\nmodule.exports = function (suites, context) {\n  return {\n    /**\n     * This is only present if flag --delay is passed into Mocha. It triggers\n     * root suite execution.\n     *\n     * @param {Suite} suite The root wuite.\n     * @return {Function} A function which runs the root suite\n     */\n    runWithSuite: function () {\n      function runWithSuite(suite) {\n        return function () {\n          function run() {\n            suite.run();\n          }\n\n          return run;\n        }();\n      }\n\n      return runWithSuite;\n    }(),\n\n    /**\n     * Execute before running tests.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    before: function () {\n      function before(name, fn) {\n        suites[0].beforeAll(name, fn);\n      }\n\n      return before;\n    }(),\n\n    /**\n     * Execute after running tests.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    after: function () {\n      function after(name, fn) {\n        suites[0].afterAll(name, fn);\n      }\n\n      return after;\n    }(),\n\n    /**\n     * Execute before each test case.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    beforeEach: function () {\n      function beforeEach(name, fn) {\n        suites[0].beforeEach(name, fn);\n      }\n\n      return beforeEach;\n    }(),\n\n    /**\n     * Execute after each test case.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    afterEach: function () {\n      function afterEach(name, fn) {\n        suites[0].afterEach(name, fn);\n      }\n\n      return afterEach;\n    }(),\n\n    test: {\n      /**\n       * Pending test case.\n       *\n       * @param {string} title\n       */\n      skip: function () {\n        function skip(title) {\n          context.test(title);\n        }\n\n        return skip;\n      }(),\n\n      /**\n       * Number of retry attempts\n       *\n       * @param {string} n\n       */\n      retries: function () {\n        function retries(n) {\n          context.retries(n);\n        }\n\n        return retries;\n      }()\n    }\n  };\n};","ast":null,"map":{"version":3,"sources":["/packages/practicalmeteor:mocha/lib/interfaces/common.js"],"names":[],"mappings":"AAAA;;;;;;;;;;AASA,OAAO,OAAP,GAAiB,UAAS,MAAT,EAAiB,OAAjB,EAA0B;AACzC,SAAO;;;;;;;;AAQL;AAAc,eAAS,YAAT,CAAsB,KAAtB,EAA6B;AACzC;AAAO,mBAAS,GAAT,GAAe;AACpB,kBAAM,GAAN;AACD;;AAFD,iBAAgB,GAAhB;AAAA;AAGD;;AAJD,aAAuB,YAAvB;AAAA,OARK;;;;;;;;AAoBL;AAAQ,sBAAS,IAAT,EAAe,EAAf,EAAmB;AACzB,eAAO,CAAP,EAAU,SAAV,CAAoB,IAApB,EAA0B,EAA1B;AACD;;AAFD;AAAA,OApBK;;;;;;;;AA8BL;AAAO,qBAAS,IAAT,EAAe,EAAf,EAAmB;AACxB,eAAO,CAAP,EAAU,QAAV,CAAmB,IAAnB,EAAyB,EAAzB;AACD;;AAFD;AAAA,OA9BK;;;;;;;;AAwCL;AAAY,0BAAS,IAAT,EAAe,EAAf,EAAmB;AAC7B,eAAO,CAAP,EAAU,UAAV,CAAqB,IAArB,EAA2B,EAA3B;AACD;;AAFD;AAAA,OAxCK;;;;;;;;AAkDL;AAAW,yBAAS,IAAT,EAAe,EAAf,EAAmB;AAC5B,eAAO,CAAP,EAAU,SAAV,CAAoB,IAApB,EAA0B,EAA1B;AACD;;AAFD;AAAA,OAlDK;;AAsDL,UAAM;;;;;;AAMJ;AAAM,sBAAS,KAAT,EAAgB;AACpB,kBAAQ,IAAR,CAAa,KAAb;AACD;;AAFD;AAAA,SANI;;;;;;;AAeJ;AAAS,yBAAS,CAAT,EAAY;AACnB,kBAAQ,OAAR,CAAgB,CAAhB;AACD;;AAFD;AAAA;AAfI;AAtDD,GAAP;AA0ED,CA3ED","file":"/packages/practicalmeteor:mocha/lib/interfaces/common.js.map","sourcesContent":["'use strict';\n\n/**\n * Functions common to more than one interface.\n *\n * @param {Suite[]} suites\n * @param {Context} context\n * @return {Object} An object containing common functions.\n */\nmodule.exports = function(suites, context) {\n  return {\n    /**\n     * This is only present if flag --delay is passed into Mocha. It triggers\n     * root suite execution.\n     *\n     * @param {Suite} suite The root wuite.\n     * @return {Function} A function which runs the root suite\n     */\n    runWithSuite: function runWithSuite(suite) {\n      return function run() {\n        suite.run();\n      };\n    },\n\n    /**\n     * Execute before running tests.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    before: function(name, fn) {\n      suites[0].beforeAll(name, fn);\n    },\n\n    /**\n     * Execute after running tests.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    after: function(name, fn) {\n      suites[0].afterAll(name, fn);\n    },\n\n    /**\n     * Execute before each test case.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    beforeEach: function(name, fn) {\n      suites[0].beforeEach(name, fn);\n    },\n\n    /**\n     * Execute after each test case.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    afterEach: function(name, fn) {\n      suites[0].afterEach(name, fn);\n    },\n\n    test: {\n      /**\n       * Pending test case.\n       *\n       * @param {string} title\n       */\n      skip: function(title) {\n        context.test(title);\n      },\n\n      /**\n       * Number of retry attempts\n       *\n       * @param {string} n\n       */\n      retries: function(n) {\n        context.retries(n);\n      }\n    }\n  };\n};\n"]},"hash":"c338c7b24f827a1f9728f0720a0c3b88c6cb24cc"}
