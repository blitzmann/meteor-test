{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"semver","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"semver"}]},{"source":"meteor/underscore","imported":["_"],"specifiers":[{"kind":"named","imported":"_","local":"_"}]}],"exports":{"exported":["checkNpmVersions"],"specifiers":[{"kind":"local","local":"checkNpmVersions","exported":"checkNpmVersions"}]}}},"options":{"filename":"/packages/tmeasday:check-npm-versions/check-npm-versions.js","filenameRelative":"/packages/tmeasday:check-npm-versions/check-npm-versions.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/tmeasday:check-npm-versions/check-npm-versions.js.map","sourceFileName":"/packages/tmeasday:check-npm-versions/check-npm-versions.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"check-npm-versions"},"ignored":false,"code":"module.export({checkNpmVersions:function(){return checkNpmVersions}});var semver;module.import('semver',{\"default\":function(v){semver=v}});var _;module.import('meteor/underscore',{\"_\":function(v){_=v}});\n\n\nvar packageIsInstalled = function packageIsInstalled(name, range) {\n  try {\n    var installedVersion = require(name + '/package.json').version;\n    return semver.satisfies(installedVersion, range);\n  } catch (e) {\n    // XXX I guess the only error here is that the module doesn't exist?\n    return false;\n  }\n};\n\nvar checkNpmVersions = function checkNpmVersions(packages) {\n  var failures = [];\n  _.forEach(packages, function (range, name) {\n    if (!packageIsInstalled(name, range)) {\n      failures.push(name);\n    }\n  });\n\n  if (failures.length === 0) {\n    return true;\n  }\n\n  failures.forEach(function (name) {\n    var error = failures.map(function (n) {\n      return n + '@' + packages[n] + ' not installed.';\n    }).join('\\n');\n    throw new Error(error);\n  });\n};","ast":null,"map":{"version":3,"sources":["/packages/tmeasday:check-npm-versions/check-npm-versions.js"],"names":[],"mappings":"AAAA,OAAO,MAAP,MAAmB,QAAnB;AACA,SAAQ,CAAR,QAAgB,mBAAhB;;AAEA,IAAM,qBAAqB,SAArB,kBAAqB,CAAC,IAAD,EAAO,KAAP,EAAiB;AAC1C,MAAI;AACF,QAAM,mBAAmB,QAAW,IAAX,oBAAgC,OAAzD;AACA,WAAO,OAAO,SAAP,CAAiB,gBAAjB,EAAmC,KAAnC,CAAP;AACD,GAHD,CAGE,OAAO,CAAP,EAAU;;AAEV,WAAO,KAAP;AACD;AACF,CARD;;AAUA,OAAO,IAAM,mBAAmB,SAAnB,gBAAmB,CAAC,QAAD,EAAc;AAC5C,MAAM,WAAW,EAAjB;AACA,IAAE,OAAF,CAAU,QAAV,EAAoB,UAAC,KAAD,EAAQ,IAAR,EAAiB;AACnC,QAAI,CAAC,mBAAmB,IAAnB,EAAyB,KAAzB,CAAL,EAAsC;AACpC,eAAS,IAAT,CAAc,IAAd;AACD;AACF,GAJD;;AAMA,MAAI,SAAS,MAAT,KAAoB,CAAxB,EAA2B;AACzB,WAAO,IAAP;AACD;;AAED,WAAS,OAAT,CAAiB,gBAAQ;AACvB,QAAM,QAAQ,SAAS,GAAT,CAAa;AAAA,aAAQ,CAAR,SAAa,SAAS,CAAT,CAAb;AAAA,KAAb,EAAwD,IAAxD,CAA6D,IAA7D,CAAd;AACA,UAAM,IAAI,KAAJ,CAAU,KAAV,CAAN;AACD,GAHD;AAID,CAhBM","file":"/packages/tmeasday:check-npm-versions/check-npm-versions.js.map","sourcesContent":["import semver from 'semver';\nimport {_} from 'meteor/underscore';\n\nconst packageIsInstalled = (name, range) => {\n  try {\n    const installedVersion = require(`${name}/package.json`).version;  \n    return semver.satisfies(installedVersion, range);\n  } catch (e) {\n    // XXX I guess the only error here is that the module doesn't exist?\n    return false;\n  }\n};\n\nexport const checkNpmVersions = (packages) => {\n  const failures = [];\n  _.forEach(packages, (range, name) => {\n    if (!packageIsInstalled(name, range)) {\n      failures.push(name);\n    }\n  });\n\n  if (failures.length === 0) {\n    return true;\n  }\n\n  failures.forEach(name => {\n    const error = failures.map(n => `${n}@${packages[n]} not installed.`).join('\\n');\n    throw new Error(error);\n  });\n};\n"]},"hash":"99bb33bf14429814a08577e273ed881d2d3a8351"}
