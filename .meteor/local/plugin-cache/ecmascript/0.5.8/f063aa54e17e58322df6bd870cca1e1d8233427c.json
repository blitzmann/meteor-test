{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/practicalmeteor:chai","imported":["expect"],"specifiers":[{"kind":"named","imported":"expect","local":"expect"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/practicalmeteor:mocha/meteor/test-package/mocha-globals-tests.js","filenameRelative":"/packages/practicalmeteor:mocha/meteor/test-package/mocha-globals-tests.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/practicalmeteor:mocha/meteor/test-package/mocha-globals-tests.js.map","sourceFileName":"/packages/practicalmeteor:mocha/meteor/test-package/mocha-globals-tests.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"mocha-globals-tests"},"ignored":false,"code":"var expect;module.import(\"meteor/practicalmeteor:chai\",{\"expect\":function(v){expect=v}});\n\ndescribe('Globals', function () {\n\n  before(function () {\n    return console.log('before');\n  });\n  after(function () {\n    return console.log('after');\n  });\n  beforeEach(function () {\n    return console.log('beforeEach');\n  });\n  afterEach(function () {\n    return console.log('afterEach');\n  });\n  it('passing', function () {\n    return expect(true).to.be[\"true\"];\n  });\n  it('throwing', function () {\n    return expect(false).to.be[\"true\"];\n  });\n\n  specify(\"it works\", function () {\n    expect(true).to.be['true'];\n  });\n\n  xspecify(\"Skip: This won't run (xspecify)\", function () {\n    throw new Error(\"This won't run\");\n  });\n\n  xdescribe('Skip suite (xdescribe)', function () {\n    return it(\"this won't run\", function () {\n      throw new Error(\"This is an error\");\n    });\n  });\n\n  context(\"Context test\", function () {\n    it(\"it works\", function () {\n      expect(true).to.be['true'];\n    });\n  });\n\n  xcontext(\"Skip suite (xcontext)\", function () {\n\n    it(\"This won't run\", function () {\n      throw new Error(\"This won't run\");\n    });\n  });\n});","ast":null,"map":{"version":3,"sources":["/packages/practicalmeteor:mocha/meteor/test-package/mocha-globals-tests.js"],"names":[],"mappings":"AAAA,SAAQ,MAAR,QAAqB,6BAArB;;AAEA,SAAS,SAAT,EAAoB,YAAW;;AAE7B,SAAO,YAAW;AAChB,WAAO,QAAQ,GAAR,CAAY,QAAZ,CAAP;AACD,GAFD;AAGA,QAAM,YAAW;AACf,WAAO,QAAQ,GAAR,CAAY,OAAZ,CAAP;AACD,GAFD;AAGA,aAAW,YAAW;AACpB,WAAO,QAAQ,GAAR,CAAY,YAAZ,CAAP;AACD,GAFD;AAGA,YAAU,YAAW;AACnB,WAAO,QAAQ,GAAR,CAAY,WAAZ,CAAP;AACD,GAFD;AAGA,KAAG,SAAH,EAAc,YAAW;AACvB,WAAO,OAAO,IAAP,EAAa,EAAb,CAAgB,EAAhB,CAAmB,MAAnB,CAAP;AACD,GAFD;AAGA,KAAG,UAAH,EAAe,YAAW;AACxB,WAAO,OAAO,KAAP,EAAc,EAAd,CAAiB,EAAjB,CAAoB,MAApB,CAAP;AACD,GAFD;;AAIA,UAAQ,UAAR,EAAoB,YAAY;AAC9B,WAAO,IAAP,EAAa,EAAb,CAAgB,EAAhB;AACD,GAFD;;AAIA,WAAS,iCAAT,EAA4C,YAAY;AACtD,UAAM,IAAI,KAAJ,CAAU,gBAAV,CAAN;AACD,GAFD;;AAIA,YAAU,wBAAV,EAAoC,YAAW;AAC7C,WAAO,GAAG,gBAAH,EAAqB,YAAW;AACrC,YAAM,IAAI,KAAJ,CAAU,kBAAV,CAAN;AACD,KAFM,CAAP;AAGD,GAJD;;AAMA,UAAQ,cAAR,EAAwB,YAAY;AAClC,OAAG,UAAH,EAAe,YAAY;AACzB,aAAO,IAAP,EAAa,EAAb,CAAgB,EAAhB;AACD,KAFD;AAGD,GAJD;;AAMA,WAAS,uBAAT,EAAkC,YAAY;;AAE5C,OAAG,gBAAH,EAAqB,YAAY;AAC/B,YAAM,IAAI,KAAJ,CAAU,gBAAV,CAAN;AACD,KAFD;AAGD,GALD;AAOD,CAhDD","file":"/packages/practicalmeteor:mocha/meteor/test-package/mocha-globals-tests.js.map","sourcesContent":["import {expect} from \"meteor/practicalmeteor:chai\"\n\ndescribe('Globals', function() {\n\n  before(function() {\n    return console.log('before');\n  });\n  after(function() {\n    return console.log('after');\n  });\n  beforeEach(function() {\n    return console.log('beforeEach');\n  });\n  afterEach(function() {\n    return console.log('afterEach');\n  });\n  it('passing', function() {\n    return expect(true).to.be[\"true\"];\n  });\n  it('throwing', function() {\n    return expect(false).to.be[\"true\"];\n  });\n\n  specify(\"it works\", function () {\n    expect(true).to.be.true;\n  });\n\n  xspecify(\"Skip: This won't run (xspecify)\", function () {\n    throw new Error(\"This won't run\")\n  });\n\n  xdescribe('Skip suite (xdescribe)', function() {\n    return it(\"this won't run\", function() {\n      throw new Error(\"This is an error\");\n    });\n  });\n\n  context(\"Context test\", function () {\n    it(\"it works\", function () {\n      expect(true).to.be.true;\n    });\n  });\n\n  xcontext(\"Skip suite (xcontext)\", function () {\n\n    it(\"This won't run\", function () {\n      throw new Error(\"This won't run\")\n    })\n  })\n\n});\n"]},"hash":"f063aa54e17e58322df6bd870cca1e1d8233427c"}
