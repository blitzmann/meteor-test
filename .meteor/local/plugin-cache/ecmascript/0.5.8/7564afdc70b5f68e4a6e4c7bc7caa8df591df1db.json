{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/practicalmeteor:mocha/lib/reporters/dot.js","filenameRelative":"/packages/practicalmeteor:mocha/lib/reporters/dot.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/practicalmeteor:mocha/lib/reporters/dot.js.map","sourceFileName":"/packages/practicalmeteor:mocha/lib/reporters/dot.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"dot"},"ignored":false,"code":"/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\nvar inherits = require('../utils').inherits;\nvar color = Base.color;\n\n/**\n * Expose `Dot`.\n */\n\nexports = module.exports = Dot;\n\n/**\n * Initialize a new `Dot` matrix test reporter.\n *\n * @api public\n * @param {Runner} runner\n */\nfunction Dot(runner) {\n  Base.call(this, runner);\n\n  var self = this;\n  var width = Base.window.width * .75 | 0;\n  var n = -1;\n\n  runner.on('start', function () {\n    process.stdout.write('\\n');\n  });\n\n  runner.on('pending', function () {\n    if (++n % width === 0) {\n      process.stdout.write('\\n  ');\n    }\n    process.stdout.write(color('pending', Base.symbols.dot));\n  });\n\n  runner.on('pass', function (test) {\n    if (++n % width === 0) {\n      process.stdout.write('\\n  ');\n    }\n    if (test.speed === 'slow') {\n      process.stdout.write(color('bright yellow', Base.symbols.dot));\n    } else {\n      process.stdout.write(color(test.speed, Base.symbols.dot));\n    }\n  });\n\n  runner.on('fail', function () {\n    if (++n % width === 0) {\n      process.stdout.write('\\n  ');\n    }\n    process.stdout.write(color('fail', Base.symbols.dot));\n  });\n\n  runner.on('end', function () {\n    console.log();\n    self.epilogue();\n  });\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\ninherits(Dot, Base);","ast":null,"map":{"version":3,"sources":["/packages/practicalmeteor:mocha/lib/reporters/dot.js"],"names":[],"mappings":";;;;AAIA,IAAI,OAAO,QAAQ,QAAR,CAAX;AACA,IAAI,WAAW,QAAQ,UAAR,EAAoB,QAAnC;AACA,IAAI,QAAQ,KAAK,KAAjB;;;;;;AAMA,UAAU,OAAO,OAAP,GAAiB,GAA3B;;;;;;;;AAQA,SAAS,GAAT,CAAa,MAAb,EAAqB;AACnB,OAAK,IAAL,CAAU,IAAV,EAAgB,MAAhB;;AAEA,MAAI,OAAO,IAAX;AACA,MAAI,QAAQ,KAAK,MAAL,CAAY,KAAZ,GAAoB,GAApB,GAA0B,CAAtC;AACA,MAAI,IAAI,CAAC,CAAT;;AAEA,SAAO,EAAP,CAAU,OAAV,EAAmB,YAAW;AAC5B,YAAQ,MAAR,CAAe,KAAf,CAAqB,IAArB;AACD,GAFD;;AAIA,SAAO,EAAP,CAAU,SAAV,EAAqB,YAAW;AAC9B,QAAI,EAAE,CAAF,GAAM,KAAN,KAAgB,CAApB,EAAuB;AACrB,cAAQ,MAAR,CAAe,KAAf,CAAqB,MAArB;AACD;AACD,YAAQ,MAAR,CAAe,KAAf,CAAqB,MAAM,SAAN,EAAiB,KAAK,OAAL,CAAa,GAA9B,CAArB;AACD,GALD;;AAOA,SAAO,EAAP,CAAU,MAAV,EAAkB,UAAS,IAAT,EAAe;AAC/B,QAAI,EAAE,CAAF,GAAM,KAAN,KAAgB,CAApB,EAAuB;AACrB,cAAQ,MAAR,CAAe,KAAf,CAAqB,MAArB;AACD;AACD,QAAI,KAAK,KAAL,KAAe,MAAnB,EAA2B;AACzB,cAAQ,MAAR,CAAe,KAAf,CAAqB,MAAM,eAAN,EAAuB,KAAK,OAAL,CAAa,GAApC,CAArB;AACD,KAFD,MAEO;AACL,cAAQ,MAAR,CAAe,KAAf,CAAqB,MAAM,KAAK,KAAX,EAAkB,KAAK,OAAL,CAAa,GAA/B,CAArB;AACD;AACF,GATD;;AAWA,SAAO,EAAP,CAAU,MAAV,EAAkB,YAAW;AAC3B,QAAI,EAAE,CAAF,GAAM,KAAN,KAAgB,CAApB,EAAuB;AACrB,cAAQ,MAAR,CAAe,KAAf,CAAqB,MAArB;AACD;AACD,YAAQ,MAAR,CAAe,KAAf,CAAqB,MAAM,MAAN,EAAc,KAAK,OAAL,CAAa,GAA3B,CAArB;AACD,GALD;;AAOA,SAAO,EAAP,CAAU,KAAV,EAAiB,YAAW;AAC1B,YAAQ,GAAR;AACA,SAAK,QAAL;AACD,GAHD;AAID;;;;;AAKD,SAAS,GAAT,EAAc,IAAd","file":"/packages/practicalmeteor:mocha/lib/reporters/dot.js.map","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\nvar inherits = require('../utils').inherits;\nvar color = Base.color;\n\n/**\n * Expose `Dot`.\n */\n\nexports = module.exports = Dot;\n\n/**\n * Initialize a new `Dot` matrix test reporter.\n *\n * @api public\n * @param {Runner} runner\n */\nfunction Dot(runner) {\n  Base.call(this, runner);\n\n  var self = this;\n  var width = Base.window.width * .75 | 0;\n  var n = -1;\n\n  runner.on('start', function() {\n    process.stdout.write('\\n');\n  });\n\n  runner.on('pending', function() {\n    if (++n % width === 0) {\n      process.stdout.write('\\n  ');\n    }\n    process.stdout.write(color('pending', Base.symbols.dot));\n  });\n\n  runner.on('pass', function(test) {\n    if (++n % width === 0) {\n      process.stdout.write('\\n  ');\n    }\n    if (test.speed === 'slow') {\n      process.stdout.write(color('bright yellow', Base.symbols.dot));\n    } else {\n      process.stdout.write(color(test.speed, Base.symbols.dot));\n    }\n  });\n\n  runner.on('fail', function() {\n    if (++n % width === 0) {\n      process.stdout.write('\\n  ');\n    }\n    process.stdout.write(color('fail', Base.symbols.dot));\n  });\n\n  runner.on('end', function() {\n    console.log();\n    self.epilogue();\n  });\n}\n\n/**\n * Inherit from `Base.prototype`.\n */\ninherits(Dot, Base);\n"]},"hash":"7564afdc70b5f68e4a6e4c7bc7caa8df591df1db"}
