{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/practicalmeteor:mocha/test/browser/array.js","filenameRelative":"/packages/practicalmeteor:mocha/test/browser/array.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/practicalmeteor:mocha/test/browser/array.js.map","sourceFileName":"/packages/practicalmeteor:mocha/test/browser/array.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"array"},"ignored":false,"code":"describe('Array', function () {\n  describe('#push()', function () {\n    it('should append a value', function () {\n      foo = 'asdf';\n      var arr = [];\n      arr.push('foo');\n      arr.push('bar');\n      arr.push('baz');\n      assert('foo' == arr[0]); // to test indentation\n      assert('bar' == arr[1]);\n      assert('baz' == arr[2]);\n    });\n\n    it('should return the length', function () {\n      var arr = [];\n      assert(1 == arr.push('foo'));\n      assert(2 == arr.push('bar'));\n      assert(3 == arr.push('baz'));\n    });\n  });\n});\n\ndescribe('Array', function () {\n  describe('#pop()', function () {\n    it('should remove and return the last value', function () {\n      var arr = [1, 2, 3];\n      assert(arr.pop() == 3);\n      assert(arr.pop() == 2);\n      assert(arr.pop() == -1);\n    });\n\n    it('should adjust .length', function () {\n      var arr = [1, 2, 3];\n      arr.pop();\n      assert(arr.length == 2);\n    });\n  });\n});","ast":null,"map":{"version":3,"sources":["/packages/practicalmeteor:mocha/test/browser/array.js"],"names":[],"mappings":"AAAA,SAAS,OAAT,EAAkB,YAAU;AAC1B,WAAS,SAAT,EAAoB,YAAU;AAC5B,OAAG,uBAAH,EAA4B,YAAU;AACpC,YAAM,MAAN;AACA,UAAI,MAAM,EAAV;AACA,UAAI,IAAJ,CAAS,KAAT;AACA,UAAI,IAAJ,CAAS,KAAT;AACA,UAAI,IAAJ,CAAS,KAAT;AACE,aAAO,SAAS,IAAI,CAAJ,CAAhB,E;AACA,aAAO,SAAS,IAAI,CAAJ,CAAhB;AACF,aAAO,SAAS,IAAI,CAAJ,CAAhB;AACD,KATD;;AAWA,OAAG,0BAAH,EAA+B,YAAU;AACvC,UAAI,MAAM,EAAV;AACA,aAAO,KAAK,IAAI,IAAJ,CAAS,KAAT,CAAZ;AACA,aAAO,KAAK,IAAI,IAAJ,CAAS,KAAT,CAAZ;AACA,aAAO,KAAK,IAAI,IAAJ,CAAS,KAAT,CAAZ;AACD,KALD;AAMD,GAlBD;AAmBD,CApBD;;AAsBA,SAAS,OAAT,EAAkB,YAAU;AAC1B,WAAS,QAAT,EAAmB,YAAU;AAC3B,OAAG,yCAAH,EAA8C,YAAU;AACtD,UAAI,MAAM,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAV;AACA,aAAO,IAAI,GAAJ,MAAa,CAApB;AACA,aAAO,IAAI,GAAJ,MAAa,CAApB;AACA,aAAO,IAAI,GAAJ,MAAa,CAAC,CAArB;AACD,KALD;;AAOA,OAAG,uBAAH,EAA4B,YAAU;AACpC,UAAI,MAAM,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAV;AACA,UAAI,GAAJ;AACA,aAAO,IAAI,MAAJ,IAAc,CAArB;AACD,KAJD;AAKD,GAbD;AAcD,CAfD","file":"/packages/practicalmeteor:mocha/test/browser/array.js.map","sourcesContent":["describe('Array', function(){\n  describe('#push()', function(){\n    it('should append a value', function(){\n      foo = 'asdf'\n      var arr = [];\n      arr.push('foo');\n      arr.push('bar');\n      arr.push('baz');\n        assert('foo' == arr[0]); // to test indentation\n        assert('bar' == arr[1]);\n      assert('baz' == arr[2]);\n    })\n\n    it('should return the length', function(){\n      var arr = [];\n      assert(1 == arr.push('foo'));\n      assert(2 == arr.push('bar'));\n      assert(3 == arr.push('baz'));\n    })\n  })\n})\n\ndescribe('Array', function(){\n  describe('#pop()', function(){\n    it('should remove and return the last value', function(){\n      var arr = [1,2,3];\n      assert(arr.pop() == 3);\n      assert(arr.pop() == 2);\n      assert(arr.pop() == -1);\n    })\n\n    it('should adjust .length', function(){\n      var arr = [1,2,3];\n      arr.pop();\n      assert(arr.length == 2);\n    })\n  })\n})\n"]},"hash":"235fcc34a5233dc99c12069f5e12ebcff2f716fb"}
