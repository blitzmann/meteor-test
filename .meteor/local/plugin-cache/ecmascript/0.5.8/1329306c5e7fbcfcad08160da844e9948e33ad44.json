{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/practicalmeteor:mocha/test/browser/large.js","filenameRelative":"/packages/practicalmeteor:mocha/test/browser/large.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/practicalmeteor:mocha/test/browser/large.js.map","sourceFileName":"/packages/practicalmeteor:mocha/test/browser/large.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"large"},"ignored":false,"code":"var n = 30;\nwhile (n--) {\n  describe('Array ' + n, function () {\n    var arr;\n\n    beforeEach(function () {\n      arr = [1, 2, 3];\n    });\n\n    describe('#indexOf()', function () {\n      it('should return -1 when the value is not present', function () {\n        assert(-1 == arr.indexOf(5));\n      });\n\n      it('should return the correct index when the value is present', function (done) {\n        assert(0 == arr.indexOf(1));\n        assert(1 == arr.indexOf(2));\n        done();\n      });\n    });\n  });\n}\n\ndescribe('something', function () {\n  it('should provide a useful error', function (done) {\n    setTimeout(function () {\n      throw new Error('boom');\n      done();\n    }, 1);\n  });\n\n  it('should provide an even better error on phantomjs', function (done) {\n    setTimeout(function () {\n      var AssertionError = function AssertionError(message, actual, expected) {\n        this.message = message;\n        this.actual = actual;\n        this.expected = expected;\n        this.showDiff = true;\n      };\n      AssertionError.prototype = Object.create(Error.prototype);\n      AssertionError.prototype.name = 'AssertionError';\n      AssertionError.prototype.constructor = AssertionError;\n\n      mocha.throwError(new AssertionError('kabooom', 'text with a typo', 'text without a typo'));\n      done();\n    }, 1);\n  });\n});","ast":null,"map":{"version":3,"sources":["/packages/practicalmeteor:mocha/test/browser/large.js"],"names":[],"mappings":"AAAA,IAAI,IAAI,EAAR;AACA,OAAO,GAAP,EAAY;AACV,WAAS,WAAW,CAApB,EAAuB,YAAU;AAC/B,QAAI,GAAJ;;AAEA,eAAW,YAAU;AACnB,YAAM,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAN;AACD,KAFD;;AAIA,aAAS,YAAT,EAAuB,YAAU;AAC/B,SAAG,gDAAH,EAAqD,YAAU;AAC7D,eAAO,CAAC,CAAD,IAAM,IAAI,OAAJ,CAAY,CAAZ,CAAb;AACD,OAFD;;AAIA,SAAG,2DAAH,EAAgE,UAAS,IAAT,EAAc;AAC5E,eAAO,KAAK,IAAI,OAAJ,CAAY,CAAZ,CAAZ;AACA,eAAO,KAAK,IAAI,OAAJ,CAAY,CAAZ,CAAZ;AACA;AACD,OAJD;AAKD,KAVD;AAWD,GAlBD;AAmBD;;AAED,SAAS,WAAT,EAAsB,YAAU;AAC9B,KAAG,+BAAH,EAAoC,UAAS,IAAT,EAAc;AAChD,eAAW,YAAU;AACnB,YAAM,IAAI,KAAJ,CAAU,MAAV,CAAN;AACA;AACD,KAHD,EAGG,CAHH;AAID,GALD;;AAOA,KAAG,kDAAH,EAAuD,UAAS,IAAT,EAAc;AACnE,eAAW,YAAU;AACnB,UAAI,iBAAiB,SAAjB,cAAiB,CAAS,OAAT,EAAkB,MAAlB,EAA0B,QAA1B,EAAoC;AACvD,aAAK,OAAL,GAAe,OAAf;AACA,aAAK,MAAL,GAAc,MAAd;AACA,aAAK,QAAL,GAAgB,QAAhB;AACA,aAAK,QAAL,GAAgB,IAAhB;AACD,OALD;AAMA,qBAAe,SAAf,GAA2B,OAAO,MAAP,CAAc,MAAM,SAApB,CAA3B;AACA,qBAAe,SAAf,CAAyB,IAAzB,GAAgC,gBAAhC;AACA,qBAAe,SAAf,CAAyB,WAAzB,GAAuC,cAAvC;;AAEA,YAAM,UAAN,CAAiB,IAAI,cAAJ,CAAmB,SAAnB,EAA8B,kBAA9B,EAAkD,qBAAlD,CAAjB;AACA;AACD,KAbD,EAaG,CAbH;AAcD,GAfD;AAgBD,CAxBD","file":"/packages/practicalmeteor:mocha/test/browser/large.js.map","sourcesContent":["var n = 30;\nwhile (n--) {\n  describe('Array ' + n, function(){\n    var arr;\n\n    beforeEach(function(){\n      arr = [1,2,3];\n    })\n\n    describe('#indexOf()', function(){\n      it('should return -1 when the value is not present', function(){\n        assert(-1 == arr.indexOf(5));\n      })\n\n      it('should return the correct index when the value is present', function(done){\n        assert(0 == arr.indexOf(1));\n        assert(1 == arr.indexOf(2));\n        done();\n      })\n    })\n  })\n}\n\ndescribe('something', function(){\n  it('should provide a useful error', function(done){\n    setTimeout(function(){\n      throw new Error('boom');\n      done();\n    }, 1);\n  })\n\n  it('should provide an even better error on phantomjs', function(done){\n    setTimeout(function(){\n      var AssertionError = function(message, actual, expected) {\n        this.message = message;\n        this.actual = actual;\n        this.expected = expected;\n        this.showDiff = true;\n      };\n      AssertionError.prototype = Object.create(Error.prototype);\n      AssertionError.prototype.name = 'AssertionError';\n      AssertionError.prototype.constructor = AssertionError;\n\n      mocha.throwError(new AssertionError('kabooom', 'text with a typo', 'text without a typo'));\n      done();\n    }, 1);\n  })\n})\n"]},"hash":"1329306c5e7fbcfcad08160da844e9948e33ad44"}
