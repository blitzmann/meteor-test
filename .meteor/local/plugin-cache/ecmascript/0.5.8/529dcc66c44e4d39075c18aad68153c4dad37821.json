{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/practicalmeteor:mocha/test/compiler/foo.js","filenameRelative":"/packages/practicalmeteor:mocha/test/compiler/foo.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/practicalmeteor:mocha/test/compiler/foo.js.map","sourceFileName":"/packages/practicalmeteor:mocha/test/compiler/foo.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"foo"},"ignored":false,"code":"var fs = require('fs');\nrequire.extensions['.foo'] = function (module, filename) {\n  var content;\n  content = fs.readFileSync(filename, 'utf8');\n  var test = 'describe(\"custom compiler\",function(){ it(\"should work\",function() { ' + content + '.should.eql(1); }); });';\n  return module._compile(test, filename);\n};","ast":null,"map":{"version":3,"sources":["/packages/practicalmeteor:mocha/test/compiler/foo.js"],"names":[],"mappings":"AAAA,IAAI,KAAK,QAAQ,IAAR,CAAT;AACA,QAAQ,UAAR,CAAmB,MAAnB,IAA6B,UAAS,MAAT,EAAiB,QAAjB,EAA2B;AACtD,MAAI,OAAJ;AACA,YAAU,GAAG,YAAH,CAAgB,QAAhB,EAA0B,MAA1B,CAAV;AACA,MAAI,OAAO,0EACP,OADO,GACG,yBADd;AAEA,SAAO,OAAO,QAAP,CAAgB,IAAhB,EAAsB,QAAtB,CAAP;AACD,CAND","file":"/packages/practicalmeteor:mocha/test/compiler/foo.js.map","sourcesContent":["var fs = require('fs');\nrequire.extensions['.foo'] = function(module, filename) {\n  var content;\n  content = fs.readFileSync(filename, 'utf8');\n  var test = 'describe(\"custom compiler\",function(){ it(\"should work\",function() { '\n    + content + '.should.eql(1); }); });';\n  return module._compile(test, filename);\n};\n"]},"hash":"529dcc66c44e4d39075c18aad68153c4dad37821"}
