{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/practicalmeteor:mocha/test/acceptance/interfaces/exports.js","filenameRelative":"/packages/practicalmeteor:mocha/test/acceptance/interfaces/exports.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/practicalmeteor:mocha/test/acceptance/interfaces/exports.js.map","sourceFileName":"/packages/practicalmeteor:mocha/test/acceptance/interfaces/exports.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"exports"},"ignored":false,"code":"var calls = [];\n\nexports.Array = {\n  before: function before() {\n    calls.push('before');\n  },\n\n  after: function after() {\n    calls.push('after');\n    calls.should.eql(['before', 'before each', 'one', 'after each', 'before each', 'two', 'after each', 'after']);\n  },\n\n  '#indexOf()': {\n    beforeEach: function beforeEach() {\n      calls.push('before each');\n    },\n\n    afterEach: function afterEach() {\n      calls.push('after each');\n    },\n\n    'should return -1 when the value is not present': function shouldReturn1WhenTheValueIsNotPresent() {\n      calls.push('one');\n      [1, 2, 3].indexOf(5).should.equal(-1);\n      [1, 2, 3].indexOf(0).should.equal(-1);\n    },\n\n    'should return the correct index when the value is present': function shouldReturnTheCorrectIndexWhenTheValueIsPresent() {\n      calls.push('two');\n      [1, 2, 3].indexOf(1).should.equal(0);\n      [1, 2, 3].indexOf(2).should.equal(1);\n      [1, 2, 3].indexOf(3).should.equal(2);\n    }\n  }\n};","ast":null,"map":{"version":3,"sources":["/packages/practicalmeteor:mocha/test/acceptance/interfaces/exports.js"],"names":[],"mappings":"AAAA,IAAI,QAAQ,EAAZ;;AAEA,QAAQ,KAAR,GAAgB;AACd,UAAQ,kBAAU;AAChB,UAAM,IAAN,CAAW,QAAX;AACD,GAHa;;AAKd,SAAO,iBAAU;AACf,UAAM,IAAN,CAAW,OAAX;AACA,UAAM,MAAN,CAAa,GAAb,CAAiB,CACb,QADa,EAEb,aAFa,EAGb,KAHa,EAIb,YAJa,EAKb,aALa,EAMb,KANa,EAOb,YAPa,EAQb,OARa,CAAjB;AASD,GAhBa;;AAkBd,gBAAc;AACZ,gBAAY,sBAAU;AACpB,YAAM,IAAN,CAAW,aAAX;AACD,KAHW;;AAKZ,eAAW,qBAAU;AACnB,YAAM,IAAN,CAAW,YAAX;AACD,KAPW;;AASZ,sDAAkD,iDAAU;AAC1D,YAAM,IAAN,CAAW,KAAX;AACA,OAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAQ,OAAR,CAAgB,CAAhB,EAAmB,MAAnB,CAA0B,KAA1B,CAAgC,CAAC,CAAjC;AACA,OAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAQ,OAAR,CAAgB,CAAhB,EAAmB,MAAnB,CAA0B,KAA1B,CAAgC,CAAC,CAAjC;AACD,KAbW;;AAeZ,iEAA6D,4DAAU;AACrE,YAAM,IAAN,CAAW,KAAX;AACA,OAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAQ,OAAR,CAAgB,CAAhB,EAAmB,MAAnB,CAA0B,KAA1B,CAAgC,CAAhC;AACA,OAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAQ,OAAR,CAAgB,CAAhB,EAAmB,MAAnB,CAA0B,KAA1B,CAAgC,CAAhC;AACA,OAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAQ,OAAR,CAAgB,CAAhB,EAAmB,MAAnB,CAA0B,KAA1B,CAAgC,CAAhC;AACD;AApBW;AAlBA,CAAhB","file":"/packages/practicalmeteor:mocha/test/acceptance/interfaces/exports.js.map","sourcesContent":["var calls = [];\n\nexports.Array = {\n  before: function(){\n    calls.push('before');\n  },\n\n  after: function(){\n    calls.push('after');\n    calls.should.eql([\n        'before'\n      , 'before each'\n      , 'one'\n      , 'after each'\n      , 'before each'\n      , 'two'\n      , 'after each'\n      , 'after']);\n  },\n\n  '#indexOf()': {\n    beforeEach: function(){\n      calls.push('before each');\n    },\n\n    afterEach: function(){\n      calls.push('after each');\n    },\n\n    'should return -1 when the value is not present': function(){\n      calls.push('one');\n      [1,2,3].indexOf(5).should.equal(-1);\n      [1,2,3].indexOf(0).should.equal(-1);\n    },\n\n    'should return the correct index when the value is present': function(){\n      calls.push('two');\n      [1,2,3].indexOf(1).should.equal(0);\n      [1,2,3].indexOf(2).should.equal(1);\n      [1,2,3].indexOf(3).should.equal(2);\n    }\n  }\n};\n"]},"hash":"c06f25eebc284891c1353f4d806feaad2d6ac742"}
