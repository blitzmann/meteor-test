{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/practicalmeteor:mocha/test/integration/fixtures/diffs/diffs.js","filenameRelative":"/packages/practicalmeteor:mocha/test/integration/fixtures/diffs/diffs.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/practicalmeteor:mocha/test/integration/fixtures/diffs/diffs.js.map","sourceFileName":"/packages/practicalmeteor:mocha/test/integration/fixtures/diffs/diffs.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"diffs"},"ignored":false,"code":"var fs = require('fs');\nvar assert = require('assert');\nvar cssin = fs.readFileSync('test/integration/fixtures/diffs/diffs.css.in', 'ascii');\nvar cssout = fs.readFileSync('test/integration/fixtures/diffs/diffs.css.out', 'ascii');\n\ndescribe('diffs', function () {\n  var actual, expected;\n\n  it('should display a diff for small strings', function () {\n    actual = 'foo rar baz';\n    expected = 'foo bar baz';\n    actual.should.equal(expected);\n  });\n\n  it('should display a diff of canonicalized objects', function () {\n    actual = { name: 'travis j', age: 23 };\n    expected = { age: 23, name: 'travis' };\n    actual.should.equal(expected);\n  });\n\n  it('should display a diff for medium strings', function () {\n    actual = 'foo bar baz\\nfoo rar baz\\nfoo bar raz';\n    expected = 'foo bar baz\\nfoo bar baz\\nfoo bar baz';\n    actual.should.equal(expected);\n  });\n\n  it('should display a diff for entire object dumps', function () {\n    actual = { name: 'joel', age: 30, address: { city: 'new york', country: 'usa' } };\n    expected = { name: 'joe', age: 30, address: { city: 'new york', country: 'us' } };\n    actual.should.equal(expected);\n  });\n\n  it('should display a diff for multi-line strings', function () {\n    actual = 'one two three\\nfour zzzz six\\nseven eight nine';\n    expected = 'one two three\\nfour five six\\nseven eight nine';\n    actual.should.equal(expected);\n  });\n\n  it('should display a diff for entire object dumps', function () {\n    actual = { name: 'joel', age: 30, address: { city: 'new york', country: 'usa' } };\n    expected = { name: 'joe', age: 30, address: { city: 'new york', country: 'us' } };\n    actual.should.equal(expected);\n  });\n\n  it('should display a full-comparison with escaped special characters', function () {\n    actual = 'one\\ttab\\ntwo\\t\\t\\ttabs';\n    expected = 'one\\ttab\\ntwo\\t\\ttabs';\n    actual.should.equal(expected);\n  });\n\n  it('should display a word diff for large strings', function () {\n    cssin.should.equal(cssout);\n  });\n\n  it('should work with objects', function () {\n    actual = {\n      name: 'tobi',\n      species: 'ferret',\n      color: 'white',\n      age: 2\n    };\n\n    expected = {\n      name: 'loki',\n      species: 'ferret',\n      color: 'brown',\n      age: 2\n    };\n\n    actual.should.eql(expected);\n  });\n\n  it('should show value diffs and not be affected by commas', function () {\n    actual = { a: 123 };\n    expected = { a: 123, b: 456 };\n    actual.should.equal(expected);\n  });\n\n  it('should display diff by data and not like an objects', function () {\n    actual = new Buffer([0x01]);\n    expected = new Buffer([0x02]);\n    actual.should.equal(expected);\n  });\n});","ast":null,"map":{"version":3,"sources":["/packages/practicalmeteor:mocha/test/integration/fixtures/diffs/diffs.js"],"names":[],"mappings":"AAAA,IAAI,KAAS,QAAQ,IAAR,CAAb;AACA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,QAAS,GAAG,YAAH,CAAgB,8CAAhB,EAAgE,OAAhE,CAAb;AACA,IAAI,SAAS,GAAG,YAAH,CAAgB,+CAAhB,EAAiE,OAAjE,CAAb;;AAEA,SAAS,OAAT,EAAkB,YAAW;AAC3B,MAAI,MAAJ,EAAY,QAAZ;;AAEA,KAAG,yCAAH,EAA8C,YAAW;AACvD,aAAS,aAAT;AACA,eAAW,aAAX;AACA,WAAO,MAAP,CAAc,KAAd,CAAoB,QAApB;AACD,GAJD;;AAMA,KAAG,gDAAH,EAAqD,YAAW;AAC9D,aAAS,EAAE,MAAM,UAAR,EAAoB,KAAK,EAAzB,EAAT;AACA,eAAW,EAAE,KAAK,EAAP,EAAW,MAAM,QAAjB,EAAX;AACA,WAAO,MAAP,CAAc,KAAd,CAAoB,QAApB;AACD,GAJD;;AAMA,KAAG,0CAAH,EAA+C,YAAW;AACxD,aAAS,uCAAT;AACA,eAAW,uCAAX;AACA,WAAO,MAAP,CAAc,KAAd,CAAoB,QAApB;AACD,GAJD;;AAMA,KAAG,+CAAH,EAAoD,YAAW;AAC7D,aAAW,EAAE,MAAM,MAAR,EAAgB,KAAK,EAArB,EAAyB,SAAS,EAAC,MAAM,UAAP,EAAmB,SAAS,KAA5B,EAAlC,EAAX;AACA,eAAW,EAAE,MAAM,KAAR,EAAgB,KAAK,EAArB,EAAyB,SAAS,EAAC,MAAM,UAAP,EAAmB,SAAS,IAA5B,EAAlC,EAAX;AACA,WAAO,MAAP,CAAc,KAAd,CAAoB,QAApB;AACD,GAJD;;AAMA,KAAG,8CAAH,EAAmD,YAAW;AAC5D,aAAW,gDAAX;AACA,eAAW,gDAAX;AACA,WAAO,MAAP,CAAc,KAAd,CAAoB,QAApB;AACD,GAJD;;AAMA,KAAG,+CAAH,EAAoD,YAAW;AAC7D,aAAW,EAAE,MAAM,MAAR,EAAgB,KAAK,EAArB,EAAyB,SAAS,EAAC,MAAM,UAAP,EAAmB,SAAS,KAA5B,EAAlC,EAAX;AACA,eAAW,EAAE,MAAM,KAAR,EAAgB,KAAK,EAArB,EAAyB,SAAS,EAAC,MAAM,UAAP,EAAmB,SAAS,IAA5B,EAAlC,EAAX;AACA,WAAO,MAAP,CAAc,KAAd,CAAoB,QAApB;AACD,GAJD;;AAMA,KAAG,kEAAH,EAAuE,YAAW;AAChF,aAAW,yBAAX;AACA,eAAW,uBAAX;AACA,WAAO,MAAP,CAAc,KAAd,CAAoB,QAApB;AACD,GAJD;;AAMA,KAAG,8CAAH,EAAmD,YAAW;AAC5D,UAAM,MAAN,CAAa,KAAb,CAAmB,MAAnB;AACD,GAFD;;AAIA,KAAG,0BAAH,EAA+B,YAAW;AACxC,aAAS;AACP,YAAM,MADC;AAEP,eAAS,QAFF;AAGP,aAAO,OAHA;AAIP,WAAK;AAJE,KAAT;;AAOA,eAAW;AACT,YAAM,MADG;AAET,eAAS,QAFA;AAGT,aAAO,OAHE;AAIT,WAAK;AAJI,KAAX;;AAOA,WAAO,MAAP,CAAc,GAAd,CAAkB,QAAlB;AACD,GAhBD;;AAkBA,KAAG,uDAAH,EAA4D,YAAW;AACrE,aAAS,EAAE,GAAG,GAAL,EAAT;AACA,eAAW,EAAE,GAAG,GAAL,EAAU,GAAG,GAAb,EAAX;AACA,WAAO,MAAP,CAAc,KAAd,CAAoB,QAApB;AACD,GAJD;;AAMA,KAAG,qDAAH,EAA0D,YAAW;AACnE,aAAS,IAAI,MAAJ,CAAW,CAAC,IAAD,CAAX,CAAT;AACA,eAAW,IAAI,MAAJ,CAAW,CAAC,IAAD,CAAX,CAAX;AACA,WAAO,MAAP,CAAc,KAAd,CAAoB,QAApB;AACD,GAJD;AAKD,CA9ED","file":"/packages/practicalmeteor:mocha/test/integration/fixtures/diffs/diffs.js.map","sourcesContent":["var fs     = require('fs');\nvar assert = require('assert');\nvar cssin  = fs.readFileSync('test/integration/fixtures/diffs/diffs.css.in', 'ascii');\nvar cssout = fs.readFileSync('test/integration/fixtures/diffs/diffs.css.out', 'ascii');\n\ndescribe('diffs', function() {\n  var actual, expected;\n\n  it('should display a diff for small strings', function() {\n    actual = 'foo rar baz';\n    expected = 'foo bar baz';\n    actual.should.equal(expected);\n  });\n\n  it('should display a diff of canonicalized objects', function() {\n    actual = { name: 'travis j', age: 23 };\n    expected = { age: 23, name: 'travis' };\n    actual.should.equal(expected);\n  });\n\n  it('should display a diff for medium strings', function() {\n    actual = 'foo bar baz\\nfoo rar baz\\nfoo bar raz';\n    expected = 'foo bar baz\\nfoo bar baz\\nfoo bar baz';\n    actual.should.equal(expected);\n  });\n\n  it('should display a diff for entire object dumps', function() {\n    actual   = { name: 'joel', age: 30, address: {city: 'new york', country: 'usa' }};\n    expected = { name: 'joe',  age: 30, address: {city: 'new york', country: 'us'  }};\n    actual.should.equal(expected);\n  });\n\n  it('should display a diff for multi-line strings', function() {\n    actual   = 'one two three\\nfour zzzz six\\nseven eight nine';\n    expected = 'one two three\\nfour five six\\nseven eight nine';\n    actual.should.equal(expected);\n  });\n\n  it('should display a diff for entire object dumps', function() {\n    actual   = { name: 'joel', age: 30, address: {city: 'new york', country: 'usa' }};\n    expected = { name: 'joe',  age: 30, address: {city: 'new york', country: 'us'  }}\n    actual.should.equal(expected);\n  });\n\n  it('should display a full-comparison with escaped special characters', function() {\n    actual   = 'one\\ttab\\ntwo\\t\\t\\ttabs';\n    expected = 'one\\ttab\\ntwo\\t\\ttabs';\n    actual.should.equal(expected);\n  });\n\n  it('should display a word diff for large strings', function() {\n    cssin.should.equal(cssout);\n  });\n\n  it('should work with objects', function() {\n    actual = {\n      name: 'tobi',\n      species: 'ferret',\n      color: 'white',\n      age: 2\n    };\n\n    expected = {\n      name: 'loki',\n      species: 'ferret',\n      color: 'brown',\n      age: 2\n    };\n\n    actual.should.eql(expected);\n  });\n\n  it('should show value diffs and not be affected by commas', function() {\n    actual = { a: 123 };\n    expected = { a: 123, b: 456 };\n    actual.should.equal(expected);\n  });\n\n  it('should display diff by data and not like an objects', function() {\n    actual = new Buffer([0x01]);\n    expected = new Buffer([0x02]);\n    actual.should.equal(expected);\n  });\n});\n"]},"hash":"48cb49f1da18cc06ada81d6cf69ece2ed79e1c2c"}
