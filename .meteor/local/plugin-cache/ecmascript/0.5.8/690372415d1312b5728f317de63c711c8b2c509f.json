{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"angular-mocks","imported":[],"specifiers":[]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/practicalmeteor:chai","imported":["assert"],"specifiers":[{"kind":"named","imported":"assert","local":"assert"}]},{"source":"meteor/practicalmeteor:sinon","imported":["sinon"],"specifiers":[{"kind":"named","imported":"sinon","local":"sinon"}]},{"source":"../todosList","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"todosList"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/components/todosList/todosLists.test.js","filenameRelative":"/imports/components/todosList/todosLists.test.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/components/todosList/todosLists.test.js.map","sourceFileName":"/imports/components/todosList/todosLists.test.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"todosLists.test"},"ignored":false,"code":"module.import('angular-mocks');var Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});var assert;module.import('meteor/practicalmeteor:chai',{\"assert\":function(v){assert=v}});var sinon;module.import('meteor/practicalmeteor:sinon',{\"sinon\":function(v){sinon=v}});var todosList;module.import('../todosList',{\"default\":function(v){todosList=v}});/* eslint-env mocha */\n\n\n\n\n\n\n\ndescribe('todosList', function () {\n  var element;\n\n  beforeEach(function () {\n    var $compile;\n    var $rootScope;\n\n    //window.module(todosList.name);\n\n    inject(function (_$compile_, _$rootScope_) {\n      $compile = _$compile_;\n      $rootScope = _$rootScope_;\n    });\n\n    element = $compile('<todos-list></todos-list>')($rootScope.$new(true));\n    $rootScope.$digest();\n  });\n\n  describe('component', function () {\n    it('should be showing incomplete tasks count', function () {\n      assert.include(element[0].querySelector('h1').innerHTML, '0');\n    });\n  });\n});","ast":null,"map":{"version":3,"sources":["/imports/components/todosList/todosLists.test.js"],"names":[],"mappings":";;AAEA,OAAO,eAAP;AACA,SAAS,MAAT,QAAuB,eAAvB;AACA,SAAS,MAAT,QAAuB,6BAAvB;AACA,SAAS,KAAT,QAAsB,8BAAtB;AACA,OAAO,SAAP,MAAsB,cAAtB;;AAEA,SAAS,WAAT,EAAsB,YAAW;AAC/B,MAAI,OAAJ;;AAEA,aAAW,YAAW;AACpB,QAAI,QAAJ;AACA,QAAI,UAAJ;;;;AAIA,WAAO,UAAS,UAAT,EAAqB,YAArB,EAAkC;AACvC,iBAAW,UAAX;AACA,mBAAa,YAAb;AACD,KAHD;;AAKA,cAAU,SAAS,2BAAT,EAAsC,WAAW,IAAX,CAAgB,IAAhB,CAAtC,CAAV;AACA,eAAW,OAAX;AACD,GAbD;;AAeA,WAAS,WAAT,EAAsB,YAAW;AAC/B,OAAG,0CAAH,EAA+C,YAAW;AACxD,aAAO,OAAP,CAAe,QAAQ,CAAR,EAAW,aAAX,CAAyB,IAAzB,EAA+B,SAA9C,EAAyD,GAAzD;AACD,KAFD;AAGD,GAJD;AAKD,CAvBD","file":"/imports/components/todosList/todosLists.test.js.map","sourcesContent":["/* eslint-env mocha */\r\n\r\nimport 'angular-mocks';\r\nimport { Meteor } from 'meteor/meteor';\r\nimport { assert } from 'meteor/practicalmeteor:chai';\r\nimport { sinon } from 'meteor/practicalmeteor:sinon';\r\nimport todosList from '../todosList';\r\n\r\ndescribe('todosList', function() {\r\n  var element;\r\n\r\n  beforeEach(function() {\r\n    var $compile;\r\n    var $rootScope;\r\n\r\n    //window.module(todosList.name);\r\n\r\n    inject(function(_$compile_, _$rootScope_){\r\n      $compile = _$compile_;\r\n      $rootScope = _$rootScope_;\r\n    });\r\n\r\n    element = $compile('<todos-list></todos-list>')($rootScope.$new(true));\r\n    $rootScope.$digest();\r\n  });\r\n\r\n  describe('component', function() {\r\n    it('should be showing incomplete tasks count', function() {\r\n      assert.include(element[0].querySelector('h1').innerHTML, '0');\r\n    });\r\n  });\r\n})\r\n"]},"hash":"690372415d1312b5728f317de63c711c8b2c509f"}
