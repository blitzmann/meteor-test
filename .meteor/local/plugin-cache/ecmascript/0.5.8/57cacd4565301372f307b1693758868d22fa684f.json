{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/practicalmeteor:mocha/test/integration/regression.js","filenameRelative":"/packages/practicalmeteor:mocha/test/integration/regression.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/practicalmeteor:mocha/test/integration/regression.js.map","sourceFileName":"/packages/practicalmeteor:mocha/test/integration/regression.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"regression"},"ignored":false,"code":"var assert = require('assert');\nvar fs = require('fs');\nvar path = require('path');\nvar run = require('./helpers').runMocha;\n\ndescribe('regressions', function () {\n  this.timeout(1000);\n\n  it('issue-1327: should run all 3 specs exactly once', function (done) {\n    var args = [];\n    run('regression/issue-1327.js', args, function (err, res) {\n      var occurences = function occurences(str) {\n        var pattern = new RegExp(str, 'g');\n        return (res.output.match(pattern) || []).length;\n      };\n\n      assert(!err);\n      assert.equal(occurences('testbody1'), 1);\n      assert.equal(occurences('testbody2'), 1);\n      assert.equal(occurences('testbody3'), 1);\n\n      assert.equal(res.code, 1);\n      done();\n    });\n  });\n\n  it('should not duplicate mocha.opts args in process.argv', function () {\n    var processArgv = process.argv.join('');\n    var mochaOpts = fs.readFileSync(path.join(__dirname, '..', 'mocha.opts'), 'utf-8').split(/[\\s]+/).join('');\n    assert.notEqual(processArgv.indexOf(mochaOpts), -1, 'process.argv missing mocha.opts');\n    assert.equal(processArgv.indexOf(mochaOpts), processArgv.lastIndexOf(mochaOpts), 'process.argv contains duplicated mocha.opts');\n  });\n\n  it('issue-1794: Can\\'t --require custom UI and use it', function (done) {\n    var simpleUiPath = path.join(__dirname, 'fixtures', 'regression', '1794', 'simple-ui.js');\n    var args = ['--require', simpleUiPath, '--ui', 'simple-ui'];\n    run('regression/1794/issue-1794.js', args, function (err, res) {\n      assert.equal(res.code, 0, 'Custom UI should be loaded');\n      done();\n    });\n  });\n\n  it('issue-1991: Declarations do not get cleaned up unless you set them to `null` - Memory Leak', function (done) {\n    // on a modern MBP takes ±5 seconds on node 4.0, but on older laptops with node 0.12 ±40 seconds.\n    // Could easily take longer on even weaker machines (Travis-CI containers for example).\n    this.timeout(120000);\n    run('regression/issue-1991.js', [], function (err, res) {\n      assert.equal(/process out of memory/.test(res.output), false, 'fixture\\'s process out of memory!');\n      assert.equal(res.code, 0, 'Runnable fn (it/before[Each]/after[Each]) references should be deleted to avoid memory leaks');\n      done();\n    });\n  });\n});","ast":null,"map":{"version":3,"sources":["/packages/practicalmeteor:mocha/test/integration/regression.js"],"names":[],"mappings":"AAAA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,KAAS,QAAQ,IAAR,CAAb;AACA,IAAI,OAAS,QAAQ,MAAR,CAAb;AACA,IAAI,MAAS,QAAQ,WAAR,EAAqB,QAAlC;;AAEA,SAAS,aAAT,EAAwB,YAAW;AACjC,OAAK,OAAL,CAAa,IAAb;;AAEA,KAAG,iDAAH,EAAsD,UAAS,IAAT,EAAe;AACnE,QAAI,OAAO,EAAX;AACA,QAAI,0BAAJ,EAAgC,IAAhC,EAAsC,UAAS,GAAT,EAAc,GAAd,EAAmB;AACvD,UAAI,aAAa,SAAb,UAAa,CAAS,GAAT,EAAc;AAC7B,YAAI,UAAU,IAAI,MAAJ,CAAW,GAAX,EAAgB,GAAhB,CAAd;AACA,eAAO,CAAC,IAAI,MAAJ,CAAW,KAAX,CAAiB,OAAjB,KAA6B,EAA9B,EAAkC,MAAzC;AACD,OAHD;;AAKA,aAAO,CAAC,GAAR;AACA,aAAO,KAAP,CAAa,WAAW,WAAX,CAAb,EAAsC,CAAtC;AACA,aAAO,KAAP,CAAa,WAAW,WAAX,CAAb,EAAsC,CAAtC;AACA,aAAO,KAAP,CAAa,WAAW,WAAX,CAAb,EAAsC,CAAtC;;AAEA,aAAO,KAAP,CAAa,IAAI,IAAjB,EAAuB,CAAvB;AACA;AACD,KAbD;AAcD,GAhBD;;AAkBA,KAAG,sDAAH,EAA2D,YAAW;AACpE,QAAI,cAAc,QAAQ,IAAR,CAAa,IAAb,CAAkB,EAAlB,CAAlB;AACA,QAAI,YAAY,GAAG,YAAH,CAAgB,KAAK,IAAL,CAAU,SAAV,EAAqB,IAArB,EAA2B,YAA3B,CAAhB,EAA0D,OAA1D,EAAmE,KAAnE,CAAyE,OAAzE,EAAkF,IAAlF,CAAuF,EAAvF,CAAhB;AACA,WAAO,QAAP,CAAgB,YAAY,OAAZ,CAAoB,SAApB,CAAhB,EAAgD,CAAC,CAAjD,EAAoD,iCAApD;AACA,WAAO,KAAP,CAAa,YAAY,OAAZ,CAAoB,SAApB,CAAb,EAA6C,YAAY,WAAZ,CAAwB,SAAxB,CAA7C,EAAiF,6CAAjF;AACD,GALD;;AAOA,KAAG,mDAAH,EAAwD,UAAS,IAAT,EAAe;AACrE,QAAI,eAAe,KAAK,IAAL,CAAU,SAAV,EAAqB,UAArB,EAAiC,YAAjC,EAA+C,MAA/C,EAAuD,cAAvD,CAAnB;AACA,QAAI,OAAO,CAAC,WAAD,EAAc,YAAd,EAA4B,MAA5B,EAAoC,WAApC,CAAX;AACA,QAAI,+BAAJ,EAAqC,IAArC,EAA2C,UAAS,GAAT,EAAc,GAAd,EAAmB;AAC5D,aAAO,KAAP,CAAa,IAAI,IAAjB,EAAuB,CAAvB,EAA0B,4BAA1B;AACA;AACD,KAHD;AAID,GAPD;;AASA,KAAG,4FAAH,EAAiG,UAAS,IAAT,EAAe;;;AAG9G,SAAK,OAAL,CAAa,MAAb;AACA,QAAI,0BAAJ,EAAgC,EAAhC,EAAoC,UAAS,GAAT,EAAc,GAAd,EAAmB;AACrD,aAAO,KAAP,CAAa,wBAAwB,IAAxB,CAA6B,IAAI,MAAjC,CAAb,EAAuD,KAAvD,EAA8D,mCAA9D;AACA,aAAO,KAAP,CAAa,IAAI,IAAjB,EAAuB,CAAvB,EAA0B,8FAA1B;AACA;AACD,KAJD;AAKD,GATD;AAUD,CA/CD","file":"/packages/practicalmeteor:mocha/test/integration/regression.js.map","sourcesContent":["var assert = require('assert');\nvar fs     = require('fs');\nvar path   = require('path');\nvar run    = require('./helpers').runMocha;\n\ndescribe('regressions', function() {\n  this.timeout(1000);\n\n  it('issue-1327: should run all 3 specs exactly once', function(done) {\n    var args = [];\n    run('regression/issue-1327.js', args, function(err, res) {\n      var occurences = function(str) {\n        var pattern = new RegExp(str, 'g');\n        return (res.output.match(pattern) || []).length;\n      };\n\n      assert(!err);\n      assert.equal(occurences('testbody1'), 1);\n      assert.equal(occurences('testbody2'), 1);\n      assert.equal(occurences('testbody3'), 1);\n\n      assert.equal(res.code, 1);\n      done();\n    });\n  });\n\n  it('should not duplicate mocha.opts args in process.argv', function() {\n    var processArgv = process.argv.join('');\n    var mochaOpts = fs.readFileSync(path.join(__dirname, '..', 'mocha.opts'), 'utf-8').split(/[\\s]+/).join('');\n    assert.notEqual(processArgv.indexOf(mochaOpts), -1, 'process.argv missing mocha.opts');\n    assert.equal(processArgv.indexOf(mochaOpts), processArgv.lastIndexOf(mochaOpts), 'process.argv contains duplicated mocha.opts');\n  });\n\n  it('issue-1794: Can\\'t --require custom UI and use it', function(done) {\n    var simpleUiPath = path.join(__dirname, 'fixtures', 'regression', '1794', 'simple-ui.js');\n    var args = ['--require', simpleUiPath, '--ui', 'simple-ui'];\n    run('regression/1794/issue-1794.js', args, function(err, res) {\n      assert.equal(res.code, 0, 'Custom UI should be loaded');\n      done();\n    });\n  });\n\n  it('issue-1991: Declarations do not get cleaned up unless you set them to `null` - Memory Leak', function(done) {\n    // on a modern MBP takes ±5 seconds on node 4.0, but on older laptops with node 0.12 ±40 seconds.\n    // Could easily take longer on even weaker machines (Travis-CI containers for example).\n    this.timeout(120000);\n    run('regression/issue-1991.js', [], function(err, res) {\n      assert.equal(/process out of memory/.test(res.output), false, 'fixture\\'s process out of memory!');\n      assert.equal(res.code, 0, 'Runnable fn (it/before[Each]/after[Each]) references should be deleted to avoid memory leaks');\n      done();\n    });\n  })\n});\n"]},"hash":"57cacd4565301372f307b1693758868d22fa684f"}
