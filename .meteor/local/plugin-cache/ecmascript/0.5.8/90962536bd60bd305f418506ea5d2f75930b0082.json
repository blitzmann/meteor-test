{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/practicalmeteor:mocha/lib/reporters/tap.js","filenameRelative":"/packages/practicalmeteor:mocha/lib/reporters/tap.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/practicalmeteor:mocha/lib/reporters/tap.js.map","sourceFileName":"/packages/practicalmeteor:mocha/lib/reporters/tap.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"tap"},"ignored":false,"code":"/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\n\n/**\n * Expose `TAP`.\n */\n\nexports = module.exports = TAP;\n\n/**\n * Initialize a new `TAP` reporter.\n *\n * @api public\n * @param {Runner} runner\n */\nfunction TAP(runner) {\n  Base.call(this, runner);\n\n  var n = 1;\n  var passes = 0;\n  var failures = 0;\n\n  runner.on('start', function () {\n    var total = runner.grepTotal(runner.suite);\n    console.log('%d..%d', 1, total);\n  });\n\n  runner.on('test end', function () {\n    ++n;\n  });\n\n  runner.on('pending', function (test) {\n    console.log('ok %d %s # SKIP -', n, title(test));\n  });\n\n  runner.on('pass', function (test) {\n    passes++;\n    console.log('ok %d %s', n, title(test));\n  });\n\n  runner.on('fail', function (test, err) {\n    failures++;\n    console.log('not ok %d %s', n, title(test));\n    if (err.stack) {\n      console.log(err.stack.replace(/^/gm, '  '));\n    }\n  });\n\n  runner.on('end', function () {\n    console.log('# tests ' + (passes + failures));\n    console.log('# pass ' + passes);\n    console.log('# fail ' + failures);\n  });\n}\n\n/**\n * Return a TAP-safe title of `test`\n *\n * @api private\n * @param {Object} test\n * @return {String}\n */\nfunction title(test) {\n  return test.fullTitle().replace(/#/g, '');\n}","ast":null,"map":{"version":3,"sources":["/packages/practicalmeteor:mocha/lib/reporters/tap.js"],"names":[],"mappings":";;;;AAIA,IAAI,OAAO,QAAQ,QAAR,CAAX;;;;;;AAMA,UAAU,OAAO,OAAP,GAAiB,GAA3B;;;;;;;;AAQA,SAAS,GAAT,CAAa,MAAb,EAAqB;AACnB,OAAK,IAAL,CAAU,IAAV,EAAgB,MAAhB;;AAEA,MAAI,IAAI,CAAR;AACA,MAAI,SAAS,CAAb;AACA,MAAI,WAAW,CAAf;;AAEA,SAAO,EAAP,CAAU,OAAV,EAAmB,YAAW;AAC5B,QAAI,QAAQ,OAAO,SAAP,CAAiB,OAAO,KAAxB,CAAZ;AACA,YAAQ,GAAR,CAAY,QAAZ,EAAsB,CAAtB,EAAyB,KAAzB;AACD,GAHD;;AAKA,SAAO,EAAP,CAAU,UAAV,EAAsB,YAAW;AAC/B,MAAE,CAAF;AACD,GAFD;;AAIA,SAAO,EAAP,CAAU,SAAV,EAAqB,UAAS,IAAT,EAAe;AAClC,YAAQ,GAAR,CAAY,mBAAZ,EAAiC,CAAjC,EAAoC,MAAM,IAAN,CAApC;AACD,GAFD;;AAIA,SAAO,EAAP,CAAU,MAAV,EAAkB,UAAS,IAAT,EAAe;AAC/B;AACA,YAAQ,GAAR,CAAY,UAAZ,EAAwB,CAAxB,EAA2B,MAAM,IAAN,CAA3B;AACD,GAHD;;AAKA,SAAO,EAAP,CAAU,MAAV,EAAkB,UAAS,IAAT,EAAe,GAAf,EAAoB;AACpC;AACA,YAAQ,GAAR,CAAY,cAAZ,EAA4B,CAA5B,EAA+B,MAAM,IAAN,CAA/B;AACA,QAAI,IAAI,KAAR,EAAe;AACb,cAAQ,GAAR,CAAY,IAAI,KAAJ,CAAU,OAAV,CAAkB,KAAlB,EAAyB,IAAzB,CAAZ;AACD;AACF,GAND;;AAQA,SAAO,EAAP,CAAU,KAAV,EAAiB,YAAW;AAC1B,YAAQ,GAAR,CAAY,cAAc,SAAS,QAAvB,CAAZ;AACA,YAAQ,GAAR,CAAY,YAAY,MAAxB;AACA,YAAQ,GAAR,CAAY,YAAY,QAAxB;AACD,GAJD;AAKD;;;;;;;;;AASD,SAAS,KAAT,CAAe,IAAf,EAAqB;AACnB,SAAO,KAAK,SAAL,GAAiB,OAAjB,CAAyB,IAAzB,EAA+B,EAA/B,CAAP;AACD","file":"/packages/practicalmeteor:mocha/lib/reporters/tap.js.map","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar Base = require('./base');\n\n/**\n * Expose `TAP`.\n */\n\nexports = module.exports = TAP;\n\n/**\n * Initialize a new `TAP` reporter.\n *\n * @api public\n * @param {Runner} runner\n */\nfunction TAP(runner) {\n  Base.call(this, runner);\n\n  var n = 1;\n  var passes = 0;\n  var failures = 0;\n\n  runner.on('start', function() {\n    var total = runner.grepTotal(runner.suite);\n    console.log('%d..%d', 1, total);\n  });\n\n  runner.on('test end', function() {\n    ++n;\n  });\n\n  runner.on('pending', function(test) {\n    console.log('ok %d %s # SKIP -', n, title(test));\n  });\n\n  runner.on('pass', function(test) {\n    passes++;\n    console.log('ok %d %s', n, title(test));\n  });\n\n  runner.on('fail', function(test, err) {\n    failures++;\n    console.log('not ok %d %s', n, title(test));\n    if (err.stack) {\n      console.log(err.stack.replace(/^/gm, '  '));\n    }\n  });\n\n  runner.on('end', function() {\n    console.log('# tests ' + (passes + failures));\n    console.log('# pass ' + passes);\n    console.log('# fail ' + failures);\n  });\n}\n\n/**\n * Return a TAP-safe title of `test`\n *\n * @api private\n * @param {Object} test\n * @return {String}\n */\nfunction title(test) {\n  return test.fullTitle().replace(/#/g, '');\n}\n"]},"hash":"90962536bd60bd305f418506ea5d2f75930b0082"}
