{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/practicalmeteor:mocha/test/acceptance/throw.js","filenameRelative":"/packages/practicalmeteor:mocha/test/acceptance/throw.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/practicalmeteor:mocha/test/acceptance/throw.js.map","sourceFileName":"/packages/practicalmeteor:mocha/test/acceptance/throw.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"throw"},"ignored":false,"code":"var mocha = require('../../'),\n    Suite = mocha.Suite,\n    Runner = mocha.Runner,\n    Test = mocha.Test;\n\ndescribe('a test that throws', function () {\n  var suite, runner;\n\n  beforeEach(function () {\n    suite = new Suite(null, 'root');\n    runner = new Runner(suite);\n  });\n\n  this.timeout(50);\n\n  describe('undefined', function () {\n    it('should not pass if throwing sync and test is sync', function (done) {\n      var test = new Test('im sync and throw undefined sync', function () {\n        throw undefined;\n      });\n      suite.addTest(test);\n      runner = new Runner(suite);\n      runner.on('end', function () {\n        runner.failures.should.equal(1);\n        test.state.should.equal('failed');\n        done();\n      });\n      runner.run();\n    });\n\n    it('should not pass if throwing sync and test is async', function (done) {\n      var test = new Test('im async and throw undefined sync', function (done2) {\n        throw undefined;\n        process.nexTick(done2);\n      });\n      suite.addTest(test);\n      runner = new Runner(suite);\n      runner.on('end', function () {\n        runner.failures.should.equal(1);\n        test.state.should.equal('failed');\n        done();\n      });\n      runner.run();\n    });\n\n    it('should not pass if throwing async and test is async', function (done) {\n      var test = new Test('im async and throw undefined async', function (done2) {\n        process.nexTick(function () {\n          throw undefined;\n          done2();\n        });\n      });\n      suite.addTest(test);\n      runner = new Runner(suite);\n      runner.on('end', function () {\n        runner.failures.should.equal(1);\n        test.state.should.equal('failed');\n        done();\n      });\n      runner.run();\n    });\n  });\n\n  describe('null', function () {\n    it('should not pass if throwing sync and test is sync', function (done) {\n      var test = new Test('im sync and throw null sync', function () {\n        throw null;\n      });\n      suite.addTest(test);\n      runner = new Runner(suite);\n      runner.on('end', function () {\n        runner.failures.should.equal(1);\n        test.state.should.equal('failed');\n        done();\n      });\n      runner.run();\n    });\n\n    it('should not pass if throwing sync and test is async', function (done) {\n      var test = new Test('im async and throw null sync', function (done2) {\n        throw null;\n        process.nexTick(done2);\n      });\n      suite.addTest(test);\n      runner = new Runner(suite);\n      runner.on('end', function () {\n        runner.failures.should.equal(1);\n        test.state.should.equal('failed');\n        done();\n      });\n      runner.run();\n    });\n\n    it('should not pass if throwing async and test is async', function (done) {\n      var test = new Test('im async and throw null async', function (done2) {\n        process.nexTick(function () {\n          throw null;\n          done2();\n        });\n      });\n      suite.addTest(test);\n      runner = new Runner(suite);\n      runner.on('end', function () {\n        runner.failures.should.equal(1);\n        test.state.should.equal('failed');\n        done();\n      });\n      runner.run();\n    });\n  });\n});","ast":null,"map":{"version":3,"sources":["/packages/practicalmeteor:mocha/test/acceptance/throw.js"],"names":[],"mappings":"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","file":"/packages/practicalmeteor:mocha/test/acceptance/throw.js.map","sourcesContent":["var mocha = require('../../')\n  , Suite = mocha.Suite\n  , Runner = mocha.Runner\n  , Test = mocha.Test;\n\ndescribe('a test that throws', function () {\n  var suite, runner;\n\n  beforeEach(function(){\n    suite = new Suite(null, 'root');\n    runner = new Runner(suite);\n  })\n\n  this.timeout(50);\n\n  describe('undefined', function (){\n    it('should not pass if throwing sync and test is sync', function(done) {\n      var test = new Test('im sync and throw undefined sync', function(){\n        throw undefined;\n      });\n      suite.addTest(test);\n      runner = new Runner(suite);\n      runner.on('end', function(){\n        runner.failures.should.equal(1);\n        test.state.should.equal('failed');\n        done();\n      });\n      runner.run();\n    })\n\n    it('should not pass if throwing sync and test is async', function(done){\n      var test = new Test('im async and throw undefined sync', function(done2){\n        throw undefined;\n        process.nexTick(done2);\n      });\n      suite.addTest(test);\n      runner = new Runner(suite);\n      runner.on('end', function(){\n        runner.failures.should.equal(1);\n        test.state.should.equal('failed');\n        done();\n      });\n      runner.run();\n    });\n\n    it('should not pass if throwing async and test is async', function(done){\n      var test = new Test('im async and throw undefined async', function(done2){\n        process.nexTick(function(){\n          throw undefined;\n          done2();\n        });\n      });\n      suite.addTest(test);\n      runner = new Runner(suite);\n      runner.on('end', function(){\n        runner.failures.should.equal(1);\n        test.state.should.equal('failed');\n        done();\n      });\n      runner.run();\n    })\n  })\n\n  describe('null', function (){\n    it('should not pass if throwing sync and test is sync', function(done) {\n      var test = new Test('im sync and throw null sync', function(){\n        throw null;\n      });\n      suite.addTest(test);\n      runner = new Runner(suite);\n      runner.on('end', function(){\n        runner.failures.should.equal(1);\n        test.state.should.equal('failed');\n        done();\n      });\n      runner.run();\n    })\n\n    it('should not pass if throwing sync and test is async', function(done){\n      var test = new Test('im async and throw null sync', function(done2){\n        throw null;\n        process.nexTick(done2);\n      });\n      suite.addTest(test);\n      runner = new Runner(suite);\n      runner.on('end', function(){\n        runner.failures.should.equal(1);\n        test.state.should.equal('failed');\n        done();\n      });\n      runner.run();\n    });\n\n    it('should not pass if throwing async and test is async', function(done){\n      var test = new Test('im async and throw null async', function(done2){\n        process.nexTick(function(){\n          throw null;\n          done2();\n        });\n      });\n      suite.addTest(test);\n      runner = new Runner(suite);\n      runner.on('end', function(){\n        runner.failures.should.equal(1);\n        test.state.should.equal('failed');\n        done();\n      });\n      runner.run();\n    })\n  })\n})"]},"hash":"5d17595b8c94707e4708181191297fbc9900e9d8"}
